{"version":3,"sources":["history.js","components/Api.js","features/userSlice.js","components/Config.js","components/CommonFunction.js","components/spinner/Spinner.js","components/modals/forget.js","components/modals/signin.js","components/modals/logout.js","ThemeContaxt/ThemeContaxt.js","DarkAndLightMode/DarkAndLightMode.js","components/Menu.js","components/modals/reset.js","GlobalStyles/GlobalStyles.js","components/Header.js","components/Footer.js","components/owl-carousel.js","components/Contact-us.js","pages/Home.js","pages/About.js","pages/Eshop.js","pages/Affiliate.js","pages/Learningmanagementsystem.js","components/exam/questionsCount.js","components/exam/Comment.js","components/exam/statistics.js","components/exam/examTimer.js","components/exam/testTimer.js","components/exam/Question.js","components/exam/testNav.js","components/exam/SavedTestLists.js","pages/Freetest.js","components/accordion.js","pages/Package.js","pages/test/Report.js","pages/user/Dashboard.js","pages/NotFound.js","components/modals/edit.js","pages/user/MyProfile.js","Pagination/Pagination.js","pages/user/Reports.js","pages/user/Auth/Verify.js","pages/user/payment/Callback.js","pages/user/Subscription.js","pages/user/subscriptionDetail.js","pages/Blog.js","pages/BlogSingle.js","pages/Forum.js","pages/Topic.js","pages/SingleTopic.js","pages/test/ResumeSavedTest.js","pages/ContactUs.js","pages/TermsAndCondition.js","pages/AffiliateTermsAndCondition.js","pages/Affiliate/Dashboard.js","pages/Affiliate/Withdraw.js","pages/Affiliate/SubscribeUsers.js","pages/Affiliate/Transaction.js","protected.route.js","affiliateRoute.js","pages/Faq.js","components/modals/questiondetails.js","pages/user/SearchandFeedback.js","pages/user/Supportlist.js","pages/user/DownloadApp.js","pages/user/Resources.js","pages/user/TicketDetails.js","pages/user/CreateTicket.js","pages/Learningmanagement/Supportlist.js","pages/Learningmanagement/MyProfile.js","pages/Learningmanagement/TicketDetails.js","pages/Learningmanagement/CreateTicket.js","pages/user/TeacherSubscription.js","pages/Affiliate/SignIn.js","pages/Learningmanagement/SignIn.js","pages/Learningmanagement/Dashboard.js","components/exam/LmsQuestion.js","pages/Learningmanagement/Createtest.js","pages/Learningmanagement/Subscription.js","pages/Learningmanagement/ExamList.js","pages/Learningmanagement/StdentExamList.js","pages/Learningmanagement/Report.js","pages/Learningmanagement/StudentReport.js","pages/user/StudentReport.js","pages/Learningmanagement/Reports.js","pages/Learningmanagement/ExamReslut.js","components/exam/LmsquestionsCount.js","pages/Learningmanagement/LmsExam.js","pages/Learningmanagement/SubscribeUsers.js","pages/user/SubscribeTeacher.js","pages/Learningmanagement/BlockUsers.js","pages/user/BlockTeacher.js","pages/user/CancleRequest.js","pages/Learningmanagement/CancleRequest.js","pages/user/AcceptRequest.js","pages/Learningmanagement/AcceptRequest.js","pages/Affiliate/RefferUser.js","pages/MyTopic.js","pages/ForumHome.js","pages/SingleTopiceHome.js","pages/Disclaimer.js","pages/TermsAndUse.js","Routes.js","App.js","reportWebVitals.js","reduxStore/store.js","index.js"],"names":["history","createBrowserHistory","basename","getApiUrl","endpoint","GET_COURSES","GET_SUBJECTS","GET_YEAR","GET_TOPICS","GET_TOPICS_LIST","GET_QUESTIONS","GET_LMS_EXAM_QUESTIONS","CREATE_EXAM","SAVE_QUESTIONS","SAVE_FEEDBACK_QUESTION","SEARCH_QUESTION","SEARCH_QUESTIONBYID","SAVE_USER_TEST","GET_SAVED_TEST_QUESTIONS","TEST_REPORT","SAVE_TIME","GET_SAVED_TEST","REMOVED_SAVED_TEST","LOGIN","LOGOUT","REGISTER","REGISTER_AFFILIATE","LOGIN_AFFILIATE","GET_AFFILIATE_REQUEST","REGISTER_LMS","LOGIN_LMS","WITHDRAW_AMOUNT","ABOUT_HOME","TEAM_LEAD","ABOUT_US","ABOUT_WHY_US","HOME_PAGE_SLIDER","HOME_PAGE_VIDEO","FORGET","GET_REPORTS","GET_LMS_STUDENTREPORTS","GET_COURSES_GRAPH","GET_RESET_GRAPH","GET_MONTHLY_REPORT","GET_COURSE_DETAIL","GET_LATEST_BLOGS","GET_TESTIMONIALS","USER_SUBSCRIBE","PAYMENT_VERIFY","GET_SINGLE_BLOG","VERIFY_USER","RESET_USER","RESET_USER_PASSWORD","EDIT_PROFILE","MY_PROFILE","MY_NOTIFICATION","MY_NOTIFICATION_UPDATE","MY_SUBSCRIPTION","MY_SUBSCRIPTION_DETAIL","CANCEL_SUBSCRIPTION","QUESTION_COMMENT","DELETE_COMMENT","SAVE_NOTE","GET_ALL_TOPIC","GET_SINGLE_ALL_TOPIC","CREATE_TOPIC","DELETE_TOPIC","CHANGE_STATUS_TOPIC","GET_SINGLE_TOPIC","POST_COMMENT_TOPIC","FLAG_QUESTION","UNFLAG_QUESTION","BOOKMARK_QUESTION","UNBOOKMARK_QUESTION","ATTEMPT_ASSIGNED_TEST","GET_AFFILIATE_DASHBOARD","AFFILIATE_SUBSCRIPTION_USERS","AFFILIATE_TRANSACTION","LMS_STUDENTS_LIST","SEARCH_STUDENTS_BY_EMAIL","LMS_SEND_REQUEST","LMS_USER_BLOCK","LMS_USER_ACCEPT","LMS_REQUESTEDSTUDENTS","LMS_EXAMLIST_FOR_TEACHER","GET_LMS_EXAM_QUESTIONS_START","SAVE_LMS_QUESTIONS","LMS_EXAMLIST_FOR_STUDENT","SEARCH_TEACHER_BY_EMAIL","LMS_TEACHER_SEND_REQUEST","LMS_TEACHER_ACCEPT_REQUEST","LMS_REQUESTED_TEACHER","LMS_EXAM_DETAILS","LMS_EXAMSTUDENTS","SAVE_LMS_TIME","STUDENT_LMS_EXAM_REPORT","CONTACT_US","MY_TICKETLIST","MY_TICKETDETAILS","MY_TICKETCOMMENTSSTORE","MY_TICKETCOMMENTS","GET_TICKETSTATUS","CREATE_TICKET","userSlice","createSlice","name","initialState","questionData","user","undefined","Cookies","get","exam","is_authanticated","isTestStart","testSpentTime","isExam","reducers","login","state","action","payload","logout","profile","examData","setIsExam","actions","userProfile","userAuth","getIsExam","global","home_crousal","loop","margin","nav","autoplay","slideTransition","autoplayTimeout","smartSpeed","autoplayHoverPause","responsive","items","promise","news","dots","validateEmail","email","test","getTestDate","testDate","Date","toLocaleDateString","month","day","year","removeTags","content","replace","formatTime","time","String","padStart","returnImageType","img","fileName","split","imageFormat","length","ComponentSpinner","className","Forget","show","close","useState","setEmail","loader","setLoader","Modal","setAppElement","handleForget","e","a","preventDefault","toast","error","body","axios","post","data","message","status","success","closeModal","response","setTimeout","isOpen","style","overlay","backgroundColor","zIndex","overflowY","contentLabel","id","shouldReturnFocusAfterClose","role","type","onClick","href","placeholder","value","onChange","target","disabled","Spinner","Signin","closePop","dispatch","useDispatch","useHistory","isRobot","setIsRobot","warnpassword","eye","seteye","password","setpassword","settype","eye2","seteye2","password2","setpassword2","type2","settype2","firstName","lastName","phoneno","confirmPassword","referCode","registerForm","setRegisterForm","remember","loginForm","setLoginForm","forgetShow","setForgetShow","handleRegisterChange","handleLoginChange","handleLogin","inTwoMinutes","getTime","expiryObject","expires","set","token","access_token","JSON","stringify","handleClose","push","register","match","error_description","handleIsRobot","onRequestClose","position","display","to","minLength","maxLength","defaultChecked","Logout","yesLogout","noLogout","src","alt","ThemeContext","createContext","ThemeProvider","children","storedValue","localStorage","getItem","isDarkMode","setIsDarkMode","useEffect","setItem","Provider","toggleTheme","prevMode","DarkAndLightMode","useContext","handleToggle","Menu","is_auth","pathname","window","location","open","setOpen","notice","setNoticeData","notseetotal","setNoticenotsee","isAuth","setIsAuth","isLogout","setIsLogout","userReduxData","useSelector","isRole","parse","getnotice","onload","myProfile","config","headers","Authorization","user_id","not_see_total","console","log","getnoticeupdate","noticeId","notice_id","useIdleTimer","timeout","onIdle","userLogout","warning","remove","debounce","getRemainingTime","getLastActiveTime","Fragment","affiliate_role","Badge","badgeContent","color","map","item","index","is_view","notice_type","notice_text","slug","first_name","Reset","resetForm","setResetForm","handleReset","reset","handleResetChange","GlobalStyles","createGlobalStyle","theme","background","text","Header","resetModal","setResetModal","useLocation","isUserReset","queryString","search","mobileNotice","setMobileNoticeData","MobileNotseetotal","setMobileNoticenotsee","isResetPopUp","verifyToken","logoSRC","width","Footer","phoneNo","widgetWidth","widgetWidthMobile","autoOpen","autoOpenTimer","messageBox","messageBoxTxt","iconSize","iconColor","iconBgColor","headerIcon","headerIconColor","headerIconBgColor","headerTxtColor","headerBgColor","headerTitle","headerCaption","bodyBgColor","chatPersonName","chatMessage","footerBgColor","btnBgColor","btnTxtColor","btnTxt","OwlCarousel","props","adClass","options","customid","carouselRef","useRef","onChangeRef","events","onTranslated","onChangeIndex","Object","assign","settings","responsiveClass","navText","navElement","autoHeight","ref","React","memo","ContactUs","contactLoader","setContactLoader","contactData","setContactData","handleChange","handleContact","required","defaultValue","Home","blogs","setBlogs","courses","setCourses","aboutUs","setAboutUs","slider","setSlider","aboutUsLoader","setAboutUsLoader","blogLoader","setBlogLoader","courseLoader","setCourseLoader","setTestimonialsLoader","setTestimonialsData","currentSlide","setCurrentSlide","setIsVideoPlaying","thumbRef","itemsPerPage","setItemsPerPage","slides","setSlides","getCourses","getBlogs","getTestimonials","getAboutUs","getSlider","getVideos","handleResize","screenWidth","innerWidth","addEventListener","removeEventListener","imgUrl","setImgUrl","filteredUrls","slide","link","videoId","filter","url","findImg","handleMainSlideChange","currentPage","Math","floor","visibleSlides","slice","sl","image","key","animationDuration","description","textAlign","infiniteLoop","selectedItem","border","dangerouslySetInnerHTML","__html","justifyContent","marginTop","outline","cursor","fontSize","marginRight","class","overflow","listStyle","title","substring","created_at","About","testimonialsLoader","teamLeadLoader","setSetTeamLeadLoader","testimonialsData","teamLeadData","setTeamLeadData","aboutWhyUs","setAboutWhyUs","getTeamLead","getWhyUs","textDecoration","i","client_name","Eshop","css","price_ngn","marginBottom","Affiliate","Learningmanagementsystem","QuestionCount","calculateItemsPerPage","ceil","step","startIndex","endIndex","handleNextClick","questions","setStep","prevStep","handlePreviousClick","jumpOnQuestion","isAttempt","isCorrect","Comment","comments","commentChange","questionId","setUserComments","userData","showDelete","setShowDelete","reportParam","val","deleteComment","commentId","comment","userId","Statistics","stats","scope","userAppearedTest","allAppearedTest","userAnsweredCorrect","allAnsweredCorrect","ExamTimer","expiryTime","onExpireTime","expiryTimestamp","setSeconds","getSeconds","useTimer","onExpire","seconds","minutes","hours","TestTimer","useStopwatch","autoStart","Question","questionsData","setQuestionsData","finishWarning","setFinishWarning","cancelWarning","setCancelWarning","flagWarning","setFlagWarning","bookmarkWarning","setBookmarkWarning","radioOption","setRadioValue","radioInnerValue","setRadioInner","selectedQuestionId","setQuestionId","otherOption","setOtherOption","commentLoader","setCommentLoader","saveWarning","setSaveWarning","notAnswer","setNotAnswer","setComment","note","setNote","saveLoader","setSaveLoader","answerLoader","setAnswerLoader","noteLoader","setNoteLoader","timer","setTimer","customStyles","progressStatus","handleAnswer","quesId","choosenAnswer","testId","bodyParameter","question_id","choosen_option","isAttemptQuestionState","result","updateQuestionState","rightOption","userOption","handleConfirmButton","saveTestTime","join","spentTime","handleTime","handleExpieTime","handlerRadio","option","handleUserCommnet","bodyParameters","getAttribute","tempData","ques","updatedComments","Array","isArray","handleCommentChange","useCallback","comm","handleUserSaveTest","handleUserSaveTestauto","handleUserNotes","handleNoteChange","notes","unshift","handleUserFlagTest","flag_option","flag_option_text","el","isFlag","handleUserUnFlagTest","QuestionId","handleFlag","handleUserBookmark","d","dl","isBookMark","handleUserUnBookmark","question_description_show","Helmet","question","option_1","option_2","option_3","option_4","explanation","question_description","statistics","readOnly","keys","handleNote","whiteSpace","userNotAttempted","removeItem","htmlFor","checked","TestNav","courseName","subjectName","handleEdit","SavedTestLists","resumeTest","removeWarning","setRemoveWarning","selectedTestId","setSelectedTestId","removeLoader","setRemoveLoader","savedTest","setSavedTest","getSavedTets","handleRemoveSavedTest","savedTestId","test_id","total_questions","time_spent","colSpan","Freetest","subjects","setSubjects","mcq","setMcq","theory","setTheory","practical","setPractical","testData","setTestData","topics","setTopics","setQuestions","subjectyears","setSubjectYears","setYear","useParams","toggleShow","number_of_question","setNumberOfQuestion","ave_total_question","setaveNumberOfQuestion","usersubscription","setUserSubscription","randomchecked","setChecked","flagchecked","setflagChecked","isAssignedTest","randomChange","nextChecked","flagChange","user_test_id","handleCourseChange","isNaN","selectedIndex","courseId","handleNextStep","coursesSelect","document","getElementById","subjectsSelect","handleSubjectChange","prevState","subject_id","parseInt","subjectId","handleEditTest","getTopics","topicsData","isChecked","handleCheckedTopics","updatedCheckedState","topic_id","startTest","whichTest","topics_id","randomquestion","flagquestion","topicsId","total_question","handleYear","selectedOptions","yearValue","handlePopState","reload","isMulti","includes","isOptionDisabled","float","topic_name","topicflagquestions","count","tabScreen","Accordion","getSubjects","subject","isActive","sub","accordion","accord","handleAccordion","topic","Package","buttonLoader","setButtonLoader","course","setCourse","setInterval","planPrice","planId","planData","setPlanData","getCourse","plans","getPlanPrice","plan_id","handleSubscribe","totalPrice","authorization_url","courseData","selectedPlan","plan","plan_amount","handlePlan","handleBuyCourse","handleNoPlan","minHeight","plan_interval","isUserSubscribed","userNotExist","Report","setResult","getTestReport","correctCount","getRightOption","getOption","answer","rightAnser","tabIndex","Dashboard","reports","setReports","reportData","setReportData","scoreData","setScoreData","goAffiliat","setGoAffiliat","getReports","user_data","getDate","getaffiliaterequest","handleGoAffiliat","dates","scores","userReport","reverse","totaCorrectOption","labels","datasets","label","fill","lineTension","borderColor","borderWidth","state2","totalQues","height","maintainAspectRatio","aspectRatio","onResize","resizeDelay","NotFound","EditProfile","updateForm","setUpdateForm","handleEditChange","updateProfile","Accept","FormData","append","last_name","method","encType","MyProfile","deleteModal","setDeleteModal","setPassword","resetGrapth","setResetGrapth","config2","updatePassword","setUpdatePassword","handlePasswordChange","uploadProfile","files","handleResetGraph","handleConfirmReset","handleDeleteProfile","accept","gap","Pagination","postsPerpage","totalPosts","paginate","setCurrentPage","pageGroup","setPageGroup","maxPageNumbersToShow","setMaxPageNumbersToShow","nPage","startPage","endPage","min","pageNumbers","number","MyReports","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","totalTime","course_name","subject_name","pageNumber","Verify","verifyUser","Callback","verifyTransaction","URLSearchParams","reference","Subscription","subscription","setSubscription","getSubscription","plan_name","next_subscription_date","is_active","SubscriptionDetail","subscriptionId","subscriptionData","setSubscriptionData","getSubscriptionDetail","handleCancelSubscription","subscribeId","email_token","code","subscription_code","Blog","posts","setPosts","res","fetchPosts","formatUpdateDate","date","formattedDate","getFullYear","getMonth","toString","video","controls","video_url","frameborder","allow","referrerpolicy","allowfullscreen","updated_at","BlogSingle","singleBlog","setBlogPost","getSingleBlog","Forum","setTopic","fromNow","Topic","setTitle","setDescription","getTopicLoader","setTopicLoader","deleteWarning","setDeleteWarning","delectItem","setDelectItem","createTopic","topic_by","topic_description","getUserTopic","deleteTopic","topicid","handelConfirmDelect","changeStatus","SingleTopic","allcomment","forumId","postComment","getUserComment","string","charAt","toUpperCase","ResumeSavedTest","userTestId","stopwatchOffset","stopWatch","setStopWatch","offsetTimestamp","start","pause","getSavedTetQuestion","SetTime","hms","is_exam","some","x","TermsAndCondition","termsAndConditions","setTermsAndConditions","subTitle","sub_title","fetch","then","json","AffiliateTermsAndCondition","affiliateTermsAndConditions","setAffiliateTermsAndCondition","AffiliateDashboard","affiliateLoader","setAffiliateLoader","affiliateData","setAffiliate","getAffiliateDashboard","getReffterDashboard","totalAmount","oneMonth","refer_id","Withdraw","bank","withdrawAmount","withdrawForm","setWithdrawForm","handleWithdrawChange","handleWithdraw","amount","SubscribeUsers","getSubscribeUsers","Transaction","transactions","setTransactions","getTransaction","ProtectedRoute","Component","component","rest","affiliateRole","IsAffiliateRole","IsLmsRole","render","from","AffiliateRoute","isAffiliate","Faqlist","faqQuestions","setFaqQuestions","rows","styles","titleTextColor","rowTitleColor","rowContentColor","arrowColor","Questiondetails","questionsid","searchquestiondetails","setSearchquestiondetails","viewquestiondetails","queid","topicName","SearchandFeedback","subjectssearch","setSubjectssearch","searchquestionlist","setSearchquestionlist","searchquestion","course_id","disableContextMenu","disableCopyShortcut","ctrlKey","handleModalShow","handleCourseChangesearch","handleTopicChange","topicId","handleFeedbackQuestion","handleFeedbackQuestion2","handleFeedbackQuestion3","handlesearchQuestion","search_courses_id","search_subject_id","search_type","searchq","maxWidth","Supportlist","tickets","setTicketdata","getTicketlist","status_id","category_name","DownloadApp","isMobile","setIsMobile","checkDevice","Resources","resources","setResources","resource","download","TicketDetails","ticketId","ticketcomments","setTicketComments","comment_text","getTicketDetails","getTicketComments","handleTickektsComments","ticket_id","author_name","author_email","for","CreateTicket","category","setCategory","category_id","getCategory","handleCategoryChange","categoryId","handleCreateTicket","TeacherId","accepted","setAccepted","pendingconfirm","setPending_confirm","pendingrequest","setPending_request","searchstudentbyemail","getSubscriptionsstudent","userRole","pending_confirm","pending_request","SignIn","affiliate_login_type","affiliate_type","referral_code","learningmanagement_login_type","learningmanagement_type","LearningmanagementDashboard","LmsQuestion","student_ids","selectyear","examTitle","setExamName","questionids","setQuestionids","students","setstudents","selectAll","setSelectAll","selectedItems","setSelectedItems","subjectid","examName","createExam","allItemIds","getQuestionsForPage","itemId","prevSelected","checkedtopics","setCheckedTopics","setCheckedstudents","getlmsStudent","teacher_id","SubscriptionData","handleNextStepone","ExamName","handleExamChange","event","userValue","students_id","student_id","handleCheckedStudents","colspan","studentId","ExamList","examlist","setExamlist","getExamlist","calculateSerialNumber","exam_name","courses_name","subjects_name","exam_id","created_for","LmsReport","examforstudents","setexamforstudent","examId","getExamforstudent","LmsStudentReport","studentsId","UserLmsStudentReport","LmsStudentReports","report","totalgivenExam","totalQuesseen","sfirst_name","slast_name","lmsexamId","ExamReslut","LmsquestionsCount","lmsExamtId","excerpt","getSubscriptionrequest","request_from","teacherId","BlockUsers","CancleRequest","AcceptRequest","RefferUser","getUsers","setGetUsers","autoReload","MyTopic","ForumHome","SingleTopicHome","forumIdHome","Disclaimer","disclaimer","setDisclaimer","TermsAndUse","Routes","exact","path","Faq","LmsSignIn","lmseamxcreate","LmsExam","LmsMyProfile","LmsSupportlist","LmsTicketDetails","LmsCreateTicket","LmsSubscription","TeacherSubscription","Lmsuserexam","Lmsstudentexam","Lmsuserexamdetails","Lmsstudentsreports","Lmsexamresult","LmsSubscribeUsers","LmsTeacherSubscribeUsers","LmsBlockUsers","LmsBlockteacher","LmsCancelrequest","LmsCancelrequestteacher","LmsAcceptrequest","LmsAcceptrequestteacher","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","store","newestOnTo","autoClose","closeButton","newestOnTop","hideProgressBar"],"mappings":"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","file":"static/js/main.8a086e51.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: \"\" });\n\nexport default history;","export const API_BASE_URL = \"https://www.examtice.com/backend/api/\"; //Examtice Live api\n//export const API_BASE_URL = \"https://examtice.codexade.com/backend/api/\"; //Development api\n//export const API_BASE_URL = \"http://localhost/exam-frontend/examtice.com-backend/api/\"; //local api\nexport const getApiUrl = (endpoint) => API_BASE_URL + endpoint;\nexport const GET_COURSES = getApiUrl(\"getCourses\");\nexport const GET_SUBJECTS = getApiUrl(\"getCourseSubjects\");\nexport const GET_YEAR = getApiUrl(\"getSubjectsYear\");\nexport const GET_SUBJECTS_LIST = getApiUrl(\"getSubjectsList\");\nexport const GET_TOPICS = getApiUrl(\"getSubjectsTopics\");\nexport const GET_TOPICS_LIST = getApiUrl(\"getSubjectsTopicsList\");\nexport const GET_QUESTIONS = getApiUrl(\"getQuestions\");\nexport const GET_LMS_EXAM_QUESTIONS = getApiUrl(\"getLmsExamQuestions\");\nexport const CREATE_EXAM = getApiUrl(\"createLmsExam\");\nexport const SAVE_QUESTIONS = getApiUrl(\"save_test_data\");\nexport const SAVE_FEEDBACK_QUESTION = getApiUrl(\"save_feedback_question\");\nexport const SEARCH_QUESTION = getApiUrl(\"searchquestion\");\nexport const SEARCH_QUESTIONBYID = getApiUrl(\"searchquestionbyid\");\nexport const SAVE_USER_TEST = getApiUrl(\"save_user_test\");\nexport const GET_SAVED_TEST_QUESTIONS = getApiUrl(\"get_saved_test_questions\");\nexport const TEST_REPORT = getApiUrl(\"report\");\nexport const SAVE_TIME = getApiUrl(\"saveTime\");\nexport const GET_SAVED_TEST = getApiUrl(\"get_saved_test\");\nexport const REMOVED_SAVED_TEST = getApiUrl(\"remove_saved_test\");\nexport const LOGIN = getApiUrl(\"login\");\nexport const LOGOUT = getApiUrl(\"logout\");\nexport const REGISTER = getApiUrl(\"register\");\n\nexport const REGISTER_AFFILIATE = getApiUrl(\"registerAffiliate\");\nexport const LOGIN_AFFILIATE = getApiUrl(\"loginAffiliate\");\nexport const GET_AFFILIATE_REQUEST = getApiUrl(\"Affiliaterequest\");\n\nexport const REGISTER_LMS = getApiUrl(\"registerLMS\");\nexport const LOGIN_LMS = getApiUrl(\"loginLMS\");\nexport const WITHDRAW_AMOUNT = getApiUrl(\"withdrawAmount\");\n\nexport const ABOUT_HOME = getApiUrl(\"about-us/home\")\nexport const TEAM_LEAD = getApiUrl(\"about-us/teamlead\")\nexport const ABOUT_US = getApiUrl(\"about-us/main\")\nexport const ABOUT_WHY_US = getApiUrl(\"about-us/why\")\nexport const HOME_PAGE_SLIDER = getApiUrl(\"slider\")\nexport const HOME_PAGE_VIDEO = getApiUrl(\"videos\")\nexport const FAQ = getApiUrl(\"faq/list\")\nexport const TERMS_AND_CONDITION = getApiUrl(\"terms-condition\")\nexport const FORGET = getApiUrl(\"forget\");\nexport const GET_REPORTS = getApiUrl(\"reports\");\nexport const GET_LMS_STUDENTREPORTS = getApiUrl(\"lmsstudentreports\");\nexport const GET_COURSES_GRAPH = getApiUrl(\"monthlyReport/Course\");\nexport const GET_RESET_GRAPH = getApiUrl(\"resetGraph\");\nexport const GET_MONTHLY_REPORT = getApiUrl(\"monthlyReport\");\nexport const GET_REFRESH_TOKEN = getApiUrl(\"refresh\");\nexport const GET_COURSE_DETAIL = getApiUrl(\"getCourseDetail\");\nexport const GET_LATEST_BLOGS = getApiUrl(\"getLatestBlogs\");\nexport const GET_TESTIMONIALS = getApiUrl(\"getTestimonials\");\nexport const USER_SUBSCRIBE = getApiUrl(\"subscribe\");\nexport const USER_STUDENTS = getApiUrl(\"getStudentList\");\nexport const PAYMENT_VERIFY = getApiUrl(\"verify\");\nexport const GET_SINGLE_BLOG = getApiUrl(\"getSingleBlog\");\nexport const VERIFY_USER = getApiUrl(\"verify\");\nexport const RESET_USER = getApiUrl(\"verify_reset\");\nexport const RESET_USER_PASSWORD = getApiUrl(\"reset_password\");\nexport const EDIT_PROFILE = getApiUrl(\"edit_profile\");\nexport const MY_PROFILE = getApiUrl(\"my_profile\");\nexport const MY_NOTIFICATION = getApiUrl(\"my_notice\");\nexport const MY_NOTIFICATION_UPDATE = getApiUrl(\"my_notice_update\");\nexport const MY_SUBSCRIPTION = getApiUrl(\"my_subscription\");\nexport const MY_SUBSCRIPTION_DETAIL = getApiUrl(\"my_subscription_detail\");\nexport const CANCEL_SUBSCRIPTION = getApiUrl(\"cancel_subscription\");\nexport const QUESTION_COMMENT = getApiUrl(\"questionComment\");\nexport const DELETE_COMMENT = getApiUrl(\"deleteComment\");\nexport const SAVE_NOTE = getApiUrl(\"save_note\");\n\n// forum apis\nexport const GET_ALL_TOPIC = getApiUrl(\"getForumTopic\");\nexport const GET_SINGLE_ALL_TOPIC = getApiUrl(\"singleTopicList\");\nexport const CREATE_TOPIC = getApiUrl(\"createTopic\");\nexport const DELETE_TOPIC = getApiUrl(\"deleteTopic\");\nexport const CHANGE_STATUS_TOPIC = getApiUrl(\"changeTopicStatus\");\nexport const GET_SINGLE_TOPIC = getApiUrl(\"getSingleTopic\");\nexport const POST_COMMENT_TOPIC = getApiUrl(\"postComment\");\n\n// Flag api\nexport const FLAG_QUESTION = getApiUrl(\"flag_question\");\nexport const UNFLAG_QUESTION = getApiUrl(\"unflag_question\");\n\n// Bookmark api\nexport const BOOKMARK_QUESTION = getApiUrl(\"bookmark_question\");\nexport const UNBOOKMARK_QUESTION = getApiUrl(\"unbookmark_question\");\n\n// Check instructor assigned test \nexport const ATTEMPT_ASSIGNED_TEST = getApiUrl(\"attempt_assigned_test\");\n\n// Affiliate\nexport const GET_AFFILIATE_DASHBOARD = getApiUrl(\"affiliate_dashboard\");\nexport const AFFILIATE_SUBSCRIPTION_USERS = getApiUrl(\"affiliate_subscription_users\");\nexport const AFFILIATE_TRANSACTION = getApiUrl(\"affiliate_transaction\");\n\n//LMS\nexport const LMS_STUDENTS_LIST = getApiUrl(\"getLmsStudentList\");\nexport const SEARCH_STUDENTS_BY_EMAIL = getApiUrl(\"getStudentListbyEmail\");\nexport const LMS_SEND_REQUEST = getApiUrl(\"lms-requests-send\");\nexport const LMS_USER_BLOCK = getApiUrl(\"lms-user-block\");\nexport const LMS_USER_ACCEPT = getApiUrl(\"lms-user-accept\");\nexport const LMS_REQUESTEDSTUDENTS = getApiUrl(\"requested-students-list\");\nexport const LMS_EXAMLIST_FOR_TEACHER = getApiUrl(\"get_lms_exam_list_for_teacher\");\nexport const GET_LMS_EXAM_QUESTIONS_START = getApiUrl(\"lms_exam_for_student_by_exam_id\");\nexport const SAVE_LMS_QUESTIONS = getApiUrl(\"save_lmsexam_data\");\nexport const LMS_EXAMLIST_FOR_STUDENT = getApiUrl(\"get_lms_exam_list_for_student\");\n\nexport const SEARCH_TEACHER_BY_EMAIL = getApiUrl(\"getTeacherListbyEmail\");\nexport const LMS_TEACHER_SEND_REQUEST = getApiUrl(\"lms-teacher-requests-send\");\nexport const LMS_TEACHER_ACCEPT_REQUEST = getApiUrl(\"lms-teacher-accept_request\");\nexport const LMS_TEACHER_BLOCK = getApiUrl(\"lms-teacher-blog\");\nexport const LMS_REQUESTED_TEACHER = getApiUrl(\"requested-teacher-list\");\nexport const LMS_EXAM_DETAILS = getApiUrl(\"get_lms_exam_details\");\nexport const LMS_EXAMSTUDENTS = getApiUrl(\"get_lms_exam_students\");\nexport const SAVE_LMS_TIME = getApiUrl(\"saveLmsTime\");\nexport const STUDENT_LMS_EXAM_REPORT = getApiUrl(\"studentLmsExamReport\");\n\n// contact us\nexport const CONTACT_US = getApiUrl(\"contact_us\");\nexport const MY_TICKETLIST = getApiUrl(\"getTicketList\");\nexport const MY_TICKETDETAILS = getApiUrl(\"getTicketDetails\");\nexport const MY_TICKETCOMMENTSSTORE = getApiUrl(\"storeTicketComments\");\nexport const MY_TICKETCOMMENTS = getApiUrl(\"getTicketComments\");\nexport const GET_TICKETSTATUS = getApiUrl(\"getTicketcategories\");\nexport const CREATE_TICKET = getApiUrl(\"createticket\");\n\n\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport Cookies from \"js-cookie\";\n\n\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n        questionData:[],\n        user: Cookies.get(\"user_data\") != undefined ? Cookies.get(\"user_data\") : null,\n        exam: null,\n        is_authanticated: !!Cookies.get(\"token\"),\n        isTestStart: false,\n        testSpentTime: \"\",\n        isExam: false,\n    },\n    reducers: {\n        login: (state, action) => {\n            state.user = action.payload;\n            state.is_authanticated = true;\n        },\n        logout: (state) => {\n            state.user = null;\n            state.is_authanticated = false;\n        },\n        profile: (state, action) => {\n            state.profile = action.payload.profile;\n        },\n        examData: (state, action) => {\n            state.examData = action.payload.examData;\n        },\n        questionData:(state, action) => {\n            state.questionData = action.payload;\n        },\n        isTestStart: (state, action) =>{\n            state.isTestStart = action.payload;\n        },\n        setIsExam: (state, action) => {\n            state.isExam = action.payload;\n        }\n    }\n});\nexport const { login, logout, profile, examData, questionData, isTestStart, setIsExam } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\nexport const userProfile = (state) => state;\nexport const userAuth = (state) => state.user.is_authanticated;\nexport const examDataTest = (state) => state.user.examData;\nexport const questionAllData = (state) => state.user.questionData;\nexport const testStart = (state) => state.user.isTestStart;\nexport const getIsExam = (state) => state.user.isExam;\n\nexport default userSlice.reducer;","// examtice live\nexport const global = {\n  API_HOST: \"https://www.examtice.com/backend/\",\n  FRONT: \"https://www.examtice.com/\",\n  PAYSTACK_PUBLIC_KEY: \"pk_test_d01de450c222c7c7c3c69ab014945ddefcbcddb7\",\n  GOOGLE_CLIENT_ID:\n    \"908366023938-m53343se6ginu2kkra15pkh7k4u55vhc.apps.googleusercontent.com\",\n  FACEBOOK_APP_ID: \"700941617941519\",\n};\n\n// localhost\n// export const global = {\n//     API_HOST: \"http://localhost/exam-frontend/examtice.com-backend/\",\n//     FRONT: \"http://localhost:3000/\",\n//     PAYSTACK_PUBLIC_KEY: \"pk_test_d0a8af076608b3a44e78c929a3ee7e287b51da56\",\n//        GOOGLE_CLIENT_ID:\"\",\n//  \t   FACEBOOK_APP_ID: \"\",\n//   };\n\n\n","import React, { useEffect } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { global } from \"./Config\";\n\n// Common function toggle\nexport default function useToggle(initialValue = false) {\n  const [value, setValue] = React.useState(initialValue);\n  const toggle = React.useCallback(() => {\n    setValue((v) => !v);\n  }, []);\n  return [value, toggle];\n}\n\nexport function addBodyClass(className) {\n  return () =>\n    useEffect(() => {\n      document.body.className = className;\n      return () => {\n        document.body.className = \"no-bg\";\n      };\n    });\n}\n\nexport function stringLimit(string, counts) {\n  var text = string;\n  var count = counts;\n  var result = text.slice(0, count) + (text.length > count ? \"**********\" : \"\");\n  return result;\n}\n\nexport function setStorage(key, value) {\n  return localStorage.setItem(key, value);\n}\n\nexport function removeStorage(key) {\n  return localStorage.removeItem(key);\n}\n\nexport function randomString(len = 5) {\n  let text = \"\";\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (let i = 0; i < len; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\n\nexport const removeDublicateFrds = (friendList) => {\n  friendList.forEach((data_outer, i) => {\n    let count = 0;\n    friendList.forEach((data_inner, j) => {\n      if (data_inner.user_id == data_outer.user_id) {\n        count += 1;\n        if (count > 1) {\n          friendList.splice(j, 1);\n        }\n      }\n    });\n  });\n  return friendList;\n};\n\nexport const addDefaultSrc = (ev) => {\n  ev.target.src = \"/assets/images/image-placeholder.jpg\";\n};\n\nexport const returnDefaultImage = (ev) => {\n  return \"/assets/images/image-placeholder.jpg\";\n};\n\nexport const checkLiveDomain = () => {\n  // if (window.location.hostname === \"indeedtraining.in\") {\n  return true;\n  // }\n  // return false\n};\n\nexport const changeImageLinkDomain = () => {\n  // if (window.location.hostname === \"indeedtraining.in\") {\n  return \"https://indeedtraining.in/glitter-101/public/profile_images/\";\n  // }\n  // return \"http://167.172.209.57/glitter-101/public/profile_images/\"\n};\n\nexport const changeGiftLinkDomain = () => {\n  // if (window.location.hostname === \"indeedtraining.in\") {\n  return \"https://indeedtraining.in/glitter-101/public/gifts_icons/\";\n  // }\n  // return \"http://167.172.209.57/glitter-101/public/gifts_icons/\"\n};\n\nexport function useForceUpdate() {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick((tick) => tick + 1);\n  }, []);\n  return update;\n}\n\n// owl Coursel\nexport const home_crousal = {\n  loop: true,\n  margin: 0,\n  nav: true,\n  autoplay: true,\n  slideTransition: \"linear\",\n  autoplayTimeout: 5000,\n  smartSpeed: 500,\n  autoplayHoverPause: false,\n  responsive: {\n    0: {\n      items: 1,\n    },\n    600: {\n      items: 1,\n    },\n    1000: {\n      items: 1,\n    },\n  },\n};\n\nexport const promise = {\n  loop: true,\n  margin: 0,\n  nav: true,\n  autoplay: true,\n  autoplayTimeout: 3000,\n\n  responsive: {\n    0: {\n      items: 1,\n    },\n    600: {\n      items: 1,\n    },\n    1000: {\n      items: 1,\n    },\n  },\n};\n\nexport const news = {\n  margin: 35,\n  nav: true,\n  dots: false,\n  autoplay: true,\n  autoplayTimeout: 3000,\n\n  responsive: {\n    0: {\n      items: 1,\n    },\n    600: {\n      items: 1,\n    },\n    1000: {\n      items: 3,\n    },\n  },\n};\n\n// courses\nexport const owlCourses = {\n  loop: false,\n  // margin:10,\n  nav: false,\n  dots: false,\n  mouseDrag: false,\n  autoplay: false,\n  responsive: {\n    0: {\n      mouseDrag: true,\n      nav: false,\n      items: 1,\n    },\n    600: {\n      mouseDrag: true,\n      nav: false,\n      items: 2,\n    },\n    1000: {\n      items: 5,\n    },\n    16080: {\n      items: 5,\n    },\n  },\n};\n\n// End Owl crousel\nexport function getIDFromArrayOfObject(input, field) {\n  var output = [];\n  for (var i = 0; i < input.length; ++i) output.push(input[i][field]);\n  return output;\n}\n\n// validate email address\nexport function validateEmail(email) {\n  const regexp =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regexp.test(email);\n}\n\n//get Test date in formate (DD MMM YYYY)\nexport const getTestDate = (testDate) => {\n  const options = { month: \"short\", day: \"2-digit\", year: \"numeric\" };\n  return new Date(testDate).toLocaleDateString(\"en-GB\", options);\n};\n\n//   remove tags from content\nexport const removeTags = (content) => {\n  return content.replace(/<[^>]+>/g, \"\");\n};\n\n//  changed to 2 decimal places\nexport const toDecimal = (value) => {\n  var val = parseFloat(value);\n  val = Math.round(val * 100) / 100; // 10 defines 1 decimals, 100 for 2, 1000 for 3\n  return val;\n};\n\n// formate time\nexport const formatTime = (time) => {\n  return String(time).padStart(2, \"0\");\n};\n\n// image return with url google or default\nexport const returnImageType = (img) => {\n  const fileName = img.split(\".\");\n  const imageFormat = fileName[fileName.length - 1];\n  if (\n    imageFormat === \"png\" ||\n    imageFormat === \"jpg\" ||\n    imageFormat === \"jpeg\" ||\n    imageFormat === \"PNG\" ||\n    imageFormat === \"JPG\" ||\n    imageFormat === \"JPEG\"\n  ) {\n    return `${global.API_HOST}assets/images/profile_images/` + img;\n  } else {\n    return img;\n  }\n};\n","import React from \"react\"\nimport \"./spinner-style.scss\"\nconst ComponentSpinner = () => {\n    return (\n      <div className=\"fallback-spinner vh-100\">\n        <div className=\"loading\">\n          <div className=\"effect-1 effects\"></div>\n          <div className=\"effect-2 effects\"></div>\n          <div className=\"effect-3 effects\"></div>\n        </div>\n      </div>\n    )\n}\n\nexport default ComponentSpinner\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { toast } from \"react-toastify\";\nimport { validateEmail } from \"../CommonFunction\";\nimport Spinner from \"../spinner/Spinner\";\nimport { FORGET } from \"../Api\";\nimport axios from \"axios\";\n\n\n\nconst Forget = ({ show, close }) => {\n    const [email, setEmail] = useState(\"\");\n    const [loader, setLoader] = useState(false);\n\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n    Modal.setAppElement(\"#root\");\n\n\n    const handleForget = async (e) => {\n        e.preventDefault();\n        if (email == \"\") {\n            toast.error(\"Please enter your email\");\n            return false;\n        } else {\n            if (!validateEmail(email)) {\n                toast.error(\"Please enter valid email\");\n                return false;\n            }\n        }\n        try {\n            setLoader(true);\n            const body = {\n                email: email,\n            };\n            const {\n                data: { message, status },\n            } = await axios.post(FORGET, body);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(message);\n                closeModal();\n            }\n        } catch (error) {\n            if (error.response?.data?.status == 422) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n    }\n\n    // close modal and clear state\n    function closeModal(){\n        setTimeout(() => {\n            close();\n            setEmail(\"\");\n        }, 400);\n    }\n\n    return (\n        <Modal\n            isOpen={show}\n            //onRequestClose={() => setTestWarning(false)}\n            style={customStyles}\n            contentLabel=\"Finish test modal\"\n            className=\"register-modals\"\n            id=\"exampleModalLong\"\n            shouldReturnFocusAfterClose={false}\n        >\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <button\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                            onClick={closeModal}\n                        >\n                            <span aria-hidden=\"true\">×</span>\n                        </button>\n                    </div>\n\n                    <div className=\"modal-body\">\n                        <div className=\"login-deatils\">\n                            <ul className=\"nav nav-tabs\">\n                                <li className=\"active\">\n                                    <a className=\"active\" data-toggle=\"tab\" href=\"#\">\n                                        Forget password\n                  </a>\n                                </li>\n\n                            </ul>\n                        </div>\n\n                        <div className=\"sign-tab-detail\">\n\n                            <form action=\"#\">\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter your email\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button\n                                        type=\"submit\"\n                                        value=\"Forget password\"\n                                        onClick={handleForget}\n                                        disabled={loader}\n                                    >\n                                        {loader && <Spinner />}\n                                        Forget password{\" \"}{loader && '...'}\n                                    </button>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n\n    )\n};\n\nexport default Forget;","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { toast } from \"react-toastify\";\nimport { LOGIN, REGISTER } from \"../Api\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, profile } from \"../../features/userSlice\";\nimport { validateEmail } from \"../CommonFunction\";\nimport { global } from \"../Config\";\nimport Spinner from \"../spinner/Spinner\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport Forget from \"./forget\";\n//import { GoogleLogin } from \"react-google-login\";\n//import FacebookLogin from \"react-facebook-login\";\n\nconst Signin = ({ show, closePop }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [loader, setLoader] = useState(false);\n    const [isRobot, setIsRobot] = useState(false);\n    const [warnpassword, setwarnpassword] = useState(false);\n    const [eye, seteye] = useState(true);\n    const [password, setpassword] = useState(\"password\");\n    const [type, settype] = useState(false);\n    const [eye2, seteye2] = useState(true);\n    const [password2, setpassword2] = useState(\"password\");\n    const [type2, settype2] = useState(false);\n    const [registerForm, setRegisterForm] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneno: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        referCode: \"\",\n    });\n\n    const [loginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        remember: \"\",\n    });\n    const [forgetShow, setForgetShow] = useState(false);\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n    Modal.setAppElement(\"#root\");\n\n    const handleRegisterChange = (e) => {\n        setRegisterForm({\n            ...registerForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleLoginChange = (e) => {\n        setLoginForm({\n            ...loginForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const Eye = () => {\n        if (password == \"password\") {\n            setpassword(\"text\");\n            seteye(false);\n            settype(true);\n        }\n        else {\n            setpassword(\"password\");\n            seteye(true);\n            settype(false);\n        }\n    }\n\n    const Eye2 = () => {\n        if (password2 == \"password\") {\n            setpassword2(\"text\");\n            seteye2(false);\n            settype2(true);\n        }\n        else {\n            setpassword2(\"password\");\n            seteye2(true);\n            settype2(false);\n        }\n    }\n\n\n    // Login user\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        if (loginForm.email == \"\") {\n            toast.error(\"Please enter your email or phone number\");\n            return false;\n        }\n        if (loginForm.password == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        try {\n            //setLoginForm({});\n            // const body2 = {\n            //   _token:\"jOXiu1ib9sy95hCp4xgGsC82736bPUtYj4ufp5Zs\",\n            //   email:loginForm.email,\n            //   password:loginForm.password,\n            // };\n            // const {\n            //   data: { status2, data2 },\n            // } = await axios.post('https://examtice.com/support/login', body2, config);\n            setLoader(true);\n\n            const body = {\n                login: loginForm.email,\n                password: loginForm.password,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LOGIN, body);\n            if (status == 200) {\n\n                //var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                var inTwoMinutes = new Date(\n                    new Date().getTime() + 60 * 60 * 24 * 1000 * 7\n                ); // 7 days\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                setLoader(false);\n                dispatch(profile({ profile: data.user }));\n                Cookies.set(\"token\", \"bearer \" + data.token.access_token, expiryObject);\n                Cookies.set(\"user_data\", JSON.stringify(data.user), expiryObject);\n                handleClose();\n                toast.success(message);\n                setTimeout(() => {\n                    dispatch(login(data.user));\n                    history.push(\"/user/dashboard\");\n                }, 200);\n            }\n\n        } catch (error) {\n            if (error.response?.data?.status == 401) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n    };\n\n    // console.log(dispatch(profile({ profile})))\n\n    // social login\n    const responseGoogle = async (response) => {\n        //console.log(response.profileObj,\"wwwwwwwwwww\");\n        var gLogin = response.profileObj;\n\n        try {\n            setLoader(true);\n            const body = {\n                google_id: gLogin.googleId,\n                email: gLogin.email,\n                firstName: gLogin.givenName,\n                profilePic: gLogin.imageUrl,\n                lastName: gLogin.familyName,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LOGIN, body);\n            if (status == 200) {\n                var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                setLoader(false);\n                dispatch(profile({ profile: data.user }));\n                Cookies.set(\"token\", \"bearer \" + data.token.access_token, expiryObject);\n                Cookies.set(\"user_data\", JSON.stringify(data.user), expiryObject);\n                handleClose();\n                toast.success(message);\n                setTimeout(() => {\n                    dispatch(login(data.user));\n                    history.push(\"/user/dashboard\");\n                }, 200);\n            }\n        } catch (error) {\n            console.log(error);\n            if (error.response?.data?.status == 401) {\n                toast.error(error.response.data.message);\n            }\n            // }else{\n            //   toast.error(\"Something went wrong, please try again..!\");\n            // }\n            setLoader(false);\n        }\n    };\n\n    const responseFacebook = async (response) => {\n        console.log(response.profileObj, \"wwwwwwwwwww\");\n        var fLogin = response;\n\n        try {\n            setLoader(true);\n            const body = {\n                facebook_id: fLogin.id,\n                email: fLogin.email,\n                firstName: fLogin.name,\n                profilePic: fLogin.picture.data.url,\n                lastName: fLogin.name,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LOGIN, body);\n            if (status == 200) {\n                var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                setLoader(false);\n                dispatch(profile({ profile: data.user }));\n                Cookies.set(\"token\", \"bearer \" + data.token.access_token, expiryObject);\n                Cookies.set(\"user_data\", JSON.stringify(data.user), expiryObject);\n                handleClose();\n                toast.success(message);\n                setTimeout(() => {\n                    dispatch(login(data.user));\n                    history.push(\"/user/dashboard\");\n                }, 200);\n            }\n        } catch (error) {\n            console.log(error);\n            if (error.response?.data?.status == 401) {\n                toast.error(error.response.data.message);\n            }\n            //  }else{\n            //    toast.error(\"Something went wrong, please try again..!\");\n            //  }\n            setLoader(false);\n        }\n    };\n\n    // User register\n    const register = async (e) => {\n        e.preventDefault();\n        if (registerForm.firstName == \"\") {\n            toast.error(\"Please enter your first name\");\n            return false;\n        }\n        if (registerForm.lastName == \"\") {\n            toast.error(\"Please enter your last name\");\n            return false;\n        }\n        if (registerForm.email == \"\") {\n            toast.error(\"Please enter your email\");\n            return false;\n        } \n        else {\n            if (!validateEmail(registerForm.email)) {\n                toast.error(\"Please enter valid email\");\n                return false;\n            }\n        }\n        if (registerForm.phoneno == \"\") {\n            toast.error(\"Please enter your phone number\");\n            return false;\n        } else {\n            if (!registerForm.phoneno.match(\"[0-9]{9,15}\")) {\n                toast.error(\"Please enter valid phone number\");\n                return false;\n            }\n        }\n        if (registerForm.password == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        if (registerForm.confirmPassword == \"\") {\n            toast.error(\"Please enter your confirm password\");\n            return false;\n        } else {\n            if (registerForm.password != registerForm.confirmPassword) {\n                toast.error(\"Passwords don't match.\");\n                return false;\n            }\n        }\n        if (!isRobot) {\n            toast.error(\"Confirm you're not a robot.\");\n            return false;\n        }\n        const body = {\n            firstName: registerForm.firstName,\n            lastName: registerForm.lastName,\n            email: registerForm.email,\n            password: registerForm.password,\n            phoneno: registerForm.phoneno,\n            referCode: registerForm.referCode,\n        };\n        try {\n            setLoader(true);\n            const {\n                data: { message, status, error_description },\n            } = await axios.post(REGISTER, body);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(message);\n                handleClose();\n                handleIsRobot();\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (err) {\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            }\n            setLoader(false);\n        }\n    };\n\n    // handle is Robot checkbox\n    const handleIsRobot = () => setIsRobot(!isRobot);\n\n    //Handle close popup modal\n    const handleClose = () => {\n        closePop(false);\n        setTimeout(() => {\n            // Empty login state\n            setLoginForm({ email: \"\", password: \"\" });\n            // Empty register state\n            setRegisterForm({\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneno: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n            });\n        }, 300);\n    };\n\n    // handle forget click\n    const handleForget = (e) => {\n        e.preventDefault();\n        handleClose();\n        setForgetShow(true);\n    };\n\n    return (\n        <>\n            <Modal\n                isOpen={show}\n                onRequestClose={handleClose}\n                style={customStyles}\n                contentLabel=\"Login Modal\"\n                className=\"register-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={true}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={handleClose}\n                            >\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"login-deatils\">\n                                <ul className=\"nav nav-tabs\">\n                                    <li className=\"active\">\n                                        <a className=\"active\" data-toggle=\"tab\" href=\"#home\">\n                                            Sign In\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a data-toggle=\"tab\" href=\"#menu1\">\n                                            Register\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className=\"tab-content\">\n                                <div id=\"home\" className=\"tab-pane fade in active show\">\n                                    <div className=\"sign-tab-detail\">\n                                        <form action=\"#\">\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Enter email or phone number\"\n                                                    name=\"email\"\n                                                    value={loginForm.email}\n                                                    onChange={handleLoginChange}\n                                                />\n                                            </div>\n                                            <div className=\"form-group input-text\" style={{position: \"relative\"}}>\n                                                <input\n                                                    type={password}\n                                                    className={`${warnpassword ? \"warning\" : \"\"} ${type ? \"type_password\" : \"\"}`}\n                                                    placeholder=\"Password\"\n                                                    name=\"password\"\n                                                    value={loginForm.password}\n                                                    onChange={handleLoginChange}\n                                                />\n                                                <i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash login-eye\" : \"fa-eye login-eye\"}`}></i>\n                                            </div>\n                                            <div className=\"form-group lms-login\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id=\"remember\"\n                                                    name=\"remember\"\n                                                    onChange={handleLoginChange}\n                                                />\n                                                Remember me\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <button\n                                                    type=\"submit\"\n                                                    value=\"SIGN IN\"\n                                                    onClick={handleLogin}\n                                                    disabled={loader}\n                                                >\n                                                    SIGN IN {loader && \"...\"}\n                                                    {loader && <Spinner />}\n                                                </button>\n                                            </div>\n\n                                            <p className=\"text-center font-weight-bold\" style={{ display: 'none' }}>OR</p>\n                                            <div className=\"gorm group forn-social\" style={{ display: 'none' }}>\n                                                {/* <GoogleLogin\n                          clientId={`${global.GOOGLE_CLIENT_ID}`}\n                          buttonText=\"Sign In with Google\"\n                          onSuccess={responseGoogle}\n                          onFailure={responseGoogle}\n                          isSignedIn={true}\n                          className=\"google-login\"\n                          cookiePolicy={\"single_host_origin\"}\n                        />\n                        <FacebookLogin\n                          appId={`${global.FACEBOOK_APP_ID}`}\n                          autoLoad={false}\n                          fields=\"name,email,picture\"\n                          callback={responseFacebook}\n                          icon=\"fa-facebook\"\n                        /> */}\n                                            </div>\n                                            <div className=\"form-group forgot-pass\">\n                                                <Link to=\"#\" onClick={handleForget}>\n                                                    Forget your password?\n                                                </Link>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                                <div id=\"menu1\" className=\"tab-pane fade\">\n                                    <div className=\"sign-tab-detail\">\n                                        <form>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <input\n                                                            type=\"text\"\n                                                            placeholder=\"First name\"\n                                                            name=\"firstName\"\n                                                            value={registerForm.firstName}\n                                                            onChange={handleRegisterChange}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <input\n                                                            type=\"text\"\n                                                            placeholder=\"Last name\"\n                                                            name=\"lastName\"\n                                                            value={registerForm.lastName}\n                                                            onChange={handleRegisterChange}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Email address\"\n                                                    name=\"email\"\n                                                    value={registerForm.email}\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Phone number\"\n                                                    minLength={10}\n                                                    maxLength={15}\n                                                    name=\"phoneno\"\n                                                    value={registerForm.phoneno}\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type={password2}\n                                                    className={`${warnpassword ? \"warning\" : \"\"} ${type2 ? \"type_password\" : \"\"}`}\n                                                    placeholder=\"Password\"\n                                                    name=\"password\"\n                                                    value={registerForm.password}\n                                                    onChange={handleRegisterChange}\n                                                />\n                                                <i onClick={Eye2} className={`fa ${eye2 ? \"fa-eye-slash signup-eye\" : \"fa-eye signup-eye\"}`}></i>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"password\"\n                                                    placeholder=\"Confirm password\"\n                                                    name=\"confirmPassword\"\n                                                    value={registerForm.confirmPassword}\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Refer code\"\n                                                    name=\"referCode\"\n                                                    value={registerForm.referCode}\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group lms-login\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id=\"isRobot\"\n                                                    name=\"isRobot\"\n                                                    defaultChecked={isRobot}\n                                                    // checked={isRobot}\n                                                    onClick={handleIsRobot}\n                                                />\n                                                I'm not a Robot\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <button\n                                                    value=\"REGISTER\"\n                                                    onClick={register}\n                                                    disabled={loader}\n                                                >\n                                                    REGISTER {loader && \"...\"}\n                                                    {loader && <Spinner />}\n                                                </button>\n                                            </div>\n\n                                            <p className=\"text-center font-weight-bold\" style={{ display: 'none' }}>OR</p>\n                                            <div className=\"gorm group forn-social\" style={{ display: 'none' }}>\n                                                {/* <GoogleLogin\n                          clientId={`${global.GOOGLE_CLIENT_ID}`}\n                          buttonText=\"Sign In with Google\"\n                          autoLoad={false}\n                          className=\"google-login\"\n                          onSuccess={responseGoogle}\n                          onFailure={responseGoogle}\n                          cookiePolicy={\"single_host_origin\"}\n                        />\n\n                        <FacebookLogin\n                          appId={`${global.FACEBOOK_APP_ID}`}\n                          autoLoad={false}\n                          fields=\"name,email,picture\"\n                          callback={responseFacebook}\n                          icon=\"fa-facebook\"\n                        /> */}\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n\n            <Forget show={forgetShow} close={() => setForgetShow(false)} />\n        </>\n    );\n};\n\nexport default Signin;\n","import React, { useState, useEffect } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport Modal from \"react-modal\";\n\n\nconst Logout = ({ show, yesLogout, noLogout }) => {\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            //display: \"flex\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n    Modal.setAppElement(\"#root\");\n\n    const handleLogout = (e) => {\n        e.preventDefault();\n        yesLogout();\n    }\n\n    return (\n        <Modal\n            isOpen={show}\n            //onRequestClose={() => setTestWarning(false)}\n            style={customStyles}\n            contentLabel=\"Finish test modal\"\n            className=\"logout-modals\"\n            id=\"exampleModalLong\"\n            shouldReturnFocusAfterClose={false}\n        >\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-body\">\n                        <div className=\"payment-sucess\">\n                            <img src=\"assets/images/warning.png\" alt=\"\" />\n                            <p>Do you really want to <span>log out </span>?</p>\n                            <div className=\"row\">\n                                <a href=\"#\" onClick={handleLogout}>\n                                    Yes\n                                </a>\n                                <a href=\"#\" onClick={(e) => {\n                                    e.preventDefault();\n                                    noLogout()\n                                }}>\n                                    No\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n\n    )\n};\n\nexport default Logout;","import React, { createContext, useEffect, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n    // const [isDarkMode, setIsDarkMode] = useState(() => localStorage.getItem('isDarkMode') === 'true');\n\n    // Set the initial state to true for dark mode\n    const [isDarkMode, setIsDarkMode] = useState(() => {\n        // Check if user has previously set a preference, otherwise default to true\n        const storedValue = localStorage.getItem('isDarkMode');\n        return storedValue ? storedValue === 'true' : true;\n    });\n\n    useEffect(() => {\n        localStorage.setItem('isDarkMode', isDarkMode);\n    }, [isDarkMode]);\n\n    const toggleTheme = () => {\n        setIsDarkMode((prevMode) => !prevMode);\n    };\n    \n\n    return (\n        <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport { ThemeContext, ThemeProvider };\n\n","\nimport React, { useContext } from 'react';\nimport { ThemeContext } from '../ThemeContaxt/ThemeContaxt';\n\nconst DarkAndLightMode = () => {\n    const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n\n    const handleToggle = () => {\n        toggleTheme();\n    };\n\n    return (\n        <div className={`dark_light_mode ${isDarkMode ? 'dark' : 'light'}`}>\n            <span className='mode-label d-none d-md-block' onClick={handleToggle}>\n                {isDarkMode ? 'Light Mode' : 'Dark Mode'}\n            </span>\n            <div className={`toggle-bar ${isDarkMode ? 'dark' : 'light'}`} onClick={handleToggle}>\n                <div className='toggle-button'>\n                    {isDarkMode ? '☀️' : '🌙'}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DarkAndLightMode;\n\n\n\n\n\n\n\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useIdleTimer } from 'react-idle-timer';\nimport Signin from \"./modals/signin\";\nimport { logout, profile, userAuth, userProfile } from \"../features/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Logout from \"../components/modals/logout\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { LOGOUT, MY_PROFILE, MY_NOTIFICATION, MY_NOTIFICATION_UPDATE } from \"../components/Api\";\nimport Cookies from \"js-cookie\";\nimport MailIcon from '@material-ui/icons/Mail';\nimport Badge from '@material-ui/core/Badge';\nimport DarkAndLightMode from \"../DarkAndLightMode/DarkAndLightMode\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\n\nconst Menu = ({ is_auth }) => {\n    let pathname = window.location.pathname;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [open, setOpen] = useState(false);\n    const [notice, setNoticeData] = useState([]);\n    const [notseetotal, setNoticenotsee] = useState(0);\n    const [isAuth, setIsAuth] = useState(false);\n    const [isLogout, setIsLogout] = useState(false);\n    const userReduxData = useSelector(userProfile).user.profile;\n    \n    //const is_auth = useSelector(userAuth);\n    var isRole =\n        !!Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n    // check if page reload then hit an isRole\n\n    // useEffect(() => {\n    //   window.onload = function() {\n    //     myProfile();\n    //   };\n    // }, []);\n    \n    //Cookies.set('user_data', 7);\n//    console.log(Cookies.get(\"token\"))\n\n\n    useEffect(() => {\n        if (is_auth) {\n            setIsAuth(true);\n            getnotice();\n            //setUserData(JSON.parse(Cookies.get(\"user_data\")));\n            window.onload = function () {\n                myProfile();\n            };\n        }\n        return () => {\n            setIsAuth(false); // clean up function\n        };\n    }, [is_auth]);\n\n    // get user profile\n    const getnotice = async () => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const body = {\n                user_id: isRole.id,\n            };\n            const {\n                data: { data, status, not_see_total },\n            } = await axios.post(MY_NOTIFICATION, body, config);\n            if (status == 200) {\n                setNoticeData(data);\n                //console.log(data)\n                setNoticenotsee(not_see_total);\n            } else {\n                dispatch(profile({ profile: data }));\n            }\n        } catch (err) {\n            console.log(err, \"axios error\");\n        }\n    };\n\n    // console.log(\"Check Notification\", notice)\n\n    const getnoticeupdate = async (noticeId) => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const body = {\n                user_id: isRole.id,\n                notice_id: noticeId,\n            };\n            const {\n                data: { data, status, not_see_total },\n            } = await axios.post(MY_NOTIFICATION_UPDATE, body, config);\n            if (status == 200) {\n                // setNoticeData(data.data);\n                // setNoticenotsee(not_see_total);\n                // getnotice();\n            } else {\n                dispatch(profile({ profile: data }));\n            }\n        } catch (err) {\n            console.log(err, \"axios error\");\n        }\n    };\n\n    const myProfile = async () => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(MY_PROFILE, null, config);\n            if (status == 400) {\n                history.push(\"/\");\n            } else {\n                dispatch(profile({ profile: data }));\n            }\n        } catch (err) {\n            console.log(err, \"axios error\");\n        }\n    };\n\n    // handle to close the modal\n    const handleCloseModal = () => {\n        setOpen(false);\n    };\n\n    // handle logout pop up\n    const handleLogoutPopUp = (e) => {\n        e.preventDefault();\n        setIsLogout(true);\n    };\n\n    const handleLogout = () => {\n        userLogout();\n        \n        toast.success(\"Logout successfully..!\");\n        setTimeout(() => {\n            dispatch(logout());\n            setIsLogout(false);\n            // history.push(\"/\");\n            window.location.href = \"/\";\n            setIsAuth(false);\n            Cookies.remove(\"token\");\n            Cookies.remove(\"user_data\");\n        }, 300);\n    };\n\n\n    const idleTimeLogout = () => {\n        if (is_auth) {\n            userLogout();\n\n            toast.warning(\"Logout beacuse of idle time limit..!\");\n            setTimeout(() => {\n                dispatch(logout());\n                setIsLogout(false);\n                history.push(\"/\");\n                setIsAuth(false);\n                Cookies.remove(\"token\");\n                Cookies.remove(\"user_data\");\n            }, 300);\n        }\n    };\n\n    const { getRemainingTime, getLastActiveTime } = useIdleTimer({\n        timeout: 1000 * 60 * 30,\n        onIdle: idleTimeLogout,\n        debounce: 500\n    });\n\n    const userLogout = async () => {\n        try {\n            var config = {\n                headers: { Authorization: Cookies.get(\"token\") },\n            };\n            const data = await axios.post(LOGOUT, null, config);\n\n        } catch (error) {\n            console.log(error);\n            //toast.error(\"Something went wrong, please try again..!\");\n        }\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <React.Fragment>\n            <ul className=\"navbar-nav mr-auto\">\n                <div className=\"d-lg-block d-md-none d-none\">\n                    <DarkAndLightMode></DarkAndLightMode>\n\n                </div>\n                {!isAuth ? (\n                    <>\n                        {/* <li className=\"nav-item\">\n                        <Link\n                            className={`${\n                            pathname === \"/\" ? \"nav-link active\" : \"nav-link\"\n                            }`}\n                            to=\"/\"\n                        >\n                            Home\n                        </Link>\n                            </li> */}\n                        <li className={`nav-item ${isDarkMode ? 'color_light' : 'color_light'}`} >\n                            <Link\n                                className={`${pathname === \"/about\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/about\"\n                            >\n                                About\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/free-test\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/free-test\"\n                            >\n                                Free test\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/blog\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/blog\"\n                            >\n                                News/Blog\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/eshop\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/eshop\"\n                            >\n                                Shop\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/forum-home\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/forum-home\"\n                            >\n                                Forum\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/lms\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/lms\"\n                            >\n                                LMS\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/affiliate\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/affiliate\"\n                            >\n                                Affiliate\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/contact-us\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/contact-us\"\n                            >\n                                Contact\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item sign-up\">\n                            <Link\n                                className={`${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"#\"\n                                onClick={() => setOpen(true)}\n                            >\n                                <span>\n                                    <i className=\"fas fa-user\"></i>\n                                </span>\n                                SIGN IN\n                            </Link>\n                        </li>\n                    </>\n                ) : (!!isAuth && !!isRole && isRole.affiliate_role == 5) ||\n                    isRole.affiliate_role == 6 ? (\n                    <>\n                        <li className=\"nav-item mobile_tab_hidden \">\n                            <Link\n                                className={` d-lg-block d-md-none d-none d-flex ${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"#\"\n                            >\n                                <Badge badgeContent={notseetotal} color=\"secondary\">\n                                    <span>\n                                        <i className=\"fas fa-bell\"></i>\n                                    </span>\n                                </Badge>\n                            </Link>\n\n\n                            <ul className=\"profile-dropdown notification-view\">\n\n                                {notice?.map((item, index) =>\n                                    item.is_view == 0 ? (\n                                        item.notice_type == 1 || item.notice_type == 5 ? (\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to=\"/lms/subscription\" onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                        <b>{item.notice_text}</b>\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        ) : (\n                                            item.notice_type == 7 ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to={item.slug} onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                            <b>{item.notice_text}</b>\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) :\n                                                item.notice_type == 8 ? (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to={item.slug} onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                <b>{item.notice_text}</b>\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to={item.slug} onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                <b>{item.notice_text}</b>\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                )\n                                        )\n\n                                    ) : (\n                                        item.notice_type == 1 || item.notice_type == 5 ? (\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to=\"/lms/subscription\">\n                                                        {item.notice_text}\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        ) : item.slug != '' ? (\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to={item.slug}>\n                                                        {item.notice_text}\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        ) : (\n\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to=\"/lms/exam\">\n                                                        {item.notice_text}\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        )\n                                    )\n                                )}\n\n                            </ul>\n                        </li>\n                        <li className=\"nav-item mobile_tab_hidden\">\n                            <Link\n                                className={`${pathname === \"/user/dashboard\"\n                                    ? \"nav-link active\"\n                                    : \"nav-link\"\n                                    }`}\n                                to=\"/user/dashboard\"\n                            >\n                                Student Dashboard\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item mobile_tab_hidden\">\n                            <Link\n                                className={`${pathname === \"/affiliate/dashboard\"\n                                    ? \"nav-link active\"\n                                    : \"nav-link\"\n                                    }`}\n                                to=\"/affiliate/dashboard\"\n                            >\n                                Affiliate Dashboard\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item sign-up\">\n                            <Link\n                                className={`${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"#\"\n                            >\n                                <span>\n                                    <i className=\"fas fa-user\"></i>\n                                </span>\n                                {!!userReduxData && userReduxData.first_name}\n                            </Link>\n\n                            <ul className=\"profile-dropdown\">\n                                <li style={{color : \"#000\"}}>\n                                    <Link className=\"nav-link\" to=\"/user/my-account\">\n                                        <i className=\"fas fa-user\"></i> My profile\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/user/subscription\">\n                                        <i className=\"fas fa-cog\"></i>Subscription\n                                    </Link>\n                                </li>\n                                {/* <li>\n                  <Link to=\"#\">\n                    <i className=\"fas fa-envelope\"></i>Notifiaction\n                  </Link>\n                </li> */}\n                                <li>\n                                    <Link to=\"/user/reports\">\n                                        <i className=\"fas fa-list\"></i>Reports\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/affiliate/subscribe_users\">\n                                        <i className=\"fas fa-users\"></i>Subscribed users\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/affiliate/transaction\">\n                                        <i className=\"fas fa-wallet\"></i>Transaction\n                                    </Link>\n                                </li>\n                                <li className=\"mobile_tab_show\">\n                                    <Link to=\"/user/dashboard\">\n                                        <i className=\"fas fa-wallet\"></i>Student Dashboard\n                                    </Link>\n                                </li>\n                                <li className=\"mobile_tab_show\">\n                                    <Link to=\"/affiliate/dashboard\">\n                                        <i className=\"fas fa-wallet\"></i>Affiliate Dashboard\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/user/support\">\n                                        <i className=\"fas fa-sms\"></i>Support\n                                    </Link>\n                                </li>\n\n                                {/* <li>\n                                    \n                                        <Link to=''>\n                                            <i className=\"fas fa-bell\"></i>\n                                            Notification\n                                        </Link>\n                                    \n                                </li> */}\n\n                                <li>\n                                    <Link\n                                        to=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setIsLogout(true);\n                                        }}\n                                    >\n                                        <i className=\"fas fa-sign-out-alt\"></i>Logout\n                                    </Link>\n                                </li>\n                            </ul>\n                        </li>\n                    </>\n                ) : (!!isAuth && !!isRole && isRole.affiliate_role == 7) ||\n                    isRole.affiliate_role == 8 ? (\n                    <>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"#\"\n                            >\n                                <Badge badgeContent={notseetotal} color=\"secondary\">\n                                    <span>\n                                        <i className=\"fas fa-bell\"></i>\n                                    </span>\n                                </Badge>\n                            </Link>\n                            <ul className=\"profile-dropdown notification-view\">\n\n                                {notice.map((item, index) =>\n                                    item.is_view == 0 ? (\n                                        item.notice_type == 1 || item.notice_type == 5 ? (\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to=\"/lms/subscription\" onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                        <b>{item.notice_text}</b>\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        ) : (\n                                            item.notice_type == 7 ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to={item.slug} onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                            <b>{item.notice_text}</b>\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) :\n                                                item.notice_type == 8 ? (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to={item.slug} onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                <b>{item.notice_text}</b>\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to=\"/lms/exam\" onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                <b>{item.notice_text}</b>\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                )\n                                        )\n                                    ) : (\n                                        item.notice_type == 1 || item.notice_type == 5 ? (\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to=\"/lms/subscription\">\n                                                        {item.notice_text}\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        ) : (\n                                            item.notice_type == 7 ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to={item.slug}>\n                                                            {item.notice_text}\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) :\n                                                item.notice_type == 8 ? (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to={item.slug}>\n                                                                {item.notice_text}\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to=\"/lms/exam\">\n                                                                {item.notice_text}\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                )\n                                        )\n                                    )\n                                )}\n\n                            </ul>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/lms/dashboard\"\n                                    ? \"nav-link active\"\n                                    : \"nav-link\"\n                                    }`}\n                                to=\"/lms/dashboard\"\n                            >\n                                Dashboard\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/lms/create-test\"\n                                    ? \"nav-link active\"\n                                    : \"nav-link\"\n                                    }`}\n                                to=\"/lms/create-test\"\n                            >\n                                Create Test\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/eshop\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/eshop\"\n                            >\n                                E-shop\n                            </Link>\n                        </li>\n                        <li className=\"nav-item sign-up\">\n                            <Link\n                                className={`${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"#\"\n                            >\n                                <span>\n                                    <i className=\"fas fa-user\"></i>\n                                </span>\n                                {!!userReduxData && userReduxData.first_name}\n                            </Link>\n                            <ul className=\"profile-dropdown\">\n                                <li>\n                                    <Link className=\"nav-link\" to=\"/lms/my-account\">\n                                        <i className=\"fas fa-user\"></i> My profile\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/lms/subscription\">\n                                        <i className=\"fas fa-cog\"></i>Subscribe Students\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/lms/exam\">\n                                        <i className=\"fas fa-cog\"></i>Exam\n                                    </Link>\n                                </li>\n                                {/* <li>\n                  <Link to=\"#\">\n                    <i className=\"fas fa-envelope\"></i>Notifiaction\n                  </Link>\n                </li> */}\n                                <li>\n                                    <Link to=\"/lms/results\">\n                                        <i className=\"fas fa-list\"></i>Results\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/lms/support\">\n                                        <i className=\"fas fa-sms\"></i>Support\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link\n                                        to=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setIsLogout(true);\n                                        }}\n                                    >\n                                        <i className=\"fas fa-sign-out-alt\"></i>Logout\n                                    </Link>\n                                </li>\n                            </ul>\n                        </li>\n                    </>\n                ) : (\n                    <>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"#\"\n                            >\n                                <Badge badgeContent={notseetotal} color=\"secondary\">\n                                    <span>\n                                        <i className=\"fas fa-bell\"></i>\n                                    </span>\n                                </Badge>\n                            </Link>\n                            <ul className=\"profile-dropdown notification-view\">\n\n                                {notice.map((item, index) =>\n                                    item.is_view == 0 ? (\n                                        item.notice_type == 2 || item.notice_type == 6 ? (\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to=\"/user/teachersubscription\" onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                        <b>{item.notice_text}</b>\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        ) : (\n                                            item.notice_type == 7 ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to={item.slug}>\n                                                            <b>{item.notice_text}</b>\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) :\n                                                item.notice_type == 8 ? (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to={item.slug}>\n                                                                <b>{item.notice_text}</b>\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to=\"/user/lmsexam\" onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                <b>{item.notice_text}</b>\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                )\n\n                                        )\n\n                                    ) : (\n                                        item.notice_type == 6 ? (\n                                            <>\n                                                <li>\n                                                    <Link className=\"nav-link\" to=\"/user/teachersubscription\">\n                                                        {item.notice_text}\n                                                    </Link>\n                                                </li>\n                                            </>\n                                        ) : (\n                                            item.notice_type == 7 ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to={item.slug}>\n                                                            {item.notice_text}\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) :\n                                                item.notice_type == 8 ? (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to={item.slug}>\n                                                                {item.notice_text}\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to=\"/user/teachersubscription\">\n                                                                {item.notice_text}\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                )\n\n                                        )\n                                    )\n                                )}\n\n                            </ul>\n                        </li>\n\n\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/user/dashboard\"\n                                    ? \"nav-link active\"\n                                    : \"nav-link\"\n                                    }`}\n                                to=\"/user/dashboard\"\n                            >\n                                Dashboard\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/user/free-test\"\n                                    ? \"nav-link active\"\n                                    : \"nav-link\"\n                                    }`}\n                                to=\"/user/free-test\"\n                            >\n                                Test\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link\n                                className={`${pathname === \"/eshop\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"/eshop\"\n                            >\n                                E-shop\n                            </Link>\n                        </li>\n                        <li className=\"nav-item sign-up\">\n                            <Link\n                                className={`${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                    }`}\n                                to=\"#\"\n                            >\n                                <span>\n                                    <i className=\"fas fa-user\"></i>\n                                </span>\n                               {!!userReduxData && userReduxData.first_name}\n                            </Link>\n                            <ul className=\"profile-dropdown\">\n                                <li>\n                                    <Link className=\"nav-link\" to=\"/user/my-account\">\n                                        <i className=\"fas fa-user\"></i> My profile\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/user/subscription\">\n                                        <i className=\"fas fa-cog\"></i>Subscription\n                                    </Link>\n                                </li>\n                                {/* <li>\n                            <Link to=\"#\">\n                                <i className=\"fas fa-envelope\"></i>Notifiaction\n                            </Link>\n                            </li> */}\n                                <li>\n                                    <Link to=\"/user/reports\">\n                                        <i className=\"fas fa-list\"></i>Reports\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link\n                                        to=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setIsLogout(true);\n                                        }}\n                                    >\n                                        <i className=\"fas fa-sign-out-alt\"></i>Logout\n                                    </Link>\n                                </li>\n                            </ul>\n                        </li>\n                    </>\n                )}\n            </ul>\n            <Signin show={open} closePop={handleCloseModal} />\n            <Logout\n                show={isLogout}\n                yesLogout={handleLogout}\n                noLogout={() => setIsLogout(false)}\n            />\n        </React.Fragment>\n    );\n};\nexport default Menu;\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\nimport { FORGET, RESET_USER_PASSWORD } from \"../Api\";\nimport axios from \"axios\";\n\n\nconst Reset = ({ show, close , token}) => {\n    const [resetForm, setResetForm] = useState({\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const [loader, setLoader] = useState(false);\n    const history = useHistory();\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n    Modal.setAppElement(\"#root\");\n\n    // handle reset password\n    const handleReset = async (e) => {\n        e.preventDefault();\n        if (resetForm.password == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        if (resetForm.confirmPassword == \"\") {\n            toast.error(\"Please enter your confirm password\");\n            return false;\n        } else {\n            if (resetForm.password != resetForm.confirmPassword) {\n                toast.error(\"Passwords don't match.\");\n                return false;\n            }\n        }\n        try {\n            setLoader(true);\n            const body = {\n                token: token.reset,\n                password: resetForm.password,\n            };\n            const {\n                data: { message, status },\n            } = await axios.post(RESET_USER_PASSWORD, body);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(message);\n                closeModal();\n            }\n        } catch (error) {\n            console.log(error.response);\n            if (error.response?.data?.status == '422') {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n    }\n\n    // close modal and clear state\n    function closeModal() {\n        setTimeout(() => {\n            history.push(\"/\");\n            close();\n            setResetForm({\n                password: \"\",\n                confirmPassword: \"\",\n            });\n        }, 400);\n    }\n\n    // handle on change\n    const handleResetChange = (e) => {\n        setResetForm({\n            ...resetForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n\n    return (\n        <Modal\n            isOpen={show}\n            //onRequestClose={() => setTestWarning(false)}\n            style={customStyles}\n            contentLabel=\"Finish test modal\"\n            className=\"register-modals\"\n            id=\"exampleModalLong\"\n            shouldReturnFocusAfterClose={false}\n        >\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <button\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                            onClick={closeModal}\n                        >\n                            <span aria-hidden=\"true\">×</span>\n                        </button>\n                    </div>\n\n                    <div className=\"modal-body\">\n                        <div className=\"login-deatils\">\n                            <ul className=\"nav nav-tabs\">\n                                <li className=\"active\">\n                                    <a className=\"active\" data-toggle=\"tab\" href=\"#\">\n                                        Reset password\n                  </a>\n                                </li>\n\n                            </ul>\n                        </div>\n\n                        <div className=\"sign-tab-detail\">\n\n                            <form action=\"#\">\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={resetForm.password}\n                                        onChange={handleResetChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        placeholder=\"Confirm password\"\n                                        name=\"confirmPassword\"\n                                        value={resetForm.confirmPassword}\n                                        onChange={handleResetChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button\n                                        type=\"submit\"\n                                        value=\"Forget password\"\n                                        onClick={handleReset}\n                                        disabled={loader}\n                                    >\n                                        {loader && <Spinner />}\n                                        Reset password{\" \"}{loader && '...'}\n                                    </button>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n\n    )\n};\n\nexport default Reset;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background-color: ${({ theme }) => theme.background};\n    color: ${({ theme }) => theme.text};\n  }\n`;","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Menu from './Menu';\n// import { userAuth } from '../features/userSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router';\nimport Reset from './modals/reset';\nimport { RESET_USER , MY_NOTIFICATION, MY_NOTIFICATION_UPDATE, MY_PROFILE} from './Api';\nimport { logout, profile, userAuth, userProfile } from \"../features/userSlice\";\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { ThemeContext } from '../ThemeContaxt/ThemeContaxt';\nimport { GlobalStyles } from '../GlobalStyles/GlobalStyles';\nimport { Badge } from '@material-ui/core';\nimport DarkAndLightMode from '../DarkAndLightMode/DarkAndLightMode';\nimport Cookies from \"js-cookie\";\n\n\nconst Header = () => {\n    let pathname = window.location.pathname;\n    const is_auth = useSelector(userAuth);\n    const [resetModal, setResetModal] = useState(false);\n    const [isOpen, setOpen] = useState(false);\n    const location = useLocation();\n    const isUserReset = queryString.parse(location.search);\n    const history = useHistory();\n    const [mobileNotice, setMobileNoticeData] = useState([]);\n    const [MobileNotseetotal, setMobileNoticenotsee] = useState(0);\n\n    var isRole =\n    !!Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n    const dispatch = useDispatch();\n\n    // console.log(isRole)\n\n    useEffect(() => {\n        isResetPopUp();\n        getnotice();\n    }, []);\n\n\n    const handleMobileNav = () => {\n        setOpen(!isOpen)\n    }\n\n    // check if reset modal pop up or not\n    const isResetPopUp = () => {\n        if (!!isUserReset && isUserReset.reset != null && isUserReset.reset != \"\") {\n            verifyToken(isUserReset.reset);\n        } else {\n            setResetModal(false);\n        }\n    }\n\n    //  verify token from DB\n    const verifyToken = async (token) => {\n        try {\n            const {\n                data: { status, message },\n            } = await axios.get(RESET_USER + '/' + token);\n            if (status == 200) {\n                setResetModal(true);\n            }\n        } catch (error) {\n            history.push(\"/\");\n            toast.error(\"Something went wrong, try again.!\");\n        }\n    }\n\n    // useEffect(() => {\n    //     if (is_auth) {\n    //         setIsAuth(true);\n    //         getnotice();\n    //         //setUserData(JSON.parse(Cookies.get(\"user_data\")));\n    //         window.onload = function () {\n    //             myProfile();\n    //         };\n    //     }\n    //     return () => {\n    //         setIsAuth(false); // clean up function\n    //     };\n    // }, [is_auth]);\n\n    const getnotice = async () => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const body = {\n                user_id: isRole.id,\n            };\n            const {\n                data: { data, status, not_see_total },\n            } = await axios.post(MY_NOTIFICATION, body, config);\n            if (status == 200) {\n                setMobileNoticeData(data);\n                // console.log(data)\n                setMobileNoticenotsee(not_see_total);\n            } else {\n                dispatch(profile({ profile: data }));\n            }\n        } catch (err) {\n            console.log(err, \"axios error\");\n        }\n    };\n\n    const getnoticeupdate = async (noticeId) => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const body = {\n                user_id: isRole.id,\n                notice_id: noticeId,\n            };\n            const {\n                data: { data, status, not_see_total },\n            } = await axios.post(MY_NOTIFICATION_UPDATE, body, config);\n            if (status == 200) {\n                // setNoticeData(data.data);\n                // setNoticenotsee(not_see_total);\n                // getnotice();\n            } else {\n                dispatch(profile({ profile: data }));\n            }\n        } catch (err) {\n            console.log(err, \"axios error\");\n        }\n    };\n\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    const theme = {\n        background: isDarkMode ? '#000' : '#fff',\n        text: isDarkMode ? '#fff' : '#000',\n    };\n\n    const logoSRC = isDarkMode ? 'assets/images/logo-2.png' : 'assets/images/logo-white (1).png'\n\n    return (\n        <>\n            <GlobalStyles theme={theme} />\n            <header className=\"main-header\">\n                <div className=\"container\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                        <Link to={(is_auth ? \"/user/dashboard\" : \"/\") && (isRole.affiliate_role == 7 ? \"/lms/dashboard\" : \"/\")} className=\"navbar-brand\"><img src={logoSRC} alt=\"\" /></Link>\n                        \n                        <div className='d-md-block d-lg-none d-block w-40'>\n                            <DarkAndLightMode></DarkAndLightMode>\n                        </div>\n\n                        {(!!is_auth && isRole ) ? (\n                            <ul className=\"navbar-nav mr-auto d-lg-none d-md-block d-block\" style={{width: \"70px\"}}>\n                            <li className=\"\">\n                                <Link\n                                    className={` d-flex${pathname === \"#\" ? \"nav-link active\" : \"nav-link\"\n                                        } ${isDarkMode ? 'color_light' : 'color_dark'}`}\n                                    to=\"#\"\n                                >\n                                    <Badge badgeContent={MobileNotseetotal} color=\"secondary\">\n                                        <span style={{width: \"30px\"}}>\n                                            <i className=\"fas fa-bell\"></i>\n                                        </span>\n                                    </Badge>\n                                </Link>\n\n                                <ul className=\"profile-dropdown notification-view\">\n                                    {mobileNotice?.map((item, index) =>\n                                        item.is_view == 0 ? (\n                                            item.notice_type == 1 || item.notice_type == 5 ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to=\"/lms/subscription\" onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                            <b>{item.notice_text}</b>\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) : (\n                                                item.notice_type == 7 ? (\n                                                    <>\n                                                        <li>\n                                                            <Link className=\"nav-link\" to={item.slug} onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                <b>{item.notice_text}</b>\n                                                            </Link>\n                                                        </li>\n                                                    </>\n                                                ) :\n                                                    item.notice_type == 8 ? (\n                                                        <>\n                                                            <li>\n                                                                <Link className=\"nav-link\" to={item.slug} onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                    <b>{item.notice_text}</b>\n                                                                </Link>\n                                                            </li>\n                                                        </>\n                                                    ) : (\n                                                        <>\n                                                            <li>\n                                                                <Link className=\"nav-link\" to=\"/lms/exam\" onClick={(e) => { getnoticeupdate(item.id) }}>\n                                                                    <b>{item.notice_text}</b>\n                                                                </Link>\n                                                            </li>\n                                                        </>\n                                                    )\n                                            )\n\n                                        ) : (\n                                            item.notice_type == 1 || item.notice_type == 5 ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to=\"/lms/subscription\">\n                                                            {item.notice_text}\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) : item.slug != '' ? (\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to={item.slug}>\n                                                            {item.notice_text}\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            ) : (\n\n                                                <>\n                                                    <li>\n                                                        <Link className=\"nav-link\" to=\"/lms/exam\">\n                                                            {item.notice_text}\n                                                        </Link>\n                                                    </li>\n                                                </>\n                                            )\n                                        )\n                                    )}\n\n                                </ul>\n                            </li>\n                        </ul>\n                        )\n                        :\n                        (\"\")\n                    }\n\n\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onClick={handleMobileNav}>\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n\n                        <div className={`${isOpen ? 'show' : ''} collapse navbar-collapse ${isDarkMode ? \"navbar_color \" : \"navbar_dark\"}`} id=\"navbarSupportedContent\">\n                            <Menu is_auth={is_auth} />\n                        </div>\n                        {/* <div className='mt-5 pb-5'>\n                            <button onClick={isDarkMode}>dark mode</button>\n                        </div> */}\n                    </nav>\n                </div>\n\n                <Reset show={resetModal} close={() => setResetModal(false)} token={isUserReset} />\n            </header>\n        </>\n    );\n}\nexport default Header;","import React, { useContext } from \"react\";\nimport WhatsAppWidget from \"react-whatsapp-chat-widget\";\nimport \"react-whatsapp-chat-widget/index.css\";\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport { GlobalStyles } from \"../GlobalStyles/GlobalStyles\";\n\nconst Footer = () => {\n    const { isDarkMode } = useContext(ThemeContext);\n\n    const theme = {\n        background: isDarkMode ? '#222224' : '#fff',\n        text: isDarkMode ? '#fff' : '#222224',\n    };\n\n    const logoSRC = isDarkMode ? 'assets/images/logo-2.png' : 'assets/images/logo-2.png'\n\n    return (\n        <>\n        <GlobalStyles theme={theme} />\n            <WhatsAppWidget\n                phoneNo=\"+234-815555-7307\"\n                position=\"right\"\n                widgetWidth=\"300px\"\n                widgetWidthMobile=\"60px\"\n                autoOpen={false}\n                autoOpenTimer={5000}\n                messageBox={true}\n                messageBoxTxt=\"\"\n                iconSize=\"60\"\n                iconColor=\"white\"\n                iconBgColor=\"green\"\n                headerIcon=\"https://examtice.com/assets/images/white_logo.png\"\n                headerIconColor=\"pink\"\n                headerIconBgColor=\"black\"\n                headerTxtColor=\"black\"\n                headerBgColor=\"#ff1d6a\"\n                headerTitle=\"Examtice\"\n                headerCaption=\"Online\"\n                bodyBgColor=\"#bbb\"\n                chatPersonName=\"Support\"\n                chatMessage={<>Hi there 👋 <br /><br /> How can I help you?</>}\n                footerBgColor=\"#999\"\n                btnBgColor=\"#ff1d6a\"\n                btnTxtColor=\"black\"\n                btnTxt=\"Start Chat\"\n            />\n            \n            <footer className={`${isDarkMode ? \"footer_light\" : \"footer_dark\"} page-footer`}>\n                <div className=\"container\">\n                    <div className=\"inner-footer\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3\">\n                                <div className=\"footer-nav\">\n                                    <img src={logoSRC} alt=\"\" />\n                                    {/* <p>50 Raritan Center Pkwy, <br />Edison, NJ 08837, USA</p> */}\n                                    <span>\n                                        {/* <Link to=\"#\"><i className=\"fas fa-phone\" />+00 111 222 1234</Link> */}\n                                        <Link\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                window.location = \"mailto:support@examtice.com\";\n                                            }}\n                                            \n                                        >\n                                            <i className=\"fas fa-envelope\" />\n                                            <span className={isDarkMode ? '' : ''}>support@examtice.com</span>\n                                        </Link>\n                                    </span>\n                                    <div className=\"footer-social middle\">\n                                        <a href=\"https://www.facebook.com/examtice\" target=\"_blank\">\n                                            <i className=\"fab fa-facebook-f\" />\n                                        </a>\n                                        <a href=\"https://twitter.com/examtice\" target=\"_blank\">\n                                            <i className=\"fab fa-twitter\" />\n                                        </a>\n                                        <a href=\"https://www.instagram.com/examtice.official/\" target=\"_blank\">\n                                            <i className=\"fab fa-instagram\" />\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer-nav-page\">\n                    <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/about\">About us</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/free-test\">Free test</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/blog\">Latest news</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/faq\">FAQ</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/contact-us\">Contact us</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/terms-condition\">Terms & Condition</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/privacy-policy\">Privacy Policy</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/terms-of-use\">Terms of use</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/disclaimer\">Disclaimer</Link>\n                        </li>\n                        {/* <li>\n                            <Link to=\"/terms-condition\">Terms & Condition</Link>\n                        </li> */}\n                        {/* <li>\n                            <Link to=\"/affiliate-terms-condition\">Affiliate Terms & Condition</Link>\n                        </li> */}\n                    </ul>\n                </div>\n                <div className=\"copy-right\">\n                    <p>©2021 Examtice. All Rights Reserved</p>\n                </div>\n            </footer>\n        </>\n    );\n};\nexport default Footer;\n","import React, { useRef, useEffect } from 'react';\nimport Carousel from 'react-owl-carousel2';\n\n// let prevPath;\nfunction OwlCarousel ( props ) {\n    const { adClass, options , customid } = props;\n    const carouselRef = useRef( null );\n    const defaultOptions = {\n        items: 1,\n        loop: false,\n        margin: 0,\n        responsiveClass: \"true\",\n        nav: true,\n        navText: [ '<span aria-label=\"Previous\">‹</span>', '<span aria-label=\"Next\">›</span>' ],\n        navElement: \"button\",\n        dots: true,\n        smartSpeed: 400,\n        autoplay: false,\n        autoHeight: false\n        // autoplayTimeout: 5000,\n    };\n\n    useEffect( () => {\n        if ( props.onChangeRef ) {\n            props.onChangeRef( carouselRef );\n        }\n    }, [ carouselRef ] )\n\n    let events = {\n        onTranslated: function ( e ) {\n            if ( !e.target ) return;\n            if ( props.onChangeIndex ) {\n                props.onChangeIndex( e.item.index );\n            }\n        }\n    }\n\n    events = Object.assign( {}, events, props.events );\n    let settings = Object.assign( {}, defaultOptions, options );\n\n    return (\n        props.children ?\n            props.children.length > 0 || ( props.children && props.children.length === undefined ) ?\n                <Carousel ref={ carouselRef } id={ `${ customid }` } className={ `owl-carousel ${ adClass }` } options={ settings } events={ events }>\n                    { props.children }\n                </Carousel >\n                : \"\"\n            : \"\"\n    );\n}\n\nexport default React.memo( OwlCarousel );","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { CONTACT_US } from \"./Api\";\nimport Spinner from \"./spinner/Spinner\";\nimport DarkAndLightMode from \"../DarkAndLightMode/DarkAndLightMode\";\n\nconst ContactUs = () => {\n  const [contactLoader, setContactLoader] = useState(false);\n\n  const [contactData, setContactData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const handleChange = (e) => {\n    setContactData({\n      ...contactData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleContact = async (e) => {\n    e.preventDefault();\n    if (contactData.name == \"\") {\n      toast.error(\"Please enter your name\");\n      return false;\n    }\n    if (contactData.email == \"\") {\n      toast.error(\"Please enter your email\");\n      return false;\n    }\n    if (contactData.message == \"\") {\n      toast.error(\"Please enter your message\");\n      return false;\n    }\n    try {\n      setContactLoader(true);\n      const body = {\n        name: contactData.name,\n        email: contactData.email,\n        message: contactData.message,\n      };\n      const {\n        data: { message, status },\n      } = await axios.post(CONTACT_US, body);\n      if (status == 200) {\n        toast.success(message);\n        setContactLoader(false);\n        setContactData({\n          name: \"\",\n          email: \"\",\n          message: \"\",\n        });\n      }\n    } catch (error) {\n      if (error.response?.data?.status == 401) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again..!\");\n      }\n      setContactLoader(false);\n    }\n  };\n  return (\n    <>\n    {/* <DarkAndLightMode></DarkAndLightMode> */}\n      <section className=\"contact-form\">\n        <div className=\"row d-flex align-items-center\">\n          <div className=\"col-md-6 col-sm-12\">\n            <div className=\"contact-fom-right\"></div>\n          </div>\n          <div className=\"col-md-6 col-sm-9 middle\">\n            <div className=\"contact-fom-left\">\n              <h2 className=\"page-heading\">Contact Us</h2>\n              <form>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    required\n                    name=\"name\"\n                    value={contactData.name}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={contactData.email}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    placeholder=\"Message\"\n                    name=\"message\"\n                    required\n                    value={contactData.message}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  {contactLoader && <Spinner />}\n                  <input\n                    type=\"submit\"\n                    defaultValue=\"Submit\"\n                    disabled={contactLoader}\n                    onClick={handleContact}\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"tyr_free_link\">\n          <h3>\n            <Link to=\"/free-test\">\n              TRY FOR <span>FREE</span>\n            </Link>\n          </h3>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ContactUs;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport axios from \"axios\";\nimport OwlCarousel from \"../components/owl-carousel\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport {\n    home_crousal,\n    promise,\n    owlCourses,\n    news,\n    getTestDate,\n    removeTags,\n} from \"../components/CommonFunction\";\nimport {\n    GET_COURSES,\n    GET_LATEST_BLOGS,\n    GET_TESTIMONIALS,\n    ABOUT_HOME,\n    HOME_PAGE_SLIDER,\n    HOME_PAGE_VIDEO\n} from \"../components/Api\";\nimport { global } from \"../components/Config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactUs from \"../components/Contact-us\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\n//import { selectTestimonials, setTestimonials } from \"../features/userSlice\";\n\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\n\n\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { useRef } from \"react\";\n\n\n\nconst Home = (props) => {\n    const [blogs, setBlogs] = useState([]);\n    const [courses, setCourses] = useState([]);\n    const [aboutUs, setAboutUs] = useState([]);\n    const [slider, setSlider] = useState([]);\n    const [aboutUsLoader, setAboutUsLoader] = useState(false);\n    const [blogLoader, setBlogLoader] = useState(false);\n    const [courseLoader, setCourseLoader] = useState(false);\n    const [testimonialsLoader, setTestimonialsLoader] = useState(false);\n    const [testimonialsData, setTestimonialsData] = useState([]);\n\n    const [currentSlide, setCurrentSlide] = useState(0);\n    const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n    const thumbRef = useRef(null);\n    const [itemsPerPage, setItemsPerPage] = useState(9);\n    const [slides, setSlides] = useState([])\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getCourses();\n        getBlogs();\n        getTestimonials();\n        getAboutUs()\n        getSlider()\n        getVideos()\n    }, []);\n\n    // Get latest course\n    const getSlider = async () => {\n        try {\n            setCourseLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(HOME_PAGE_SLIDER);\n            if (status == 200) {\n                setSlider(data);\n                setCourseLoader(false);\n            }\n        } catch (error) {\n            setCourseLoader(false);\n            console.log(error);\n        }\n    };\n    // console.log(slider)\n\n    // Get latest course\n    const getCourses = async () => {\n        try {\n            setCourseLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_COURSES);\n            if (status == 200) {\n                setCourses(data);\n                setCourseLoader(false);\n            }\n        } catch (error) {\n            setCourseLoader(false);\n            console.log(error);\n        }\n    };\n\n    // Get About Us\n    const getAboutUs = async () => {\n        try {\n            setAboutUsLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(ABOUT_HOME);\n            if (status == 200) {\n                setAboutUs(data);\n                setAboutUsLoader(false);\n            }\n        } catch (error) {\n            setAboutUsLoader(false);\n            console.log(error);\n        }\n    };\n\n    // Get latest blogs\n    const getBlogs = async () => {\n        try {\n            setBlogLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_LATEST_BLOGS);\n            if (status == 200) {\n                setBlogs(data);\n                setBlogLoader(false);\n            }\n        } catch (error) {\n            setBlogLoader(false);\n            console.log(error);\n        }\n    };\n\n    // GET_TESTIMONIALS\n    const getTestimonials = async () => {\n        try {\n            setTestimonialsLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_TESTIMONIALS);\n            if (status == 200) {\n                setTestimonialsData(data);\n                setTestimonialsLoader(false);\n            }\n        } catch (error) {\n            setTestimonialsLoader(false);\n            console.log(error);\n        }\n    };\n\n    const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n\n\n\n    // GET_vIDEO sLIDER\n    useEffect(() => {\n        // Update the number of items to display based on screen width\n        const handleResize = () => {\n            const screenWidth = window.innerWidth;\n\n            if (screenWidth >= 1024) {\n                // Large screen (desktop view)\n                setItemsPerPage(10);\n            } else if (screenWidth >= 768) {\n                // Medium screen (tab view)\n                setItemsPerPage(7);\n            } else {\n                // Small screen (mobile view)\n                setItemsPerPage(2);\n            }\n        };\n\n        // Initial setup\n        handleResize();\n\n        // Listen for window resize events\n        window.addEventListener('resize', handleResize);\n\n        // Clean up the event listener when the component unmounts\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n\n\n    const getVideos = async () => {\n        try {\n            setCourseLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(HOME_PAGE_VIDEO);\n            if (status == 200) {\n                setSlides(data);\n                setCourseLoader(false);\n            }\n        } catch (error) {\n            setCourseLoader(false);\n            console.log(error);\n        }\n    };\n\n    // get video link img\n    const [imgUrl, setImgUrl] = useState([]);\n\n    const findImg = () => {\n        const imgUrls = slides.map((slide) => {\n            const iframeTag = slide.link;\n\n            // Regular expression to extract the src attribute value\n            const srcRegex = /src=\"([^\"]+)\"/;\n            const match = iframeTag.match(srcRegex);\n\n            if (match) {\n                // Extract the video ID from the iframe src attribute\n                const iframeSrc = match[1];\n                const videoId = iframeSrc.match(/embed\\/([^?]+)/)[1];\n\n                // Constructing the thumbnail URL\n                const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/0.jpg`;\n\n\n                return thumbnailUrl;\n            }\n\n            return null;\n        });\n\n        const filteredUrls = imgUrls.filter((url) => url !== null);\n        setImgUrl(filteredUrls);\n        console.log(filteredUrls);\n    };\n\n    useEffect(() => {\n        findImg();\n    }, [slides]);\n\n    const handleMainSlideChange = (index) => {\n        setCurrentSlide(index);\n        setIsVideoPlaying(false);\n    };\n\n    const handlePlayButtonClick = (index) => {\n        const video = document.getElementById(`video-${index}`);\n        if (video) {\n            video.play();\n            setIsVideoPlaying(true);\n        }\n    };\n\n    const goToNextThumbnail = () => {\n        if (currentSlide < slides.length - 1) {\n            setCurrentSlide(currentSlide + 1);\n        }\n    };\n\n    const goToPreviousThumbnail = () => {\n        if (currentSlide > 0) {\n            setCurrentSlide(currentSlide - 1);\n        }\n    };\n\n    // Calculate the current page index\n    const currentPage = Math.floor(currentSlide / itemsPerPage);\n\n    const visibleSlides = slides.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\n\n    // console.log(visibleSlides)\n\n\n    return (\n        <>\n            <Header />\n            {/* home page banner */}\n            <section className=\"banner-section\">\n                <OwlCarousel\n                    customid=\"home-crousal\"\n                    adClass=\"owl-carousel owl-theme\"\n                    options={home_crousal}\n                >\n                    {\n                        slider.map(sl => (\n                            <>\n                                <div className=\"item\">\n                                    <a href={sl.link}>\n                                        <img src={`https://www.examtice.com/backend${sl.image}`} alt=\"Examtice\" />\n                                    </a>\n                                </div>\n                            </>\n                        ))\n                    }\n                </OwlCarousel>\n            </section>\n\n            <section className=\"service-home\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"about-left\">\n                                <h6>MAIN FEATURES</h6>\n                                <h2 className=\"page-heading\">Top Exams</h2>\n                            </div>\n                        </div>\n                        {courseLoader ? (\n                            <div className=\"spinner_div\">\n                                <Spinner />\n                            </div>\n                        ) : (\n                            <>\n                                {courses.slice(0, 5).map((item, key) => (\n                                    <div\n                                        className=\"col-md-2 wow fadeInUp animate latest_courses\"\n                                        style={{ animationDuration: \"1s\" }}\n                                        key={key}\n                                    >\n                                        <Link to={`/user/buy-package/${item.id}`}>\n                                            <div className=\"service-inner\">\n                                                <img\n                                                    src={\n                                                        `${global.API_HOST}assets/images/courses/` +\n                                                        item.image\n                                                    }\n                                                    alt=\"\"\n                                                />\n                                            </div>\n                                            <div className={` service-inner-title ${isDarkMode ? 'course_des_dark_mode' : 'course_des_light_mode'}`}>\n                                                <h3>{item.name}</h3>\n                                                <p>{item.description}</p>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                ))}\n                            </>\n                        )}\n                    </div>\n                </div>\n            </section>\n\n\n            <section className={`${isDarkMode ? \"video-section\" : \"video-section-light\"}`}>\n                <div className=\"container\">\n                    <div className=\"about-left\">\n                        <h6>TOUR</h6>\n                        <h2 className=\"page-heading\">Media Guide</h2>\n                    </div>\n                    <div style={{ textAlign: 'center' }}>\n                        <Carousel\n                            infiniteLoop={true}\n                            selectedItem={currentSlide}\n                            onChange={handleMainSlideChange}\n                            className=\"video-carousel\"\n                            style={{ border: 'none' }}\n                        >\n                            {slides.map((slide, index) => (\n                                <div className=\"video-content\" key={index}>\n                                    {slide && (\n                                        <div className=\"video-slide\" style={{ border: 'none' }}>\n                                            <div dangerouslySetInnerHTML={{ __html: slide.link }}></div>\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </Carousel>\n                    </div>\n\n                    <div className='thumbs' style={{ display: 'flex', justifyContent: 'center', marginTop: \"20px\" }} ref={thumbRef}>\n\n                        <button onClick={goToPreviousThumbnail} className=\"rounded\" style={{ width: \"30px\", background: \"none\", outline: \"none\", border: \"none\", cursor: \"pointer\", color: \"#fff\", fontSize: \"25px\", marginRight: \"5px\" }}><span><i class=\"fas fa-solid fa-chevron-left video-thumb-left-arrow\"></i></span></button>\n\n                        <div style={{ display: 'flex', justifyContent: 'center', overflow: 'hidden' }}>\n\n                            {visibleSlides.map((slide, index) => (\n                                <li\n                                    key={index}\n                                    onClick={() => handleMainSlideChange(currentPage * itemsPerPage + index)}\n                                    className={`thumb-item ${currentPage * itemsPerPage + index === currentSlide ? 'selected-thumb' : ''}`}\n                                    style={{\n                                        listStyle: 'none',\n                                        marginRight: '5px', // You can adjust the margin as needed\n                                        background: currentPage * itemsPerPage + index === currentSlide ? 'blue' : 'none',\n                                    }}\n                                >\n                                    <img\n                                        src={imgUrl[index]} // Use the imgUrl corresponding to the current slide\n                                        alt={`Image ${index + 1}`}\n                                        width='100'\n                                        style={{ backgroundColor: 'black' }}\n                                    />\n                                </li>\n                            ))}\n                        </div>\n\n                        <button onClick={goToNextThumbnail} className=\"\" style={{ width: \"30px\", background: \"none\", outline: \"none\", border: \"none\", cursor: \"pointer\", color: \"#fff\", fontSize: \"25px\" }}><span><i class=\"fas fa-solid fa-chevron-right video-thumb-right-arrow\"></i></span></button>\n                    </div>\n                </div>\n            </section>\n\n\n            <section className=\"about-home\">\n                <div className=\"container\">\n                    {\n                        aboutUsLoader ? (\n                            <div className=\"spinner_div\">\n                                <Spinner />\n                            </div>\n                        )\n                            :\n                            (\n                                <>\n                                    <div className=\"row d-flex align-items-center\">\n                                        <div className=\"col-md-6 col-12\">\n                                            <div className=\"about-left\">\n                                                <h6>ABOUT US</h6>\n                                                <h2 className=\"page-heading\">{aboutUs.title}</h2>\n\n                                                <div className=\"\">\n                                                    <p dangerouslySetInnerHTML={{ __html: aboutUs.description }}></p>\n                                                </div>\n\n                                                <Link className=\"common-btn\" to=\"/about\">\n                                                    Read More\n                                                </Link>\n                                            </div>\n                                        </div >\n                                        <div className=\"col-md-6 d-md-block d-none\">\n                                            <div className=\"about-right\">\n                                                <div className=\"row d-flex align-items-center\">\n                                                    <img src=\"assets/images/about-preview.png\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div >\n                                </>\n                            )\n                    }\n                </div >\n            </section >\n\n            < section className=\"latest-news\" >\n                <div className=\"container\">\n                    <h2 className=\"page-heading\">Latest News</h2>\n                    {blogLoader ? (\n                        <div className=\"spinner_div\">\n                            <Spinner />\n                        </div>\n                    ) : (\n                        <OwlCarousel\n                            adClass=\"owl-carousel owl-theme\"\n                            customid=\"news\"\n                            options={news}\n                        >\n                            {blogs &&\n                                blogs.map((item, key) => (\n                                    <div className={`item blog-item ${isDarkMode ? 'latest_news_dark_mode' : 'latest_news_light_mode'}`} key={key}>\n                                        <Link to={`blog/${item.slug}`}>\n                                            <div className=\"page-blog\">\n                                                <img\n                                                    src={\n                                                        `${global.API_HOST}assets/images/blogs/` +\n                                                        item.image\n                                                    }\n                                                    alt={item.title}\n                                                />\n                                                <h5>{item.title}</h5>\n                                                <p>\n                                                    {removeTags(item.description).length > 100\n                                                        ? removeTags(item.description).substring(0, 100) +\n                                                        \"...\"\n                                                        : removeTags(item.description)}\n                                                </p>\n                                                <div className=\"lates-clinder\">\n                                                    {/* <span>\n                        <i className=\"fas fa-globe-asia\" />\n                        Long Name Here\n                      </span> */}\n                                                    <span>\n                                                        <i className=\"fas fa-clock\" />\n                                                        {getTestDate(item.created_at)}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                ))}\n                        </OwlCarousel>\n                    )}\n                    {blogs && (\n                        <Link className=\"common-btn common-blue\" to=\"/blog\">\n                            See More Blogs\n                        </Link>\n                    )}\n                </div>\n            </ section>\n\n            {/* contact us form */}\n            < ContactUs />\n            {/* contact us form */}\n\n            < Footer />\n        </>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport axios from \"axios\";\nimport {\n    GET_TESTIMONIALS,\n    TEAM_LEAD,\n    ABOUT_US,\n    ABOUT_WHY_US\n} from \"../components/Api\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport OwlCarousel from \"../components/owl-carousel\";\nimport {\n    home_crousal,\n    promise,\n    owlCourses,\n    news,\n    getTestDate,\n    removeTags,\n} from \"../components/CommonFunction\";\nimport { global } from \"../components/Config\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst About = (props) => {\n    const { isDarkMode } = useContext(ThemeContext);\n\n    const [testimonialsLoader, setTestimonialsLoader] = useState(false);\n    const [teamLeadLoader, setSetTeamLeadLoader] = useState(false);\n    const [testimonialsData, setTestimonialsData] = useState([]);\n    const [teamLeadData, setTeamLeadData] = useState({});\n    const [aboutUs, setAboutUs] = useState({});\n    const [aboutWhyUs, setAboutWhyUs] = useState({});\n\n    useEffect(() => {\n        getTestimonials();\n        getTeamLead()\n        getAboutUs()\n        getWhyUs()\n    }, []);\n\n    const getTeamLead = async () => {\n        try {\n            setSetTeamLeadLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(TEAM_LEAD);\n            if (status == 200) {\n                setTeamLeadData(data);\n                setSetTeamLeadLoader(false);\n            }\n        } catch (error) {\n            setSetTeamLeadLoader(false);\n            console.log(error);\n        }\n    };\n    const getAboutUs = async () => {\n        try {\n            setSetTeamLeadLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(ABOUT_US);\n            if (status == 200) {\n                setAboutUs(data);\n                setSetTeamLeadLoader(false);\n            }\n        } catch (error) {\n            setSetTeamLeadLoader(false);\n            console.log(error);\n        }\n    };\n    const getWhyUs = async () => {\n        try {\n            setSetTeamLeadLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(ABOUT_WHY_US);\n            if (status == 200) {\n                setAboutWhyUs(data);\n                setSetTeamLeadLoader(false);\n            }\n        } catch (error) {\n            setSetTeamLeadLoader(false);\n            console.log(error);\n        }\n    };\n\n    // console.log(teamLeadData)\n\n    const getTestimonials = async () => {\n        try {\n            setTestimonialsLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_TESTIMONIALS);\n            if (status == 200) {\n                setTestimonialsData(data);\n                setTestimonialsLoader(false);\n            }\n        } catch (error) {\n            setTestimonialsLoader(false);\n            console.log(error);\n        }\n    };\n\n    const theme = {\n        background: isDarkMode ? '#333' : '#fff',\n        text: isDarkMode ? '#fff' : '#333',\n    };\n\n    return (\n        <>\n            <Header />\n            {\n                teamLeadLoader ? (\n                    <div className=\"spinner_div\">\n                        <Spinner />\n                    </div>\n                )\n                    :\n                    (\n                        <>\n                            <section className=\"welcome-ebay\">\n                                {/* <button onClick={toggleTheme}>Toggle Theme</button> */}\n                                <div className=\"about-memb-inner\">\n                                    <img src={`https://www.examtice.com/backend${teamLeadData.image}`} alt=\"\" />\n                                    <p>\n                                        <span>Team Lead:</span> {teamLeadData.title}\n                                    </p>\n                                    <Link\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            window.location = \"mailto:support@examtice.com\";\n                                        }}\n                                        style={{ textDecoration: \"none\" }}\n                                    >\n                                        <p>\n                                            <span>Email:</span> {teamLeadData.email}\n                                        </p>\n                                    </Link>\n                                </div>\n                                <div className=\"container\">\n                                    <div className=\"about-left\">\n                                        <h6>ABOUT US</h6>\n                                        <h2 className=\"page-heading\">{aboutUs.title}</h2>\n\n                                        {aboutUs && (\n                                            <div className=\"aboutUs_des\">\n                                                <p dangerouslySetInnerHTML={{ __html: aboutUs.description }}></p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </section >\n\n                            <section className=\"about-team\">\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12 col-lg-12 col-12 pr-5\">\n                                            <p className=\"we-head\">\n                                                <span>Why us:</span>\n                                            </p>\n\n                                            {aboutWhyUs && (\n                                                <div className=\"aboutUs_des\">\n                                                    <p dangerouslySetInnerHTML={{ __html: aboutWhyUs.description }}></p>\n                                                </div>\n                                            )}\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </section>\n                        </>\n                    )\n            }\n\n            <section className=\"testomonalis-section\">\n                <div className=\"container\">\n                    <h2 className=\"page-heading\">Testimonials</h2>\n                    {testimonialsLoader ? (\n                        <div className=\"spinner_div\">\n                            <Spinner />\n                        </div>\n                    ) : (\n                        <OwlCarousel\n                            adClass=\"owl-carousel owl-theme\"\n                            customid=\"promise\"\n                            options={promise}\n                        >\n                            {testimonialsData &&\n                                testimonialsData.map((item, i) => (\n                                    <div className=\"item\" key={i}>\n                                        <p>{item.description}</p>\n                                        <img\n                                            src={\n                                                `${global.API_HOST}assets/images/testimonials/` +\n                                                item.image\n                                            }\n                                            alt=\"\"\n                                        />\n                                        <h5>{item.client_name}</h5>\n                                        {/* <span>Our Client</span> */}\n                                    </div>\n                                ))}\n                        </OwlCarousel>\n                    )}\n                </div>\n            </section>\n\n            <section className=\"our-process\">\n                <div className=\"container\">\n                    <h3 className={`${isDarkMode ? \"text_color_light\" : \"text_color_dark\"}`}>\n                        <Link to=\"/free-test\">\n                            TRY FOR <span>FREE</span>\n                        </Link>\n                    </h3>\n                    <h3 className={`${isDarkMode ? \"text_color_light\" : \"text_color_dark\"}`}>\n                        <Link to=\"/eshop\">\n                            To purchase visit our <span>e-shop</span>\n                        </Link>\n                    </h3>\n                </div>\n            </section>\n\n            <Footer />\n        </>\n    );\n};\n\nexport default About;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { GET_COURSES } from \"../components/Api\";\nimport { global } from \"../components/Config\";\nimport { toast } from \"react-toastify\";\nimport { css } from \"@emotion/react\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport Cookies from \"js-cookie\";\nimport DarkAndLightMode from \"../DarkAndLightMode/DarkAndLightMode\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: black;\n  size: 35px;\n  border-color: #fffff;\n`;\n\nconst Eshop = (props) => {\n    const [courses, setCourses] = useState([]);\n    let [loader, setLoader] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        getCourses();\n    }, []);\n\n    //get course\n    const getCourses = async () => {\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_COURSES);\n            if (status == 200) {\n                setCourses(data);\n                setLoader(false);\n            }\n        } catch (error) {\n            setLoader(false);\n            toast.error(\"Something went wrong, please try again.!\");\n        }\n    };\n\n    // If user click on buy button\n    const handleBuyCourse = (e) => {\n        e.preventDefault();\n        if (Cookies.get(\"token\") && Cookies.get(\"user_data\")) {\n            history.push(\"/user/buy-package/\" + e.target.id);\n        } else {\n            toast.error(\"Kindly Logged In..!\");\n        }\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            {/* <DarkAndLightMode></DarkAndLightMode> */}\n            <Header />\n\n            {/* <section className=\"inner-banner\">\n        <img src=\"assets/images/eshop-banner.jpg\" alt=\"\" />\n        <div className=\"inner-banner-overlay\">\n          <h2>E-Shop</h2>\n        </div>\n      </section> */}\n            <section className=\"become-affilated eshop\">\n                <div className=\"container\">\n                    <h2 className=\"page-heading\">E-Shop</h2>\n                    {loader ? (\n                        <div className=\"spinner_div\">\n                            <Spinner />\n                        </div>\n                    ) : (\n                        // <div className=\"row books-collection\">\n                        //     {courses.length > 0 ? (\n                        //         courses.map((item, i) => (\n                        //             <div className=\"col-md-6 mobileeshop-view\" key={i}>\n                        //                 <div className=\"e-book-inner\">\n                        //                     <img\n                        //                         src={\n                        //                             `${global.API_HOST}assets/images/courses/` +\n                        //                             item.image\n                        //                         }\n                        //                         alt=\"\"\n                        //                         style={{ width: \"80%\" }}\n                        //                     />\n                        //                     <div>\n                        //                         <h4>{item.name} </h4>\n                        //                         <p>{item.description}</p>\n                        //                         <span>₦ {item.price_ngn}</span>\n                        //                         <Link\n                        //                             className=\"nav-link\"\n                        //                             to={`/user/buy-package/${item.id}`}\n                        //                         >\n                        //                             Buy now\n                        //                         </Link>\n                        //                     </div>\n                        //                 </div>\n                        //             </div>\n                        //         ))\n                        //     ) : (\n                        //         <p>No courses found..!</p>\n                        //     )}\n\n                        //     {courses.length > 0 ? (\n                        //         courses.map((item, i) => (\n                        //             <div className=\"col-md-4 desktopeshop-view mb-4\" key={i}>\n                        //                 <div className={`e-book-inner-desktop ${isDarkMode ? 'e-book-inner-desktop-dark' : 'e-book-inner-desktop-light'}`}>\n                        //                     <div className=\"col-md-12 eshop_item_img\">\n                        //                         <img\n                        //                             src={\n                        //                                 `${global.API_HOST}assets/images/courses/` +\n                        //                                 item.image\n                        //                             }\n                        //                             alt=\"\"\n                        //                         />\n                        //                     </div>\n                        //                     <div className=\"col-md-12 item_info\">\n\n                        //                         <div className=\"\">\n                        //                             <div className=\"d-block mb-3\">\n                        //                                 <b>{item.name} </b>\n                        //                             </div>\n                        //                             <div className=\"d-block mb-5\">\n                        //                                 <i>{item.description}</i>\n                        //                             </div>\n                        //                             <div className=\"d-block mb-3\">\n                        //                                 &nbsp;\n                        //                                 <span>₦ {item.price_ngn}</span>\n                        //                                 <Link\n                        //                                     className=\"nav-link\"\n                        //                                     to={`/user/buy-package/${item.id}`}\n                        //                                 >\n                        //                                     Buy now\n                        //                                 </Link>\n                        //                             </div>\n                        //                         </div>\n\n                        //                     </div>\n                        //                 </div>\n                        //             </div>\n                        //         ))\n                        //     ) : (\n                        //         <p>No courses found..!</p>\n                        //     )}\n                        // </div>\n\n                        <div className=\"row books-collection\">\n                            {courses.length > 0 ? (\n                                courses.map((item, i) => (\n                                    <div className=\"col-md-6 col-12  mobileeshop-view mb-5\" key={i}>\n                                        <div className={`e-book-inner-mobile-view ${isDarkMode ? 'e-book-inner-desktop-dark' : 'e-book-inner-desktop-light'}`}>\n                                            <div className=\"col-md-4 eshop_item_mobile_img\">\n                                                <img\n                                                    src={\n                                                        `${global.API_HOST}assets/images/courses/` +\n                                                        item.image\n                                                    }\n                                                    alt=\"\"\n                                                />\n                                            </div>\n                                            <div className=\"col-md-8 col-8 item_info_mobile_cont\">\n\n                                                <div className=\"\">\n                                                    <div className=\"d-block mb-3\">\n                                                        <b>{item.name} </b>\n                                                    </div>\n                                                    <div className=\"d-block mb-3\">\n                                                        <i>{item.description}</i>\n                                                    </div>\n                                                    <div className=\"d-block mb-3\">\n                                                        &nbsp;\n                                                        <span>₦ {item.price_ngn}</span>\n                                                        <Link\n                                                            className=\"nav-link\"\n                                                            to={`/user/buy-package/${item.id}`}\n                                                        >\n                                                            Buy now\n                                                        </Link>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            ) : (\n                                <p>No courses found..!</p>\n                            )}\n\n                            {courses.length > 0 ? (\n                                courses.map((item, i) => (\n                                    <div className=\"col-md-6 col-12 desktopeshop-view\" style={{marginBottom: '40px'}} key={i}>\n                                        <div className={`e-book-inner-desktop e-book-desktop ${isDarkMode ? 'e-book-inner-desktop-dark' : 'e-book-inner-desktop-light'}`}>\n                                            <div className=\"col-md-4 eshop_item_img\">\n                                                <img\n                                                    src={\n                                                        `${global.API_HOST}assets/images/courses/` +\n                                                        item.image\n                                                    }\n                                                    alt=\"\"\n                                                />\n                                            </div>\n                                            <div className=\"col-md-8 item_info\">\n\n                                                <div className=\"eshop-item-des ml-3\">\n                                                    <div className=\"d-block mb-3\">\n                                                        <b>{item.name} </b>\n                                                    </div>\n                                                    <div className=\"d-block mb-4\">\n                                                        <i className={isDarkMode ? 'e-shop-color-light' : 'e-shop-color-dark'}>{item.description}</i>\n                                                    </div>\n                                                    <div className=\"d-block mb-3\">\n                                                        &nbsp;\n                                                        <span>₦ {item.price_ngn}</span>\n                                                        <Link\n                                                            className=\"nav-link\"\n                                                            to={`/user/buy-package/${item.id}`}\n                                                        >\n                                                            Buy now\n                                                        </Link>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            ) : (\n                                <p>No courses found..!</p>\n                            )}\n                        </div>\n                    )\n                    }\n\n\n\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-lg-7\">\n                            <h5>SUBSCRIPTION</h5>\n                            <p>\n                                Subscriptions to our examination platform contain questions &\n                                answers with explanations for MCQ, Theory and where applicable\n                                Practicals:\n                            </p>\n                            <h5>REQUIREMENTS</h5>\n                            <p>\n                                <ul>\n                                    <li>\n                                        The latest version of an internet browser is recommended for\n                                        ONLINE study.\n                                    </li>\n                                    <li>\n                                        Any device with a supported version of the operating system\n                                        (iOS, macOS, Android, Windows) for Exam app that allows\n                                        OFFLINE test preparation (coming soon).\n                                    </li>\n                                </ul>\n                            </p>\n                            <h5>SUBSCRIPTION DETAILS</h5>\n                            <p>\n                                Get access to Examtice Question Bank and avoid surprises on your\n                                exams. Studying from the collection of up to date questions and\n                                answers, you get the most preparation for your school exams for\n                                the exam syllabus.{\" \"}\n                            </p>\n                            <p>\n                                {\" \"}\n                                The database contains over 130 000 exam questions sorted into\n                                individual exams and subareas to reflect the structure of the\n                                learning objectives.\n                            </p>\n                        </div>\n                        <div className=\"col-md-12 col-lg-5\">\n                            <h5>WHY SHOULD I CHOOSE EXAMTICE</h5>\n                            <p>\n                                <ul>\n                                    <li>Detailed explanations to all questions</li>\n                                    <li>\n                                        Frequent updates to ensure the best possible representation\n                                        of the question bank\n                                    </li>\n                                    <li>\n                                        Multi-platform capability – study online or use our\n                                        applications that also run offline\n                                    </li>\n                                    <li>Picture and Video supplements in high quality.</li>\n                                    <li>Make private notes for specific questions.</li>\n                                    <li>\n                                        Discuss specific questions with other students through\n                                        comments.\n                                    </li>\n                                    <li>\n                                        Unbeatable statistics, reports and progress monitoring.\n                                    </li>\n                                    <li>Search for specific keywords in questions and answers</li>\n                                    <li>\n                                        Mark questions for later review or set various question\n                                        flags.\n                                    </li>\n                                    <li>\n                                        System reliability is achieved through the use of robust\n                                        hardware architecture; multiple backup systems and\n                                        high-bandwidth server connectivity.\n                                    </li>\n                                </ul>\n                            </p>\n                        </div>\n                    </div>\n                    {/* <a className=\"common-btn\" href=\"#\">\n            See More\n          </a> */}\n                </div>\n            </section>\n\n            {/* <Signin show={open} closePop={handleCloseModal} />   */}\n\n            <Footer />\n        </>\n    );\n};\n\nexport default Eshop;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Signin from \"../components/modals/signin\";\nimport Footer from \"../components/Footer\";\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport { GlobalStyles } from \"../GlobalStyles/GlobalStyles\";\nimport DarkAndLightMode from \"../DarkAndLightMode/DarkAndLightMode\";\n\nconst Affiliate = (props) => {\n    const [open, setOpen] = useState(false);\n    const handleCloseModal = () => {\n        setOpen(false);\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    const theme = {\n        background: isDarkMode ? '#333' : '#fff',\n        text: isDarkMode ? '#fff' : '#000',\n    };\n    return (\n        <>\n            <Header />\n            <section className=\"become-affilated\">\n                <div className=\"container\">\n                    <h2 className=\"page-heading\">Examtice Affiliate</h2>\n\n                    <h5>Earn 20% of the subscription fee</h5>\n\n                    <div className=\"row\">\n                        <div className=\"col-6\" style={{ marginBottom: '30px' }}>\n                            <Link className=\"common-btn\" to={`/affiliate/signin`}>\n                                JOIN NOW / LOGIN\n                            </Link>\n                        </div>\n                        <div className=\"col-6\">\n                            <Link\n                                className=\"common-btn\"\n                                to=\"#\"\n                                onClick={() => setOpen(true)}\n                            >\n                                LOGIN AS STUDENT\n                            </Link>\n                        </div>\n                    </div>\n\n                    <h5>Examtice Affiliate Benefits</h5>\n                    <h5>Earn good income</h5>\n                    <p>\n                        Get paid every time you register a subscriber. Also, get paid when\n                        you renew an already registered subscriber\n                    </p>\n                    <h5>Examtice Support</h5>\n                    <p>Gain access to professional support</p>\n                    <h5>Dashboard </h5>\n                    <p>\n                        Easy-to-use dashboard. See how much you have earned. Cash out\n                        anytime you want once you have earned above N10,000.\n                    </p>\n                </div>\n            </section>\n            <Footer />\n            <Signin show={open} closePop={handleCloseModal} />\n        </>\n    );\n};\n\nexport default Affiliate;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Signin from \"../components/modals/signin\";\nimport Footer from \"../components/Footer\";\nimport { Link } from \"react-router-dom\";\nimport DarkAndLightMode from \"../DarkAndLightMode/DarkAndLightMode\";\n\nconst Learningmanagementsystem = (props) => {\n  const [open, setOpen] = useState(false);\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      {/* <DarkAndLightMode></DarkAndLightMode> */}\n      <Header />\n      {/* <section className=\"inner-banner\">\n        <img src=\"assets/images/affiliate-banner.jpg\" alt=\"\" />\n        <div className=\"inner-banner-overlay\">\n          <h2>Examtice Affiliate</h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n            commodo ligula eget dolor. Aenean massa. Cum sociis natoque\n            penatibus et magnis dis parturient montes, nascetur ridiculus\n            mus.Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n            commodo ligula eget dolor\n          </p>\n        </div>\n      </section> */}\n      <section className=\"become-learningmanagement\">\n        <div className=\"container\">\n          <h2 className=\"page-heading\">LEARNING MANAGEMENT SYSTEM (LMS)</h2>\n          {/* <div className=\"row about-member\">\n            <div className=\"col-md-4\">\n              <div className=\"our-process-inner\">\n                <span>Join as an Learning Management System</span>\n                <p>It’s free to get started.</p>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"our-process-inner\">\n                <span>Promote Examtice</span>\n                <p>Register your target audience.</p>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"our-process-inner\">\n                <span>Start Earning</span>\n                <p>Earn right from the moment you register a subscriber</p>\n              </div>\n            </div>\n          </div> */}\n          <div className=\"row\">\n            <div className=\"col-md-6 col-12 mobile-view\">\n              <Link className=\"common-btn\" to={`/lms/signin`}>\n                JOIN NOW / LOGIN <br />\n                <small>(for parents and teachers)</small>\n              </Link>\n            </div>\n            <div className=\"col-md-6 col-12\">\n              <Link\n                className=\"common-btn\"\n                to=\"#\"\n                onClick={() => setOpen(true)}\n              >\n                LOGIN AS STUDENT\n              </Link>\n            </div>\n\n          </div>\n          <br />\n          <h5>ASSIGN TESTS/EXAMS</h5>\n          <p>\n            LMS allows Parents and Teachers to set up a series of tests and exams(Task) for theirstudents\n            /ward to ensure they practice regularly and deepen their knowledge.\n          </p>\n          <h5>MONITOR YOUR STUDENT’S PROGRESS</h5>\n          <p>Follow your student’s scores and testing history - see how diligently they study and improve.\n            Discovering their weaknesses through statistics and reports will help you focus your teaching.\n          </p>\n\n        </div>\n      </section>\n      <Footer />\n      <Signin show={open} closePop={handleCloseModal} />\n    </>\n  );\n};\n\nexport default Learningmanagementsystem;\n","import React, { useEffect, useState } from \"react\";\nimport { getIsExam } from \"../../features/userSlice\";\nimport { useSelector } from \"react-redux\";\n\nconst QuestionCount = (props) => {\n\n    // console.log(props)\n\n    const isExam = useSelector(getIsExam);\n    const itemsPerPageDesktop = 50;\n    const itemsPerPageMobile = 5;\n\n    const calculateItemsPerPage = () => {\n        return window.innerWidth >= 576 ? itemsPerPageDesktop : itemsPerPageMobile;\n    };\n\n    // Use state to store the itemsPerPage value\n    const [itemsPerPage, setItemsPerPage] = useState(calculateItemsPerPage());\n\n    const currentPage = Math.ceil(props.step / itemsPerPage);\n\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = currentPage * itemsPerPage;\n\n    const showNextButton = props.questions.length > endIndex;\n    const showPreviousButton = currentPage > 1;\n\n    const handleNextClick = () => {\n        if (props.step < props.questions.length) {\n            props.setStep((prevStep) => prevStep + 1);\n        }\n    };\n    \n    const handlePreviousClick = () => {\n        if (props.step > 1) {\n            props.setStep((prevStep) => prevStep - 1);\n        }\n    };\n\n    useEffect(() => {\n        const handleResize = () => {\n            // Calculate the new itemsPerPage when the window is resized\n            setItemsPerPage(calculateItemsPerPage());\n        };\n\n        window.addEventListener(\"resize\", handleResize);\n\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n\n    }, [])\n\n    return (\n        <>\n            <div className=\"d-block\">\n                <ul className=\"d-block\">\n                    <li\n                        className=\"d-block d-md-none d-lg-none\"\n                        onClick={handlePreviousClick}\n                        style={{ backgroundColor: \"#cd2067\"}}>\n                        <span style={{fontSize: \"20px\"}}>Pre</span>\n                    </li>\n                    {props.questions.slice(startIndex, endIndex).map((item, index) => (\n                        <li\n                            key={index + startIndex}\n                            onClick={() => props.jumpOnQuestion(index + startIndex)}\n                            className={`${!isExam\n                                ? item.isCorrect === undefined\n                                    ? \"\"\n                                    : item.isCorrect\n                                        ? \"green\"\n                                        : \"red\"\n                                : item.isAttempt\n                                    ? \"exam\"\n                                    : \"\"\n                                } pointer ${(index + 1) + startIndex === props.step ? \"selected\" : \"\"}`}\n                        >\n                            <a href=\"#\" onClick={(e) => e.preventDefault()}>\n                                {index + 1 + startIndex}\n                            </a>\n                        </li>\n                    ))}\n                    <li\n                        className=\"d-block d-md-none d-lg-none\"\n                        onClick={handleNextClick}\n                        style={{ backgroundColor: \"#cd2067\" }}>\n                        <span style={{fontSize: \"20px\"}}>Next</span>\n                    </li>\n                </ul>\n            </div>\n\n\n\n            <div className=\"row w-100 m-0 \">\n                <div className=\"col-12 d-none d-md-block d-lg-block\">\n                    <div className=\"question-move-next-and-previous\">\n                        <button\n                            className=\"question-move-btn\"\n                            onClick={handlePreviousClick}\n                        >\n                            Pre\n                        </button>\n\n                        <button\n                            className=\"question-move-btn\"\n                            onClick={handleNextClick}\n                        >\n                            Next\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default QuestionCount;\n\n\n\n\n\n\n\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { DELETE_COMMENT } from \"../Api\";\nimport { getTestDate } from \"../CommonFunction\";\n\nconst Comment = ({ comments, commentChange, questionId }) => {\n    const [userComments, setUserComments] = useState([]);\n    const userData = Cookies.get(\"user_data\") != null && JSON.parse(Cookies.get(\"user_data\"));\n\n    const [showDelete, setShowDelete] = useState(true);\n    const location = useLocation();\n    let reportParam = location.pathname.split('/');\n    useEffect(() => {\n        reportParam.filter((val) => { val == 'report' && setShowDelete(false) });\n    });\n    useEffect(() => {\n        setUserComments(comments);\n\n    }, [comments])\n\n\n    //   delete commnet \n    const deleteComment = async (e, id) => {\n        e.preventDefault();\n        setUserComments(comments.filter((item) => item.id !== id));\n        commentChange(id, questionId);\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const {\n                data: { status, message },\n            } = await axios.post(DELETE_COMMENT, { commentId: id }, config);\n            if (status == 200) {\n                toast.success(message);\n            } else {\n                toast.error(message);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return (\n\n        <>\n            {comments?.map((item, index) => (\n                <div className=\"card mb-3 main_forum_container_body\" key={index}>\n                    <div className=\"row no-gutters align-items-center m-2\">\n                        <div className=\"col\">\n                            <div className=\"text-muted large mt-1\">\n                                <Link\n                                    to=\"#\"\n                                    onClick={(e) => e.preventDefault()}\n                                    className=\"text-muted\"\n                                    data-abc=\"true\"\n                                >\n                                    {item.first_name}\n                                </Link>\n                                &nbsp;·&nbsp; {getTestDate(item.created_at)}{\" \"}\n                            </div>\n                            <div style={{color: \"#000\"}}>\n                                {item.comment}\n                            </div>\n                        </div>\n                        {userData && item.userId == userData.id && showDelete && (\n                            <div className=\"col\">\n                                <button\n                                    className=\"float-right\"\n                                    title=\"Delete comment\"\n                                    style={{ cursor: \"pointer\", border: \"none\" }}\n                                    onClick={(e) => deleteComment(e, item.id)}\n                                >\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ))}\n        </>\n    );\n};\nexport default Comment;\n","import Cookies from \"js-cookie\";\nimport React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst Statistics = ({ stats, type }) => {\n\n  const { isDarkMode } = useContext(ThemeContext);\n\n  return (\n    <>\n      <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">My Statistics</th>\n            <th scope=\"col\">All users statistics</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Appeared in tests :</td>\n            <td>{stats?.userAppearedTest != undefined ? stats?.userAppearedTest : 0}x</td>\n            <td>{stats?.allAppearedTest}x</td>\n          </tr>\n\n          {(() => {\n            if (type == 1) {\n              return <tr>\n                <td>Answered correctly in :</td>\n                <td>\n                  {stats?.userAnsweredCorrect != undefined ? (\n                    <>\n                      {Math.floor(\n                        (stats.userAnsweredCorrect / stats?.userAppearedTest) * 100\n                      )}\n                    </>\n                  ) : (\n                    0\n                  )}\n                  %\n                </td>\n                <td>\n                  {stats?.allAnsweredCorrect != undefined ? (\n                    <>\n                      {Math.floor(\n                        (stats.allAnsweredCorrect / stats?.allAppearedTest) * 100\n                      )}\n                    </>\n                  ) : (\n                    0\n                  )}\n                  %\n                </td>\n              </tr>\n            }\n          })()}\n        </tbody>\n      </table>\n    </>\n  );\n};\nexport default Statistics;\n","import React, { useEffect } from \"react\";\nimport { useTimer, useStopwatch } from \"react-timer-hook\";\nimport { formatTime } from \"../CommonFunction\";\n\nconst ExamTimer = ({ expiryTime, getTime, onExpireTime }) => {\n  const expiryTimestamp = new Date();\n  expiryTimestamp.setSeconds(\n    expiryTimestamp.getSeconds() + expiryTime\n  );\n\n   const { seconds, minutes, hours } = useTimer({\n    expiryTimestamp,\n    onExpire: () => onExpireTime({ seconds, minutes, hours }),\n  });\n\n\n  useEffect(() => {\n    getTime({ seconds, minutes, hours });\n  }, [seconds, minutes, hours])\n\n  return (\n    <div className=\"timer\">\n      <img src=\"assets/images/timer.png\" alt=\"\" />\n      <span>\n        {formatTime(hours)} : {formatTime(minutes)} : {formatTime(seconds)}\n      </span>\n    </div>\n  );\n};\n\nexport default ExamTimer;\n","import React, {useEffect} from \"react\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport { formatTime } from \"../CommonFunction\";\n\nconst TestTimer = ({getTime}) => {\n  const { seconds, minutes, hours } = useStopwatch({\n    autoStart: true\n  });\n  \n  useEffect(()=>{\n      getTime({ seconds, minutes, hours });\n  }, [seconds, minutes, hours])\n\n\n  return (\n    <div className=\"timer\">\n      <img src=\"assets/images/timer.png\" alt=\"\" />\n      <span>\n        {formatTime(hours)} : {formatTime(minutes)} : {formatTime(seconds)}\n      </span>\n    </div>\n  );\n};\n\nexport default TestTimer;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n    FLAG_QUESTION,\n    BOOKMARK_QUESTION,\n    QUESTION_COMMENT,\n    SAVE_NOTE,\n    SAVE_QUESTIONS,\n    SAVE_TIME,\n    SAVE_USER_TEST,\n    UNFLAG_QUESTION,\n    UNBOOKMARK_QUESTION,\n} from \"../Api\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIdleTimer } from 'react-idle-timer';\nimport { userAuth, isTestStart, getIsExam, setIsExam } from \"../../features/userSlice\";\nimport QuestionCount from \"./questionsCount\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport Spinner from \"../spinner/Spinner\";\nimport Cookies from \"js-cookie\";\nimport Comment from \"./Comment\";\nimport Statistics from \"./statistics\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport ExamTimer from \"./examTimer\";\nimport TestTimer from \"./testTimer\";\nimport MathJax from \"mathjax3-react\";\nimport { Helmet } from \"react-helmet\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\n\nconst Question = ({ questions }) => {\n    const history = useHistory();\n    const [step, setStep] = useState(1);\n    const [questionsData, setQuestionsData] = useState([]);\n    const [finishWarning, setFinishWarning] = useState(false);\n    const [cancelWarning, setCancelWarning] = useState(false);\n    const [flagWarning, setFlagWarning] = useState(false);\n    const [bookmarkWarning, setBookmarkWarning] = useState(false);\n    const [radioOption, setRadioValue] = useState(false);\n    const [radioInnerValue, setRadioInner] = useState(2);\n    const [selectedQuestionId, setQuestionId] = useState(null);\n    const [otherOption, setOtherOption] = useState(null);\n    const [commentLoader, setCommentLoader] = useState(false);\n    const [saveWarning, setSaveWarning] = useState(false);\n    const [notAnswer, setNotAnswer] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n    const [note, setNote] = useState({});\n    const [loader, setLoader] = useState(false);\n    const [saveLoader, setSaveLoader] = useState(false);\n    const [answerLoader, setAnswerLoader] = useState(false);\n    const [noteLoader, setNoteLoader] = useState(false);\n    const [timer, setTimer] = useState({});\n    const dispatch = useDispatch();\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n    const isExam = useSelector(getIsExam);\n    const { seconds, minutes, hours } = useStopwatch({\n        autoStart: true\n    });\n\n\n    useEffect(() => {\n        setQuestionsData(questions.questions);\n        dispatch(isTestStart(true));\n    }, []);\n\n    // console.log(questionsData)\n\n    //   useEffect(() => {\n    //     if (isTestStart) {\n    //       console.log(\"teasdeas start\")\n    //       blockRoutes();\n\n    //       return () => {\n    //         blockRoutes();\n    //       };\n    //         // window.onbeforeunload = function() {\n    //         //     alert(\"yo\");\n    //         //     return true;\n    //         // };\n    //     }\n    //     // return () => {\n    //     //     window.onbeforeunload = null;\n    //     // };\n    // }, [isTestStart]);\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n    Modal.setAppElement(\"#root\");\n\n    // block routes if user attemept test\n    // const blockRoutes = history.block((location, action) => {\n    //   return false;\n    // });\n\n    // Unblock routes if user attemept test\n    // const unBlockRoutes = history.block((location, action) => {\n    //   return true;\n    // });\n    // increment progeress bar count\n\n    // Do not copy text \n    // const disableContextMenu = (e) => {\n    //     e.preventDefault();\n    // };\n\n    // const disableCopyShortcut = (e) => {\n    //     if (e.ctrlKey && (e.key === 'c' || e.key === 'C')) {\n    //         e.preventDefault();\n    //     }\n    // };\n\n    // useEffect(() => {\n    //     document.addEventListener('contextmenu', disableContextMenu);\n    //     document.addEventListener('keydown', disableCopyShortcut);\n\n    //     return () => {\n    //         document.removeEventListener('contextmenu', disableContextMenu);\n    //         document.removeEventListener('keydown', disableCopyShortcut);\n    //     };\n    // }, []);\n\n\n\n\n    const progressStatus = {\n        width:\n            Math.floor((getUserQuestionsAttempt() / questionsData.length) * 100) +\n            \"%\",\n    };\n    // Handle user answer\n    const handleAnswer = async (quesId, choosenAnswer) => {\n        var testId = localStorage.getItem(\"userTestId\");\n        if (testId == null) {\n            toast.error(\"Something went wrong, Kindly restart your test..!\");\n            return false;\n        }\n        const bodyParameter = {\n            testId: testId,\n            question_id: quesId,\n            choosen_option: choosenAnswer,\n        };\n        try {\n            setAnswerLoader(true);\n            const isAttemptQuestionState = questionsData.map((item) =>\n                item.id === quesId\n                    ? {\n                        ...item,\n                        isAttempt: true,\n                    }\n                    : item\n            );\n            setQuestionsData(isAttemptQuestionState);\n            const {\n                data: { result, status, error },\n            } = await axios.post(SAVE_QUESTIONS, bodyParameter);\n            if (status == 200) {\n                const updateQuestionState = questionsData.map((item) =>\n                    item.id === quesId\n                        ? {\n                            ...item,\n                            isAttempt: true,\n                            rightOption: result.rightOption,\n                            userOption: choosenAnswer,\n                            isCorrect: result.rightOption == choosenAnswer ? true : false,\n                        }\n                        : item\n                );\n                setQuestionsData(updateQuestionState);\n                setAnswerLoader(false);\n                if (isExam) {\n                    setTimeout(() => {\n                        if (step !== questionsData.length) {\n                            setStep(step + 1);\n                        }\n                    }, 500);\n                } else {\n                    if (choosenAnswer == result.rightOption) {\n                        setTimeout(() => {\n                            if (step !== questionsData.length) {\n                                setStep(step + 1);\n                            }\n                        }, 500);\n                    }\n                }\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setAnswerLoader(false);\n            console.log(err);\n        }\n    };\n\n    //If user finish the test\n    const handleFinishTest = (e) => {\n        e.preventDefault();\n        var userNotAttempted = getUserQuestionsNotAttempt();\n        setNotAnswer(userNotAttempted);\n        var time = isExam ? [hours, minutes, seconds] : [timer.hours, timer.minutes, timer.seconds];\n        // console.log(time.join(\":\"))\n        if (userNotAttempted > 0) {\n            setFinishWarning(true);\n        }\n        else {\n            saveTestTime(time.join(\":\"));\n            dispatch(isTestStart(false));\n        }\n    };\n\n    const handleConfirmButton = async (e) => {\n        e.preventDefault()\n\n        var time = isExam ? [hours, minutes, seconds] : [timer.hours, timer.minutes, timer.seconds];\n\n        saveTestTime(time.join(\":\"));\n\n    }\n\n    //Get how many questions user not attempt\n    function getUserQuestionsNotAttempt() {\n        return questionsData.filter((item) => item?.isAttempt !== true).length;\n    }\n\n    //Get how many questions user attempt\n    function getUserQuestionsAttempt() {\n        return questionsData.filter((item) => item?.isAttempt == true).length;\n    }\n\n    //Save test spent time\n    const saveTestTime = async (time) => {\n        try {\n            setLoader(true);\n            var testId = localStorage.getItem(\"userTestId\");\n            var userData = Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n            const {\n                data: { status, message },\n            } = await axios.post(SAVE_TIME, { testId: testId, spentTime: time, userId: userData && userData.id });\n            if (status == 200) {\n                setTimeout(() => {\n                    {\n                        isAuth\n                            ? history.push(\"/user/free-test/report\")\n                            : history.push(\"/free-test/report\");\n                    }\n                }, 200);\n                setTimeout(() => {\n                    dispatch(setIsExam(false));\n                }, 500);\n            }\n        }\n        catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setLoader(false);\n        }\n    };\n\n    const handleTime = (time) => {\n        setTimer(time);\n    };\n\n    const handleExpieTime = (time) => {\n        var tempTime = [hours, minutes, seconds];\n        saveTestTime(tempTime.join(\":\"));\n        dispatch(isTestStart(false));\n    }\n\n    // Dispay time\n    const myTimer = () => {\n        return isExam ? (\n            <ExamTimer expiryTime={questions.expiryTime} getTime={handleTime} onExpireTime={handleExpieTime} />\n        ) : (\n            <TestTimer getTime={handleTime} />\n        );\n    };\n\n    //If user cancel the test\n    const handleCancelTest = (e) => {\n        e.preventDefault();\n        //handleTime();\n        setCancelWarning(true);\n    };\n\n\n    // Radio option flag\n    const handlerRadio = (option) => {\n        setRadioInner(option);\n        !!option && option == 3 ? setRadioValue(true) : setRadioValue(false);\n\n    }\n\n    // handle jump to question\n    const handleJumpQuestion = (index) => {\n        setStep(index + 1);\n\n    };\n\n    // Handle user cancel the test\n    const handleUserCancelTest = (e) => {\n        e.preventDefault();\n        localStorage.removeItem(\"userTestId\");\n        dispatch(isTestStart(false));\n        setTimeout(() => {\n            {\n                isAuth ? history.push(\"/user/dashboard\") :\n                    history.push(\"/\");\n            }\n        }, 300);\n        setTimeout(() => {\n            dispatch(setIsExam(false));\n        }, 500);\n    };\n\n\n    // handleUserCommnet\n    const handleUserCommnet = async (e) => {\n        e.preventDefault();\n        console.log(\"Comment\")\n        if (comment == \"\") {\n            toast.error(\"Please write your comment\");\n            return false;\n        }\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: e.target.getAttribute(\"questionid\"),\n                comment: comment,\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(QUESTION_COMMENT, bodyParameters, config);\n            if (status == 200) {\n                // var tempData = [...questionsData];\n                // tempData.filter(\n                //     (ques) =>\n                //         ques.id == e.target.getAttribute(\"questionid\") &&\n                //         ques.comments.unshift(data)\n                // );\n                var tempData = questionsData.map((ques) => {\n                    if (ques.id == e.target.getAttribute(\"questionid\")) {\n                        const updatedComments = Array.isArray(ques.comments) ? ques.comments : [];\n                        return {\n                            ...ques,\n                            comments: [data, ...updatedComments], // Use spread operator to add the new comment at the beginning\n                        };\n                    }\n                    return ques;\n                });\n                setQuestionsData(tempData);\n                setCommentLoader(false);\n                setComment(\"\");\n            }\n        } catch (err) {\n            console.log(err);\n            setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    // change question comment state if user delete it\n    const handleCommentChange = useCallback((commentId, questionId) => {\n        const newState = [...questionsData];\n        let updatedComments = newState.map((item) => {\n            if (item.id == questionId) {\n                return {\n                    ...item,\n                    comments: item.comments.filter((comm) => comm.id != commentId),\n                };\n            }\n            return item;\n        });\n        setQuestionsData(updatedComments);\n    });\n\n    // save test\n    const handleUserSaveTest = async (e) => {\n        e.preventDefault();\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            setSaveLoader(true);\n            var testId = localStorage.getItem(\"userTestId\");\n            var time = [timer.hours, timer.minutes, timer.seconds];\n            const {\n                data: { status, message },\n            } = await axios.post(\n                SAVE_USER_TEST,\n                { testId: testId, spentTime: time.join(\":\") },\n                config\n            );\n            if (status == 200) {\n                dispatch(isTestStart(false));\n                setSaveLoader(false);\n                setTimeout(() => {\n                    history.push(\"/user/dashboard\");\n                }, 200);\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setSaveLoader(false);\n            console.log(err);\n        }\n    };\n    const handleUserSaveTestauto = async (e) => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            setSaveLoader(true);\n            var testId = localStorage.getItem(\"userTestId\");\n            var time = [timer.hours, timer.minutes, timer.seconds];\n            const {\n                data: { status, message },\n            } = await axios.post(\n                SAVE_USER_TEST,\n                { testId: testId, spentTime: time.join(\":\") },\n                config\n            );\n            if (status == 200) {\n                dispatch(isTestStart(false));\n                setSaveLoader(false);\n                setTimeout(() => {\n                    history.push(\"/user/dashboard\");\n                }, 200);\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setSaveLoader(false);\n            console.log(err);\n        }\n    };\n\n    const { getRemainingTime, getLastActiveTime } = useIdleTimer({\n        timeout: 1000 * 60 * 29,\n        onIdle: handleUserSaveTestauto,\n        debounce: 500\n    });\n\n    // Save user notes\n    const handleUserNotes = async (e, questionId) => {\n        e.preventDefault();\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var body = {\n                user_id: userData.id,\n                question_id: questionId,\n                note: note,\n            };\n            setNoteLoader(true);\n            const {\n                data: { status, message },\n            } = await axios.post(SAVE_NOTE, body, config);\n            if (status == 200) {\n                setNoteLoader(false);\n                handleNoteChange(questionId, note);\n                toast.success(message);\n                setNote(\"\");\n            } else {\n                setNoteLoader(false);\n                toast.error(message);\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setNoteLoader(false);\n            console.log(err);\n        }\n    };\n\n    const handleNoteChange = (questionId, note) => {\n        var tempData = [...questionsData];\n        tempData.filter(\n            (ques) => ques.id == questionId && ques.notes.unshift(note)\n        );\n        setQuestionsData(tempData);\n    };\n\n\n    // Handle user flag the test\n    const handleUserFlagTest = async (e) => {\n        e.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: selectedQuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(FLAG_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((el) =>\n                    el.id === selectedQuestionId ? {\n                        ...el, isFlag: true\n                    } : el\n                )\n                // Set the new array \n                setQuestionsData(tempData);\n                setFlagWarning(false);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n    const handleUserUnFlagTest = async (e, QuestionId) => {\n        e.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: QuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status, message },\n            } = await axios.post(UNFLAG_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((el) =>\n                    el.id === selectedQuestionId ? {\n                        ...el, isFlag: false\n                    } : el\n                )\n                // Set the new array \n                setQuestionsData(tempData);\n                setFlagWarning(false);\n                toast.success(message);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n\n    const handleFlag = (questionId) => {\n        setFlagWarning(true);\n        setQuestionId(questionId);\n    };\n\n\n    const handleUserBookmark = async (d) => {\n        d.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: selectedQuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(BOOKMARK_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((dl) =>\n                    dl.id === selectedQuestionId ? {\n                        ...dl, isBookMark: true\n                    } : dl\n                )\n                // console.log(isbookmark);\n                // Set the new array \n                setQuestionsData(tempData);\n                setBookmarkWarning(false);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n    const handleUserUnBookmark = async (d, QuestionId) => {\n        d.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: QuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status, message },\n            } = await axios.post(UNBOOKMARK_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((dl) =>\n                    dl.id === selectedQuestionId ? {\n                        ...dl, isBookMark: false\n                    } : dl\n                )\n                // Set the new array \n                setQuestionsData(tempData);\n                setBookmarkWarning(false);\n                toast.success(message);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n\n    const handleBookmark = (questionId) => {\n        setBookmarkWarning(true);\n        setQuestionId(questionId);\n    };\n\n    const handleNote = (e, questionId, value) => {\n        e.preventDefault();\n        setNote({ ...note, questionId: questionId, note: value });\n    };\n\n    // console.log(questionsData.map(question => question.question_description))\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <div className=\"row short-container timer-selection\">\n                <div className=\"col-md-8 col-lg-9\">\n                    {loader && <Spinner />}\n                    {questionsData.map((item, index) => (\n                        <div\n                            className={`free-test-tabing-left ${step && step == index + 1 ? \"active_qa\" : \"hide_qa\"\n                                } `}\n                            key={index}\n                        >\n\n                            <div className=\"row\">\n\n                                <div className=\"col-lg-4 col-7 col-md-7 quesnumber-box timer\">\n\n                                    <h5>\n                                        {step > 1 && (\n                                            <i\n                                                className=\"fas fa-chevron-left pointer\"\n                                                onClick={() => setStep(step - 1)}\n                                            />\n                                        )}\n                                        Q {index + 1} / {questionsData.length}{\" \"}\n                                        {isAuth && item.isBookMark == true && !isExam ? <i className=\"fas fa-bookmark fa-sm booked-icon question-bookmark-mobile-view\" onClick={(d) => handleUserUnBookmark(d, item.id)} title=\"Already Bookmark this question\"></i> : isAuth && !isExam ? <i className=\"fas fa-bookmark fa-sm question-bookmark-mobile-view\" onClick={(d) => handleBookmark(item.id)}></i> : ''}\n\n                                        {isAuth && item.isFlag == true ? <i className=\"fas fa-flag fa-sm flaged-icon question-bookmark-mobile-view\" onClick={(e) => handleUserUnFlagTest(e, item.id)} title=\"Already flagged this question\"></i> : isAuth && item.isFlag == false ? <i className=\"fas fa-flag fa-sm question-bookmark-mobile-view\" onClick={(e) => handleFlag(item.id)}></i> : <i className=\"fas fa-flag fa-sm question-bookmark-mobile-view\" onClick={(e) => handleFlag(item.id)}></i>}\n\n                                    </h5>\n                                </div>\n\n                                <div className=\"col-lg-4 col-12 col-md-12 order-first order-md-first order-lg-last timer\">\n                                    <button className=\"common-btn name-id-year\">\n                                        {item.year}, {item.name}, Ref: {item.id}\n                                    </button>\n                                    <h5 id=\"right-arrow-withref\">\n                                        {step !== questionsData.length && (\n                                            <i\n                                                className=\"fas fa-chevron-right pointer\"\n                                                onClick={() => setStep(step + 1)}\n                                            />\n                                        )}\n                                    </h5>\n                                </div>\n\n                                <div className=\"col-lg-4 col-5 col-md-5 timerr-inner timer-box\">\n                                    {/* display timer */}\n                                    {myTimer()}\n                                    <h5 id=\"right-arrow-withoutref\">\n                                        {step !== questionsData.length && (\n                                            <i\n                                                className=\"fas fa-chevron-right pointer\"\n                                                onClick={() => setStep(step + 1)}\n                                            />\n                                        )}\n                                    </h5>\n                                </div>\n                            </div>\n                            <div className=\"free-test-tabing-left-bar\">\n                                <span style={progressStatus}></span>\n                            </div>\n                            <div className=\"tabing-inner-page\">\n                                <ul className=\"nav nav-pills\">\n                                    <li className=\"active\">\n                                        <a\n                                            className=\"active\"\n                                            data-toggle=\"pill\"\n                                            href={`#home_${index + 1}`}\n                                        >\n                                            <i className=\"fas fa-play fa-sm\"></i> Question\n                                        </a>\n                                    </li>\n\n                                    <li className=\"active\">\n                                        <a\n                                            // className=\"active\"\n                                            data-toggle=\"pill\"\n                                            href={`#description_${index + 1}`}\n                                        >\n                                            <i class=\"fas fa-solid fa-info fa-sm\"></i> Excerpt\n                                        </a>\n                                    </li>\n\n                                    {!isExam && (\n                                        <li>\n                                            <a\n                                                data-toggle=\"pill\"\n                                                href={`#explanation_${index + 1}`}\n                                            >\n                                                <i className=\"fas fa-newspaper fa-sm\"></i> Explanation\n                                            </a>\n                                        </li>\n\n                                    )}\n\n                                    <li>\n                                        <a data-toggle=\"pill\" href={`#statistics${index + 1}`}>\n                                            <i className=\"fas fa-chart-pie fa-sm\"></i> Statistics\n                                        </a>\n                                    </li>\n                                    <li style={{ position: \"relative\" }}>\n                                        <a data-toggle=\"pill\" href={`#comment_${index + 1}`}>\n                                            {item?.comments?.length > 0 && (\n                                                <span className=\"commentCount\">\n                                                    {\" \"}\n                                                    {item?.comments?.length}\n                                                </span>\n                                            )}\n                                            <i className=\"fas fa-comments fa-sm\"></i> Comments\n                                        </a>\n                                    </li>\n                                    {item.question_description_show > 0 && (\n                                        <li className=\"eassy_description_li\">\n                                            <a data-toggle=\"pill\" href={`#question_description_${index + 1}`}>\n                                                <i className=\"fas fa-file-alt fa-sm\"></i> Essay/Description\n                                            </a>\n                                        </li>\n                                    )}\n                                    {/* <li>\n                    <a data-toggle=\"pill\" href={`#save_${index + 1}`}>\n                      <i className=\"fas fa-sticky-note fa-sm\"></i>{\" \"}\n\n                      Notes\n                    </a>\n                  </li> */}\n                                </ul>\n                                <div className=\"tab-content\">\n                                    <div\n                                        id={`home_${index + 1}`}\n                                        className=\"tab-pane fade in active show\"\n                                    >\n                                        <Helmet>\n                                            <script\n                                                src=\"https://www.wiris.net/demo/plugins/app/WIRISplugins.js?viewer=image&async=true\"\n                                                type=\"text/javascript\"\n                                            />\n                                        </Helmet>\n\n                                        <div className={`post__content ${isDarkMode ? 'color_light' : 'color_dark'}`} dangerouslySetInnerHTML={{ __html: item.question }}></div>\n                                        {/* <div className=\"post__content\" >\n                    <MathJax.Provider>\n                      <MathJax.Html html={!!item.question && item.question } style={{color:'#fff'}}/>\n                    </MathJax.Provider>\n                    </div> */}\n                                        {/* <h3>{item.question.replace(/<[^>]+>/g, \"\")}</h3> */}\n                                        {answerLoader && <Spinner />}\n\n                                        {(() => {\n                                            if (item.type == 1) {\n\n                                                return <ul>\n                                                    <button\n                                                        className={`${!isExam\n                                                            ? item.rightOption == 1\n                                                                ? \"green\"\n                                                                : item?.userOption !== item.rightOption &&\n                                                                    item.userOption == 1\n                                                                    ? \"red\"\n                                                                    : \"\"\n                                                            : item.isAttempt && item.userOption == 1\n                                                                ? \"exam\"\n                                                                : \"\"\n                                                            }`}\n                                                        onClick={() => handleAnswer(item.id, 1)}\n                                                        disabled={(isExam) ? \"\" : item.isAttempt}\n                                                    >\n                                                        <span>A</span>\n                                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_1 }} />\n                                                    </button>\n                                                    <button\n                                                        className={`${!isExam\n                                                            ? item.rightOption == 2\n                                                                ? \"green\"\n                                                                : item?.userOption !== item.rightOption &&\n                                                                    item.userOption == 2\n                                                                    ? \"red\"\n                                                                    : \"\"\n                                                            : item.isAttempt && item.userOption == 2\n                                                                ? \"exam\"\n                                                                : \"\"\n                                                            }`}\n                                                        onClick={() => handleAnswer(item.id, 2)}\n\n                                                        disabled={(isExam) ? \"\" : item.isAttempt}\n                                                    >\n                                                        <span>B</span>\n                                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_2 }} />\n                                                    </button>\n                                                    <button\n                                                        className={`${!isExam\n                                                            ? item.rightOption == 3\n                                                                ? \"green\"\n                                                                : item?.userOption !== item.rightOption &&\n                                                                    item.userOption == 3\n                                                                    ? \"red\"\n                                                                    : \"\"\n                                                            : item.isAttempt && item.userOption == 3\n                                                                ? \"exam\"\n                                                                : \"\"\n                                                            }`}\n                                                        onClick={() => handleAnswer(item.id, 3)}\n\n                                                        disabled={(isExam) ? \"\" : item.isAttempt}\n                                                    >\n                                                        <span>C</span>\n                                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_3 }} />\n                                                    </button>\n                                                    {(() => {\n                                                        if (item.option_4 == '' || item.option_4 == null) {\n\n                                                        } else {\n                                                            return <button\n                                                                className={`${!isExam\n                                                                    ? item.rightOption == 4\n                                                                        ? \"green\"\n                                                                        : item?.userOption !== item.rightOption &&\n                                                                            item.userOption == 4\n                                                                            ? \"red\"\n                                                                            : \"\"\n                                                                    : item.isAttempt && item.userOption == 4\n                                                                        ? \"exam\"\n                                                                        : \"\"\n                                                                    }`}\n                                                                onClick={() => handleAnswer(item.id, 4)}\n\n                                                                disabled={(isExam) ? \"\" : item.isAttempt}\n                                                            >\n                                                                <span>D</span>\n                                                                <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_4 }} />\n                                                            </button>\n                                                        }\n\n                                                    })()}\n\n\n\n                                                </ul>\n                                            } else {\n                                                return <button className=\"common-btn\"\n                                                    onClick={() => handleAnswer(item.id, 1)}\n                                                    disabled={item.isAttempt}\n                                                    to=\"/\">\n                                                    Next\n                                                </button>\n                                            }\n                                        })()}\n                                    </div>\n\n                                    <div id={`explanation_${index + 1}`}\n                                        className=\"tab-pane fade explanation\">\n\n                                        <div className=\"explanation_color\">\n                                            <div className=\"pagination_freetest\"><span><a>Question:</a></span></div>\n                                            <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div>\n                                        </div>\n\n                                        <div className=\"pagination_freetest\"><span><a>Explanation:</a></span></div>\n                                        <span className=\"explanation_color\">{item.explanation &&\n                                            <div className=\"post__explanation\" dangerouslySetInnerHTML={{ __html: item.explanation }}></div>\n                                            // <MathJax.Provider>\n                                            //   <MathJax.Html html={item.explanation} style={{color:\"#fff\"}}/>\n                                            // </MathJax.Provider>\n                                        }</span>\n                                    </div>\n\n                                    <div id={`description_${index + 1}`}\n                                        className=\"tab-pane fade explanation\">\n\n                                        <div className=\"pagination_freetest\"><span><a>Description:</a></span></div>\n                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question_description }}></div>\n\n                                        {/* <div className=\"pagination_freetest\"><span><a>Description:</a></span></div> */}\n                                        <span className=\"explanation_color\">{item.explanation &&\n                                            <div className=\"post__explanation\" dangerouslySetInnerHTML={{ __html: item.question_description }}></div>\n                                            // <MathJax.Provider>\n                                            //   <MathJax.Html html={item.explanation} style={{color:\"#fff\"}}/>\n                                            // </MathJax.Provider>\n                                        }</span>\n                                    </div>\n\n                                    <div\n                                        id={`statistics${index + 1}`}\n                                        className=\"tab-pane fade explanation\"\n                                    >\n                                        <p>Statistics</p>\n                                        <Statistics stats={item.statistics} type={item.type} />\n                                    </div>\n                                    <div\n                                        id={`comment_${index + 1}`}\n                                        className=\"tab-pane fade\"\n                                    >\n                                        <h3>User comments</h3>\n                                        {item?.comments?.length && (\n                                            <Comment\n                                                comments={item.comments}\n                                                questionId={item.id}\n                                                commentChange={handleCommentChange}\n                                            />\n                                        )}\n                                        {isAuth && (\n                                            <form>\n                                                <div className=\"form-group\">\n                                                    <textarea\n                                                        placeholder=\"Comment\"\n                                                        readOnly={!isAuth}\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <button\n                                                        onClick={handleUserCommnet}\n                                                        disabled={commentLoader}\n                                                        questionId={item.id}\n                                                    >\n                                                        Post comment\n                                                    </button>\n                                                </div>\n                                            </form>\n                                        )}\n                                    </div>\n                                    <div\n                                        id={`question_description_${index + 1}`}\n                                        className=\"tab-pane fade question_description\"\n                                    >\n\n                                        {item.question_description &&\n                                            <div className=\"post__question_description\" dangerouslySetInnerHTML={{ __html: item.question_description }}></div>\n                                            // <MathJax.Provider>\n                                            //   <MathJax.Html html={item.explanation} style={{color:\"#fff\"}}/>\n                                            // </MathJax.Provider>\n                                        }\n                                    </div>\n                                    <div id={`save_${index + 1}`} className=\"tab-pane fade\">\n                                        <h3>\n                                            Your Personal Note{\" \"}\n                                            <span>(Not Visible to others)</span>\n                                        </h3>\n                                        {item.notes && Object.keys(item.notes).length > 0 && (\n                                            <div\n                                                className=\"card mb-3 main_forum_container_body\"\n                                                key={index}\n                                            >\n                                                <div className=\"row no-gutters align-items-center m-2\">\n                                                    <div className=\"col\">{item.notes.note}</div>\n                                                    <div className=\"col\">\n                                                        <button\n                                                            className=\"float-right\"\n                                                            title=\"Edit note\"\n                                                            style={{ cursor: \"pointer\", border: \"none\" }}\n                                                        // onClick={(e) => deleteComment(e, item.id)}\n                                                        >\n                                                            <i\n                                                                className=\"fas fa-pencil-alt\"\n                                                                aria-hidden=\"true\"\n                                                            ></i>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )}\n                                        <form>\n                                            <div className=\"form-group\">\n                                                <textarea\n                                                    placeholder=\"Personal Note\"\n                                                    readOnly={!isAuth}\n                                                    value={note}\n                                                    onChange={(e) =>\n                                                        handleNote(e, item.id, e.target.value)\n                                                    }\n                                                />\n                                            </div>\n                                            {noteLoader && <Spinner />}\n                                            <div className=\"form-group\">\n                                                <button\n                                                    disabled={noteLoader}\n                                                    onClick={(e) => handleUserNotes(e, item.id)}\n                                                    style={{ cursor: \"pointer\" }}\n                                                    title={\n                                                        isAuth\n                                                            ? \"\"\n                                                            : \"You have to login to save your own note for this question.\"\n                                                    }\n                                                >\n                                                    Save\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"col-md-4 col-lg-3 order-first order-md-last\">\n                    <div className={`${isDarkMode ? 'free-test-tabing-right_light_color' : 'free-test-tabing-right_dark_color'}`}>\n                        <span>Test Details</span>\n\n                        <div className={`cal-btn ${isDarkMode ? 'cal-btn cat_btn_light' : 'cal-btn cat_btn_dark'}`} style={{ marginBottom: \"10px\" }}>\n                            <a href=\"#\" onClick={handleCancelTest} style={{whiteSpace: \"nowrap\"}}>\n                                Cancel Test\n                            </a>\n                            <a href=\"#\" onClick={handleFinishTest} style={{whiteSpace: \"nowrap\"}}>\n                                Finish Test\n                            </a>\n                        </div>\n                        {isAuth && !isExam && (\n                            <div className=\"cal-btn\" style={{ marginBottom: \"10px\" }}>\n                                <a\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setSaveWarning(true);\n                                    }}\n                                    style={{whiteSpace: \"nowrap\"}}\n                                >\n                                    Save test\n                                </a>\n                            </div>\n                        )}\n\n\n                        <QuestionCount\n                            step={step}\n                            setStep={setStep}\n                            questions={questionsData}\n                            jumpOnQuestion={handleJumpQuestion}\n                        />\n\n                    </div>\n                </div>\n            </div>\n\n\n            {/* <div className=\"row d-block\">\n                <div className=\"col-4\">\n                    \n                </div>\n                <div className=\"col-8 d-block\">\n                    <div className=\"question-move-next-and-previous\">\n                        \n                            <button className=\"question-move-btn\" onClick={handlePreviousClick}><i className=\"fas fa-chevron-left pointer\"></i></button>\n                        \n                        \n                            <button className=\" question-move-btn\" onClick={handleNextClick}><i className=\"fas fa-chevron-right pointer\"></i></button>\n                        \n                    </div>\n                </div>\n            </div> */}\n\n\n            {/* If user finish the test */}\n            <Modal\n                isOpen={finishWarning}\n                //onRequestClose={() => setTestWarning(false)}\n                style={customStyles}\n                contentLabel=\"Finish test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n                                <p>Incomplete test</p>\n                                <img src=\"assets/images/warning.png\" alt=\"\" />\n                                <p>You have {notAnswer} number of questions unanswered, confirm you want to end test</p>\n                                {/*<p>You still have {notAnswer} unanswered questions.</p>*/}\n                                <div className=\"row\">\n                                    <a\n                                        href=\"#\"\n                                        // onClick={(e) => {\n                                        //     e.preventDefault();\n                                        //     setFinishWarning(false);\n                                        // }}\n\n                                        onClick={handleConfirmButton}\n                                    >\n                                        Yes\n                                    </a>\n\n                                    <button\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setFinishWarning(false);\n                                        }}\n                                    >\n                                        No\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n            {/* If user cancel the test */}\n            <Modal\n                isOpen={cancelWarning}\n                //onRequestClose={() => setTestWarning(false)}\n                style={customStyles}\n                contentLabel=\"Finish test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n                                <p>Incomplete test</p>\n                                <img src=\"assets/images/warning.png\" alt=\"\" />\n                                <p>Do you really want to cancel this test?</p>\n                                <div className=\"row\">\n                                    <a href=\"#\" onClick={handleUserCancelTest}>\n                                        Yes\n                                    </a>\n                                    <a\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setCancelWarning(false);\n                                            //blockRoutes();\n                                        }}\n                                    >\n                                        No\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n\n            {/* If user Flag Question */}\n            <Modal\n                isOpen={flagWarning}\n                //onRequestClose={() => setTestWarning(false)}\n                style={customStyles}\n                contentLabel=\"Finish test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n\n                                <div className=\"edit-profile-modal__inner\">\n                                    <h4 className=\"theme-txt text-center mb-4 text-dark\">Flag This Question</h4>\n                                    <img src=\"assets/images/warning.png\" alt=\"\" />\n                                    <form>\n                                        <div className=\"choose-report\">\n                                            <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"first-option\" defaultValue=\"it's spam\" defaultChecked onClick={(e) => handlerRadio(1)} /><label htmlFor=\"first-option\" /><span className=\"ml-1\">It's Spam</span></div>\n                                            <div className=\"form-group\"><input type=\"radio\" checked name=\"report\" id=\"second-option\" defaultValue=\"Wrong Q/A\" onClick={(e) => handlerRadio(2)} /><label htmlFor=\"second-option\" /><span className=\"ml-1\">Wrong Q/A</span></div>\n                                            <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"third-option\" defaultValue=\"Other\" onClick={(e) => handlerRadio(3)} /><label htmlFor=\"third-option\" /><span className=\"ml-1\">Other</span></div>\n                                            <div className=\"form-group\">\n                                                {radioOption ? <input type=\"text\" className=\"form-control\" name=\"otherqa\" placeholder=\"write here\" value={otherOption} onChange={(e) => setOtherOption(e.target.value)} /> : \"\"}\n                                            </div>\n\n                                        </div>\n\n                                    </form>\n                                </div>\n\n                                <div className=\"row\">\n                                    <a href=\"#\" onClick={(e) => handleUserFlagTest(e)}>\n                                        Yes\n                                    </a>\n                                    <a\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setFlagWarning(false);\n                                            setRadioValue(false);\n                                            //blockRoutes();\n                                        }}\n                                    >\n                                        No\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n            {/* If user Bookmark Question */}\n            <Modal\n                isOpen={bookmarkWarning}\n                //onRequestClose={() => setTestWarning(false)}\n                style={customStyles}\n                contentLabel=\"Finish test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n\n                                <div className=\"edit-profile-modal__inner\">\n                                    <h4 className=\"theme-txt text-center mb-4 text-dark\">BookMark</h4>\n                                    <img src=\"assets/images/warning.png\" alt=\"\" />\n                                    <form>\n                                        <div className=\"choose-report\">\n                                            <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"first-option\" defaultValue=\"it's spam\" defaultChecked onClick={(e) => handlerRadio(1)} /><label htmlFor=\"first-option\" /><span className=\"ml-1\">It's Spam</span></div>\n                                            <div className=\"form-group\"><input type=\"radio\" checked name=\"report\" id=\"second-option\" defaultValue=\"Wrong Q/A\" onClick={(e) => handlerRadio(2)} /><label htmlFor=\"second-option\" /><span className=\"ml-1\">Wrong Q/A</span></div>\n                                            <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"third-option\" defaultValue=\"Other\" onClick={(e) => handlerRadio(3)} /><label htmlFor=\"third-option\" /><span className=\"ml-1\">Other</span></div>\n                                            <div className=\"form-group\">\n                                                {radioOption ? <input type=\"text\" className=\"form-control\" name=\"otherqa\" placeholder=\"write here\" value={otherOption} onChange={(e) => setOtherOption(e.target.value)} /> : \"\"}\n                                            </div>\n\n                                        </div>\n\n                                    </form>\n                                </div>\n\n                                <div className=\"row\">\n                                    <a href=\"#\" onClick={(d) => handleUserBookmark(d)}>\n                                        Yes\n                                    </a>\n                                    <a\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setBookmarkWarning(false);\n                                            setRadioValue(false);\n                                            //blockRoutes();\n                                        }}\n                                    >\n                                        No\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n            {/* If user saved the test */}\n            <Modal\n                isOpen={saveWarning}\n                style={customStyles}\n                contentLabel=\"Finish test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n                                <p>Save test</p>\n                                <img src=\"assets/images/warning.png\" alt=\"\" />\n                                <p>Do you really want to save this test?</p>\n                                <div className=\"row\">\n                                    {saveLoader && <Spinner />}\n                                    <button\n                                        href=\"#\"\n                                        onClick={handleUserSaveTest}\n                                        disabled={saveLoader}\n                                    >\n                                        Yes\n                                    </button>\n                                    <button\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setSaveWarning(false);\n                                            setLoader(false);\n                                        }}\n                                    >\n                                        No\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n};\nexport default Question;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst TestNav = (props) => {\n    const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n    return (\n        <ul className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n            <li className=\"active\">\n                <a href=\"#\">\n                    Course : {props.courseName && props.courseName}{\" \"}\n                </a>\n            </li>\n            <li>\n                <a href=\"#\">\n                    Subject : {props.subjectName && props.subjectName}\n                </a>\n\n                <a className=\"d-md-none d-lg-none ml-3\" href=\"#\" onClick={props.handleEdit}>\n                    <i className=\"fas fa-pen\" />\n                </a>\n            </li>\n            <li>\n                <a className=\"d-md-block d-lg-block d-none\" href=\"#\" onClick={props.handleEdit}>\n                    <i className=\"fas fa-pen\" />\n                </a>\n            </li>\n        </ul>\n    )\n\n}\n\nexport default TestNav;","import React, { useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { GET_SAVED_TEST, REMOVED_SAVED_TEST } from \"../Api\";\nimport axios from \"axios\";\nimport { getTestDate } from \"../CommonFunction\";\nimport Spinner from \"../spinner/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { userAuth } from \"../../features/userSlice\";\nimport { toast } from \"react-toastify\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\nimport Modal from \"react-modal\";\n\nconst SavedTestLists = ({ resumeTest }) => {\n    const [saveLoader, setSaveLoader] = useState(false);\n    const [removeWarning, setRemoveWarning] = useState(false);\n    const [selectedTestId, setSelectedTestId] = useState(null);\n    const [removeLoader, setRemoveLoader] = useState(false);\n    const [savedTest, setSavedTest] = useState([]);\n    const userData =\n        Cookies.get(\"user_data\") != null && JSON.parse(Cookies.get(\"user_data\"));\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n\n\n    useEffect(() => {\n        { isAuth && getSavedTets(); }\n    }, []);\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n\n    const getSavedTets = async () => {\n        try {\n            setSaveLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const {\n                data: { data, status, error },\n            } = await axios.post(GET_SAVED_TEST, { user_id: userData.id }, config);\n            if (status == 200) {\n                setSaveLoader(false);\n                if (data.length > 0) {\n                    setSavedTest(data);\n                }\n            }\n        } catch (err) {\n            setSaveLoader(false);\n        }\n    };\n\n    // handleRemoveSavedTest\n    const handleRemoveSavedTest = async (e, savedTestId) => {\n        e.preventDefault();\n        console.log(savedTestId)\n        try {\n            setRemoveLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const {\n                data: { data, status, message },\n            } = await axios.post(REMOVED_SAVED_TEST, { test_id: savedTestId }, config);\n            if (status == 200) {\n                setRemoveLoader(false);\n                toast.success(message);\n                setSavedTest(savedTest.filter(item => item.test_id != savedTestId));\n                setRemoveWarning(false)\n            }\n        } catch (err) {\n            setRemoveLoader(false);\n            toast.error(\"Something went wrong, Try again.!\");\n        }\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"row savedTest\" >\n                        <h4>Saved test</h4>\n                        <table className={`table table-hover ${isDarkMode ? 'table-dark table table-hover' : 'table-white'}`}>\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">S.no</th>\n                                    <th scope=\"col\"> Course / Subject of the Test</th>\n                                    <th scope=\"col\">Questions</th>\n                                    <th scope=\"col\">Saved On</th>\n                                    <th scope=\"col\" style={{ width: \"5%\" }}></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {saveLoader ? (\n                                    <div className=\"spinner_div\">\n                                        <Spinner />\n                                    </div>\n                                ) : (\n                                    <>\n                                        {removeLoader &&\n                                            <Spinner />\n                                        }\n                                        {savedTest.length ? (\n                                            savedTest.map((item, index) => (\n                                                <tr key={index}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <th scope=\"row\">\n                                                        <Link to={`/user/resume-test/${item.test_id}`} title=\"Resume test\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                                            {item.courseName} / {item.subjectName}\n                                                        </Link>\n                                                    </th>\n                                                    <td>{item.total_questions}</td>\n                                                    <td>\n                                                        {getTestDate(item.created_at)} | {item.time_spent}\n                                                    </td>\n                                                    <td>\n                                                        <a\n                                                            href=\"#\"\n                                                            className=\"removeSavedTest\"\n                                                            onClick={(e) => {\n                                                                e.preventDefault();\n                                                                setSelectedTestId(item.test_id);\n                                                                setRemoveWarning(true);\n                                                            }}\n                                                            title=\"Remove test\"\n                                                        >\n                                                            <i className=\"fas fa-trash\"></i>\n                                                        </a>\n\n                                                        {/* <button\n                                                            className=\"removeSavedTest\"\n                                                            onClick={(e) => handleRemoveSavedTest(e, item.test_id)}\n                                                            title=\"Remove test\"\n                                                        >\n                                                            <i className=\"fas fa-trash\"></i>\n                                                        </button> */}\n                                                    </td>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan={5}>No saved test found..!</td>\n                                            </tr>\n                                        )}\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n\n            <Modal\n                isOpen={removeWarning}\n                style={customStyles}\n                contentLabel=\"Remove test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n                                <p>Remove Save test</p>\n                                <img src=\"assets/images/warning.png\" alt=\"\" />\n                                <p>Do you really want to remove this test?</p>\n\n                                <div className=\"row\">\n                                    {saveLoader && <Spinner />}\n                                    <button\n                                        className=\"removeSavedTest\"\n                                        onClick={(e) => handleRemoveSavedTest(e, selectedTestId)}\n                                        title=\"Remove test\"\n                                    >\n                                        Yes\n                                    </button>\n\n\n                                    <button\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setRemoveWarning(false);\n                                        }}\n                                    >\n                                        No\n                                    </button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default SavedTestLists;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport {\n    GET_COURSES,\n    GET_SUBJECTS,\n    GET_TOPICS,\n    GET_QUESTIONS,\n    ATTEMPT_ASSIGNED_TEST,\n    GET_YEAR,\n} from \"../components/Api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuth, setIsExam } from \"../features/userSlice\";\nimport Question from \"../components/exam/Question\";\nimport TestNav from \"../components/exam/testNav\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport Select from \"react-select\";\nimport Cookies from \"js-cookie\";\nimport { Link } from \"react-router-dom\";\nimport SavedTestLists from \"../components/exam/SavedTestLists\";\nimport { useParams } from \"react-router-dom\";\nimport Switch from \"react-switch\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport { GlobalStyles } from \"../GlobalStyles/GlobalStyles\";\nimport DarkAndLightMode from \"../DarkAndLightMode/DarkAndLightMode\";\n\n\nconst Freetest = () => {\n    const [courses, setCourses] = useState([]);\n    const [subjects, setSubjects] = useState([]);\n    const [mcq, setMcq] = useState();\n    const [theory, setTheory] = useState();\n    const [practical, setPractical] = useState();\n    const [step, setStep] = useState(1);\n    const [testData, setTestData] = useState({ type: 1 });\n    const [topics, setTopics] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [subjectyears, setSubjectYears] = useState([]);\n    const [year, setYear] = useState([]);\n    const dispatch = useDispatch();\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n    const { testId } = useParams(); //Instructor assign test\n    const [show, toggleShow] = React.useState(true);\n    const [number_of_question, setNumberOfQuestion] = useState([]);\n    const [ave_total_question, setaveNumberOfQuestion] = useState([]);\n    const [usersubscription, setUserSubscription] = useState([]);\n    const [randomchecked, setChecked] = useState(false);\n    const [flagchecked, setflagChecked] = useState(false);\n\n\n\n    useEffect(() => {\n        getCourses();\n    }, []);\n\n    useEffect(() => {\n        testId != undefined && isAssignedTest(testId);\n    }, [testId]);\n\n\n\n    const randomChange = nextChecked => {\n        setChecked(nextChecked);\n    };\n\n    const flagChange = nextChecked => {\n        setflagChecked(nextChecked);\n    };\n\n    //const userData = useSelector(examData); //using redux useSelector here\n\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n\n    //Get courses on page load\n    const getCourses = async () => {\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_COURSES);\n            if (status == 200) {\n                setLoader(false);\n                setCourses(data);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    // Evaluate is testId and userId exist or not\n    const isAssignedTest = async (test_id) => {\n        try {\n            var userData =\n                Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n            const body = {\n                user_id: !!userData && userData.id,\n                test_id: test_id,\n            };\n            const {\n                data: { data, status, message },\n            } = await axios.post(ATTEMPT_ASSIGNED_TEST, body, config);\n            if (status == 200) {\n                if (data.questions.length > 0) {\n                    localStorage.setItem(\"userTestId\", data.user_test_id);\n                    setQuestions(data);\n                    setStep(4);\n                } else {\n                    toast.error(\"Oops!, No questions found..!\");\n                }\n            } else {\n                toast.error(message);\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    const handleChange = (e) => {\n        setTestData({ ...testData, [e.target.name]: e.target.value });\n    };\n\n\n\n    console.log(testData)\n\n    //Get subject based on course change\n    const handleCourseChange = async (e) => {\n        var id = e.target.value;\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (!isNaN(id)) {\n            setLoader(true);\n            setTestData({\n                ...testData,\n                courseName: e.target.options[e.target.selectedIndex].text,\n                courseId: id,\n            });\n            const body = {\n                courseId: id,\n                user_id: !!userId && userId.id,\n            };\n            try {\n                const {\n                    data: { data, status, mcq, theory, practical, usersubscription, error },\n                } = await axios.post(GET_SUBJECTS, body);\n                if (status == 200) {\n                    setLoader(false);\n                    setSubjects(data);\n                    setMcq(mcq);\n                    setTheory(theory);\n                    setPractical(practical);\n                    setUserSubscription(usersubscription);\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n\n    //validate topics is checked or not  and go to next step\n    const handleNextStep = (e) => {\n\n        e.preventDefault(); // Prevent default anchor tag behavior\n        const coursesSelect = document.getElementById(\"courses\");\n        const subjectsSelect = document.getElementById(\"subjects\");\n\n        if (coursesSelect.value === \"Select course\") {\n            // Check if options are selected\n            toast.error(\"Please select course before proceeding.\");\n            return; // Don't proceed to the next step\n        }\n        else if (subjectsSelect.value === \"\") {\n            // Check if options are selected\n            toast.error(\"Please select subject before proceeding.\");\n            return; // Don't proceed to the next step\n        }\n\n        setLoader(true);\n        setTimeout(() => {\n            setLoader(false);\n            setStep(step + 1);\n        }, 500);\n        //}\n    };\n\n    //set subject state\n    const handleSubjectChange = async (e) => {\n        const target = e.target;\n        const id = target.value;\n        const userId = Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        \n        // Update the subject and possibly the type here\n        if (!isNaN(id)) {\n            setTestData((prevState) => ({\n                ...prevState,\n                subjectName: target.options[target.selectedIndex].text,\n                subject_id: id,\n            }));\n        }\n        \n        const body = {\n            courseId: parseInt(testData.courseId),\n            subjectId: id,\n            user_id: !!userId && userId.id,\n            type: testData.type, // Ensure this is correct in the current state\n        };\n    \n        try {\n            const {\n                data: { data, status, error },\n            } = await axios.post(GET_YEAR, body);\n            if (status == 200) {\n                setSubjectYears(data);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n// Example to handle type change\nconst handleTypeChange = (e) => {\n    const newType = e.target.value;\n    setTestData((prevState) => ({\n        ...prevState,\n        type: newType, // Update the type here\n    }));\n};\n    console.log(testData.type)\n\n    //On click edit button rest state\n    const handleEditTest = (e) => {\n        e.preventDefault();\n        setTestData({\n            type: 1,\n        });\n        if (step == 3) {\n            setStep(step - 2);\n        } else {\n            setStep(step - 1);\n        }\n    };\n\n    //Get topics\n    const getTopics = async (e) => {\n        e.preventDefault();\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (year == \"\" || year == undefined) {\n            toast.error(\"Please select a year..!\");\n            return false;\n        }\n        if (testData.courseName == \"\" || testData.courseName == undefined) {\n            toast.error(\"Please select any course..!\");\n            return false;\n        }\n        if (\n            testData.subjectName == \"\" ||\n            testData.subjectName == undefined ||\n            testData.subjectName == \"Select subject\"\n        ) {\n            toast.error(\"Please select any subject..!\");\n            return false;\n        }\n        setLoader(true);\n        const body = {\n            subjectId: testData.subject_id,\n            type: testData.type,\n            year: year,\n            user_id: !!userId && userId.id,\n            // number_of_question: 6,\n        };\n\n        try {\n            const {\n                data: { data, status, number_of_question, ave_total_question, error },\n            } = await axios.post(GET_TOPICS, body);\n            if (status == 200) {\n                let topicsData = data?.map((item) => {\n                    return { ...item, isChecked: true };\n                });\n                setStep(step + 1);\n                setTopics(topicsData);\n                setNumberOfQuestion(number_of_question);\n                setaveNumberOfQuestion(ave_total_question);\n                setLoader(false);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Someting went wrong, please try again..!\");\n        }\n    };\n\n    // console.log(testData)\n\n    //handle topics select\n    const handleCheckedTopics = (e) => {\n        const { id, checked, name } = e.target;\n        if (name === \"all\") {\n            const updatedCheckedState = topics.map((item) => {\n                return { ...item, isChecked: checked };\n            });\n            setTopics(updatedCheckedState);\n        } else {\n            const updatedCheckedState = topics.map((item) =>\n                item.topic_id == id ? { ...item, isChecked: checked } : item\n            );\n            setTopics(updatedCheckedState);\n        }\n    };\n\n    //Start test (whichTest 0 = free test and 1 = exam)\n    const startTest = async (e, whichTest) => {\n        e.preventDefault();\n        if (year == \"\" || year == undefined) {\n            toast.error(\"Please select a year..!\");\n            return false;\n        }\n        setLoader(true);\n        let topics_id = [];\n        topics.filter((item) => {\n            if (item.isChecked == true) {\n                topics_id.push(item.topic_id);\n            }\n        });\n        if (randomchecked == true) {\n            var randomquestion = 1;\n        } else {\n            var randomquestion = 0;\n        }\n\n        if (flagchecked == true) {\n            var flagquestion = 1;\n        } else {\n            var flagquestion = 0;\n        }\n\n\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        const body = {\n            topicsId: topics_id,\n            courseId: parseInt(testData.courseId),\n            type: testData.type,\n            year: year,\n            subjectId: testData.subject_id,\n            number_of_question: number_of_question,\n            user_id: !!userId && userId.id,\n            isExam: whichTest == 1 ? true : false,\n            total_question: ave_total_question,\n            randomquestion: randomquestion,\n            flagquestion: flagquestion\n        };\n        try {\n            const {\n                data: { data, status, message },\n            } = await axios.post(GET_QUESTIONS, body);\n            if (status == 200) {\n                if (data && data.questions != undefined && data.questions.length > 0) {\n                    localStorage.setItem(\"userTestId\", data.user_test_id);\n                    whichTest == 1 && dispatch(setIsExam(true));\n                    setQuestions(data);\n                    setLoader(false);\n                    setStep(step + 1);\n                } else {\n                    toast.error(message);\n                    setLoader(false);\n                }\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Someting went wrong, please try again..!\");\n        }\n    };\n\n    // Get dynamic years\n    const getYears = () => {\n        let currentYear = new Date().getFullYear();\n        //let endYear = new Date().getFullYear() - 17;\n        let endYear = 2006;\n        var option = [];\n        for (let year = currentYear; year >= endYear; year--) {\n            option.push({ value: year, label: year });\n        }\n        return option;\n    };\n\n    // handle on change year\n    // const handleYear = (e) => {\n    //     var yearValue = [];\n    //     e.map((item) => yearValue.push(item.value));\n    //     setYear(yearValue);\n    // };\n    const handleYear = (selectedOptions) => {\n        const yearValue = selectedOptions.map((option) => option.value);\n        setYear(yearValue);\n    };\n\n\n\n\n    // handle resume test\n    const handleResumeTest = () => {\n        setStep(4);\n        console.log(step);\n    };\n\n    const availableBadge = () => {\n        return (\n            <span className=\"avalablity\">\n                *Only 10% Is Available <i className=\"fas fa-info-circle\" />\n            </span>\n        );\n    };\n\n    const autoReload = () => {\n        // Reload the current page\n        window.location.reload();\n    };\n\n    useEffect(() => {\n        // Add a popstate event listener to detect browser navigation\n        const handlePopState = () => {\n            // Reload the page when the user navigates back\n            window.location.reload();\n        };\n\n        window.addEventListener(\"popstate\", handlePopState);\n\n        // Clean up the event listener when the component unmounts\n        return () => {\n            window.removeEventListener(\"popstate\", handlePopState);\n        };\n    }, []);\n\n\n    // window.location.reload(false)\n    // console.log(testData)\n\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    const tabScreen = () => {\n        switch (step) {\n            case 1:\n                return (\n                    <>\n                        {/* <DarkAndLightMode></DarkAndLightMode> */}\n                        <div className=\"category\">\n                            <h3>Select Exam Category</h3>\n                        </div>\n                        <div className=\"select-testing\">\n                            <div className=\"select-class\">\n                                <p>Select Course</p>\n                                <select onChange={handleCourseChange} id=\"courses\" required>\n                                    <option value>Select course</option>\n                                    {courses &&\n                                        courses.map((item, index) => (\n                                            <option value={item.id} key={index}>\n                                                {\" \"}\n                                                {item.name}{\" \"}\n                                            </option>\n                                        ))}\n                                </select>\n                            </div>\n                            <div className=\"select-subject\">\n                                <p>Select Subject</p>\n                                <select id=\"subjects\" onChange={handleSubjectChange} required>\n                                    <option value=\"\">Select subject</option>\n                                    {subjects &&\n                                        subjects.map((item, index) => (\n                                            <option value={item.id} key={index}>\n                                                {\" \"}\n                                                {item.name}{\" \"}\n                                            </option>\n                                        ))}\n                                </select>\n                            </div>\n\n                            <div className=\"exam-test\">\n                                {loader && <Spinner />}\n                                <a href=\"#\" className=\"common-btn\"  onClick={handleNextStep}>\n                                    Next\n                                </a>\n                            </div>\n                        </div>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <div className=\"category free-testing-tabs\">\n                            <TestNav\n                                courseName={testData.courseName}\n                                subjectName={testData.subjectName}\n                                handleEdit={handleEditTest}\n                            />\n                        </div>\n\n                        <div className=\"row justify-content-center testing-demo\">\n                            {(() => {\n                                if (mcq == 1) {\n                                    return <div className={`text-center col-md-2`}>\n                                        <div className=\"form-group\">\n                                            <div className=\"radio-btn-page\">\n                                                <label className=\"cs-radio\">\n                                                    MCQ\n                                                    <input\n                                                        type=\"radio\"\n                                                        checked={testData.type == 1}\n                                                        name=\"type\"\n                                                        value={1}\n                                                        onChange={handleChange}\n                                                        onClick={() => toggleShow(true)}\n                                                    />\n                                                    <span className=\"checkmark\" />\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>;\n                                }\n                                return null;\n                            })()}\n\n                            {(() => {\n                                if (theory == 1) {\n                                    return <div className={`col-md-5`}>\n                                        <div className=\"form-group\">\n                                            <div className=\"radio-btn-page\">\n                                                <label className=\"cs-radio\">\n                                                    Theory Questions\n                                                    <input\n                                                        type=\"radio\"\n                                                        checked={testData.type == 2}\n                                                        name=\"type\"\n                                                        value={2}\n                                                        onChange={handleChange}\n                                                        onClick={() => toggleShow(false)}\n                                                    />\n                                                    <span className=\"checkmark\" />\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>;\n                                }\n                                return null;\n                            })()}\n\n                            {(() => {\n                                if (practical == 1) {\n                                    return <div className={`col-md-5`}>\n                                        <div className=\"form-group\">\n                                            <div className=\"radio-btn-page\">\n                                                <label className=\"cs-radio\">\n                                                    Practical Questions\n                                                    <input\n                                                        type=\"radio\"\n                                                        checked={testData.type == 3}\n                                                        name=\"type\"\n                                                        value={3}\n                                                        onChange={handleChange}\n                                                        onClick={() => toggleShow(false)}\n                                                    />\n                                                    <span className=\"checkmark\" />\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>;\n                                }\n                                return null;\n                            })()}\n\n                        </div>\n                        {loader && <Spinner />}\n\n                        {/* <div className=\"select-testing\">\n                            <div className=\"select-class\">\n                                <p>Select Year</p>\n                                <Select\n                                    name=\"year\"\n                                    isMulti\n                                    onChange={handleYear}\n                                    options={subjectyears}\n                                    className=\"year_color\"\n                                />\n                            </div>\n                        </div> */}\n                        <div className=\"select-testing\">\n                            <div className=\"select-class\">\n                                <p>Select Year</p>\n                                <Select\n                                    name=\"year\"\n                                    isMulti\n                                    onChange={handleYear}\n                                    options={subjectyears}\n                                    className=\"year_color\"\n                                    value={subjectyears.filter(option => year.includes(option.value))}\n                                    isOptionDisabled={() => year.length >= 4} // Disable options when 4 are selected\n                                />\n                            </div>\n                        </div>\n                        {/*!usersubscription && availableBadge()*/}\n\n                        <div className=\"demo-test\">\n                            <button\n                                className=\"common-btn\"\n                                onClick={getTopics}\n                                disabled={loader}\n                            >\n                                Next{\" \"}\n                            </button>\n\n                        </div>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <div className=\"free-testing-tabs\">\n                            {!usersubscription && usersubscription ? (\n                                <TestNav\n                                    courseName={testData.courseName}\n                                    subjectName={testData.subjectName}\n                                    handleEdit={handleEditTest}\n                                />\n                            ) : (\n                                <>\n                                    <ul className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                        <li className=\"active\">\n                                            <a href=\"#\">\n                                                Course : {testData.courseName && testData.courseName}{\" \"}\n                                            </a>\n                                        </li>\n                                        <li>\n                                            <a href=\"#\">\n                                                Subject : {testData.subjectName && testData.subjectName}\n                                            </a>\n                                            <a href=\"#\" className=\"edit-button ml-2\" onClick={handleEditTest}>\n                                                <i className=\"fas fa-pen\" />\n                                            </a>\n                                        </li>\n\n                                    </ul>\n\n                                    <ul>\n                                        <li className=\"flag_switch_li flag_switch_position\">\n                                            <Switch\n                                                onChange={flagChange}\n                                                checked={flagchecked}\n                                                className=\"react-switch\"\n                                            />\n                                            <span className=\"switch-text\"> BookMark {flagchecked ? \"On\" : \"Off\"}</span>\n                                            <i className={`fas fa-bookmark ${flagchecked ? 'bookmark-on' : 'bookmark-off'}`}></i>\n                                        </li>\n                                    </ul>\n\n                                    {isAuth && !flagchecked && (\n                                        <div className=\"free-testing-tabs\">\n                                            <ul className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                                <li>\n                                                    <Switch\n                                                        onChange={randomChange}\n                                                        checked={randomchecked}\n                                                        className=\"react-switch\"\n                                                    /> <a href=\"#\" className=\"switch-text\"> Random Questions {randomchecked ? \"On\" : \"Off\"}</a>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    )}\n                                </>\n                            )}\n\n                            {/* {isAuth && !flagchecked && (\n                                <div className=\"free-testing-tabs\">\n                                    <ul className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                        <li>\n                                            <Switch\n                                                onChange={randomChange}\n                                                checked={randomchecked}\n                                                className=\"react-switch\"\n                                            /> <a href=\"#\" className=\"switch-text\"> Random Questions {randomchecked ? \"On\" : \"Off\"}</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            )} */}\n\n\n                            {/*!usersubscription && availableBadge()*/}\n                            <div className=\"row\">\n                                {/* User test or free test */}\n                                {isAuth ? (\n                                    <>\n                                        <div className={show ? \"col-6\" : \"col\"}>\n                                            <button\n                                                className=\"common-btn right\"\n                                                href=\"#\"\n                                                onClick={(e) => startTest(e, 0)}\n                                                disabled={loader}\n                                                style={{ float: show ? \"right\" : \"none\" }}\n                                            >\n                                                Study\n                                            </button>\n                                        </div>\n\n                                    </>\n                                ) : (\n                                    <>\n                                        <div className=\"col\">\n                                            <button\n                                                className=\"common-btn right\"\n                                                href=\"#\"\n                                                onClick={(e) => startTest(e, 0)}\n                                                disabled={loader}\n                                                style={{ float: \"none\" }}\n                                            >\n                                                Start Test\n                                            </button>\n                                        </div>\n                                    </>\n                                )}\n\n                                {/* User exam */}\n                                {isAuth && show && !flagchecked && (\n                                    <div className=\"col-6\">\n                                        <button\n                                            className=\"common-btn left\"\n                                            href=\"#\"\n                                            onClick={(e) => startTest(e, 1)}\n                                            disabled={loader}\n                                            style={{ float: \"left\" }}\n                                        >\n                                            Exam{\" \"}\n                                        </button>\n                                    </div>\n                                )}\n                            </div>\n                            {loader && <Spinner />}\n                            <table className=\"lit-table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <label className=\"chk-b\">\n                                                Select Topic\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={\n                                                        topics.length > 0 &&\n                                                        topics.filter((item) => item?.isChecked !== true)\n                                                            .length < 1\n                                                    }\n                                                    name=\"all\"\n                                                    onClick={handleCheckedTopics}\n                                                />\n                                                <span className=\"checkmark\" />\n                                            </label>\n                                        </td>\n                                        <td>Questions (Trail)</td>\n                                    </tr>\n                                    {topics.length > 0 ? (\n                                        topics.map((item, index) => (\n                                            <tr key={index}>\n                                                <td>\n                                                    <label className=\"chk-b\">\n                                                        {item.topic_name}\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            checked={item?.isChecked || false}\n                                                            value={item.topic_id}\n                                                            id={item.topic_id}\n                                                            name=\"topics_id\"\n                                                            onChange={handleCheckedTopics}\n                                                        />\n                                                        <span className=\"checkmark\" />\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    {!usersubscription ? (\n                                                        <span>{item.show}/{item.count}</span>\n                                                    ) : (\n                                                        <span>\n                                                            {!flagchecked ? (\n                                                                <b>{item.count}</b>\n                                                            ) : (\n                                                                <b>{item.topicflagquestions}/{item.count}</b>\n                                                            )}\n                                                        </span>\n\n                                                    )}\n\n                                                    <i className=\"fas fa-chevron-down\" />\n                                                </td>\n                                            </tr>\n                                        ))\n                                    ) : (\n                                        <tr>\n                                            <td>\n                                                <label className=\"chk-b\">No topics found</label>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            {/* {topics && topics.length > 5\n              \n                <a className=\"see-more\" href=\"#\">\n                  See More\n                </a>\n              \n              } */}\n\n                        </div>\n                    </>\n                );\n            case 4:\n                return <Question questions={questions} />;\n            default:\n                return \"foo\";\n        }\n    };\n\n    // const { isDarkMode } = useContext(ThemeContext);\n\n    const theme = {\n        background: isDarkMode ? '#333' : '#fff',\n        text: isDarkMode ? '#fff' : '#333',\n    };\n\n    return (\n        <>\n            <GlobalStyles theme={theme} />\n            <Header />\n\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    <div className=\"pagination\">\n                        <span onClick={autoReload} className={`${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                            <Link to={isAuth ? \"/user/dashboard\" : \"/\"}>\n                                <i className=\"fas fa-chevron-left\" />\n                                TEST SETTING\n                            </Link>\n                        </span>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">{tabScreen()}</div>\n                    </div>\n                    {step != 4 && isAuth && (\n                        <SavedTestLists resumeTest={handleResumeTest} />\n                    )}\n                </div>\n            </section>\n            <Footer />\n            {/* < ToastContainer /> */}\n        </>\n    );\n};\n\nexport default Freetest;\n","import React, { useEffect, useState } from \"react\";\n\nconst Accordion = ({ subjects }) => {\n\n  const [getSubjects, setSubjects] = useState(subjects);\n\n  const handleAccordion = (sub) => {\n    const accordion = [...getSubjects];\n    accordion.map(accord => {\n      if(accord.id === sub.id){\n        accord.isActive == \"active\" ? accord.isActive = \"\" : accord.isActive = \"active\";\n      }else{\n        accord.isActive = \"\";\n      }\n    })\n    setSubjects(accordion);\n  }\n\n  return (\n    <>\n      {\n        getSubjects.length > 0 && \n        getSubjects.map((subject, key) => (\n          <div className={`accordion-item ${subject.isActive ? subject.isActive : ''}`} key={key}>\n            <div\n              className=\"accordion-title\"\n              onClick={() => handleAccordion(subject)}\n            >\n              <div>\n                {subject.name}\n                <span>{subject.isActive ? \"-\" : \"+\"}</span>\n              </div>\n            </div>\n\n            {subject?.isActive && (\n              <>\n                <div className=\"accordion-content\">\n                  <ul>\n                    {subject?.topics.length ? (\n                      subject.topics.map((topic, key) => (\n                        <li key={key}>{topic.name}</li>\n                      ))\n                    ) : (\n                      <li> No topics found</li>\n                    )}\n                  </ul>\n                </div>\n              </>\n            )}\n\n          </div>\n        ))\n      }\n    </>\n  );\n};\n\nexport default Accordion;\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport axios from 'axios'\nimport { Link, useParams } from 'react-router-dom'\nimport { GET_COURSE_DETAIL, USER_SUBSCRIBE } from '../components/Api'\nimport Cookies from 'js-cookie'\nimport { useSelector } from 'react-redux'\nimport { global } from '../components/Config'\nimport { toast } from 'react-toastify'\nimport Spinner from '../components/spinner/Spinner'\nimport Accordion from '../components/accordion'\nimport { userProfile } from '../features/userSlice'\nimport Signin from '../components/modals/signin'\nimport { useContext } from 'react'\nimport { ThemeContext } from '../ThemeContaxt/ThemeContaxt'\n\nconst Package = () => {\n  const { id } = useParams()\n  const userData =\n    Cookies.get('user_data') && JSON.parse(Cookies.get('user_data'))\n  const history = useHistory()\n  const [loader, setLoader] = useState(false)\n  const [buttonLoader, setButtonLoader] = useState(false)\n  const [course, setCourse] = useState([])\n  const [interval, setInterval] = useState('Anually')\n  // const userData = useSelector(userProfile).user.profile; //Redux user data\n  const [open, setOpen] = useState(false)\n  const [planData, setPlanData] = useState({\n    planPrice: '',\n    planId: ''\n  })\n\n  const config = {\n    headers: {\n      Authorization: Cookies.get('token')\n    }\n  }\n\n  useEffect(() => {\n    getCourse()\n  }, [])\n\n  const getCourse = async () => {\n    try {\n      setLoader(true)\n      const body = {\n        courseId: id,\n        userId: userData ? userData.id : false\n      }\n      const {\n        data: { message, status, data }\n      } = await axios.post(GET_COURSE_DETAIL, body)\n      if (status == 200) {\n        setLoader(false)\n        if (data) {\n          setCourse(data)\n          setInterval(() => {\n            data.plans.length && getPlanPrice(data.plans[0].plan_id, data)\n          }, 300)\n        } else {\n          setCourse(data)\n          toast.error('Something went wrong, please try again.!')\n        }\n      } else {\n        history.push('/eshop')\n        toast.error('Something went wrong, please try again.!')\n      }\n    } catch (error) {\n      console.log(error, '000000000000')\n      setLoader(false)\n      toast.error('Something went wrong, please try again.!')\n    }\n  }\n\n  // handle subscribe button\n  const handleSubscribe = async e => {\n    e.preventDefault()\n    try {\n      setButtonLoader(true)\n      const body = {\n        email: userData.email,\n        courseId: id,\n        planId: planData.planId,\n        totalPrice: planData.planPrice?.replace(/\\./g, '')\n      }\n      const {\n        data: { data, status, message }\n      } = await axios.post(USER_SUBSCRIBE, body, config)\n    //   console.log(\"authorization_url\", data?.authorization_url)\n      if (status == 200) {\n        setButtonLoader(false)\n        localStorage.setItem('planId', planData.planId)\n        window.location = data.authorization_url\n      } else {\n        setButtonLoader(false)\n        toast.error(message)\n      }\n    } catch (error) {\n      setButtonLoader(false)\n      console.log(error)\n    }\n  }\n\n  const getPlanPrice = (planId, courseData) => {\n    var selectedPlan = courseData.plans.filter(plan => plan.plan_id == planId)\n    setPlanData({\n      ...planData,\n      ['planPrice']: selectedPlan[0]?.plan_amount,\n      ['planId']: planId\n    })\n  }\n\n  const handlePlan = e => {\n    getPlanPrice(e.target.value, course)\n  }\n\n  // Open Sign in pop up if user not logged in\n  const handleBuyCourse = e => {\n    e.preventDefault()\n    setOpen(true)\n  }\n\n  // handle to close the modal\n  const handleCloseModal = () => {\n    setOpen(false)\n  }\n\n  const handleNoPlan = e => {\n    e.preventDefault()\n    toast.error('No plans avaliable for this course.')\n  }\n\n  const { isDarkMode } = useContext(ThemeContext)\n\n  return (\n    <>\n      <Header />\n\n      <section className='e-shop-payment'>\n        <div className='container'>\n          <div className='pagination'>\n            <span>\n              <Link\n                to='/eshop'\n                className={`${isDarkMode ? 'color_light' : 'color_dark'}`}\n              >\n                <i className='fas fa-chevron-left' />\n                Back\n              </Link>\n            </span>\n          </div>\n\n          <div className='row buy_package'>\n            {loader ? (\n              <div className='spinner_div' style={{ minHeight: '400px' }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                <div className='col-md-6 col-12'>\n                  <div className='e-shop-payment-left'>\n                    <h4>{course.name}</h4>\n                    <p>{course.description}</p>\n                    {/* <p>*Unlimited Explanation</p>\n          <p>*Unlimited Saved Question</p>\n          <p>*Unlimited Test</p> */}\n                    <img\n                      src={\n                        `${global.API_HOST}assets/images/courses/` +\n                        course.image\n                      }\n                      alt='course_image'\n                    />\n                  </div>\n                  <div className='col-md-6 col-12 for_mobile'>\n                    <div className='e-shop-payment-right'>\n                      <h4>Choose Subscription</h4>\n                      <form>\n                        <div className='row'>\n                          {course?.plans?.length ? (\n                            course.plans.map((plan, key) => (\n                              <div className='col-md-6 col-12' key={key}>\n                                <div className='form-group'>\n                                  <div className='radio-btn-page'>\n                                    <label className='cs-radio'>\n                                      ₦ {plan.plan_amount} /{' '}\n                                      {plan.plan_interval == 1 && '1 Year'}\n                                      <input\n                                        type='radio'\n                                        defaultChecked={\n                                          key == 0 ? 'checked' : ''\n                                        }\n                                        name='plan'\n                                        value={plan.plan_id}\n                                        onChange={handlePlan}\n                                      />\n                                      <span className='checkmark' />\n                                    </label>\n                                  </div>\n                                </div>\n                              </div>\n                            ))\n                          ) : (\n                            <div className='col-md-6 col-12'>\n                              <div className='form-group'>\n                                <h4>No plans found..!</h4>\n                              </div>\n                            </div>\n                          )}\n\n                          <div className='col-md-12'>\n                            <div className='form-group'>\n                              {/* <Link to=\"#\">\n                              <img src=\"assets/images/pro.png\" alt=\"\" />\n                              Apply Promotional Code\n                            </Link> */}\n                            </div>\n                          </div>\n                        </div>\n                        <h4>Payment Information</h4>\n                        {planData.planPrice.length && (\n                          <h6>Your total is ₦ {planData.planPrice}</h6>\n                        )}\n                        {/* <p>\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing\n                        elit. Aenean commodo ligula eget dolor. Aenean massa.\n                        Cum sociis natoque penatibus et magnis dis parturient\n                        montes, nascetur ridiculus mus.\n                      </p> */}\n\n                        <div className='form-group'>\n                          {planData.planPrice.length ? (\n                            course.isUserSubscribed ? (\n                              <button\n                                className='common-btn'\n                                title='You already subscribe this course'\n                                disabled\n                              >\n                                You already subscribe this course\n                              </button>\n                            ) : course.userNotExist ? (\n                              <button\n                                className='common-btn'\n                                title='Kindly login to subscribe this course'\n                                onClick={handleBuyCourse}\n                              >\n                                Subscribe\n                              </button>\n                            ) : (\n                              <button\n                                className='common-btn'\n                                onClick={handleSubscribe}\n                                title='Click here to subscribe'\n                                disabled={buttonLoader}\n                              >\n                                Subscribe\n                              </button>\n                            )\n                          ) : (\n                            <button\n                              className='common-btn'\n                              title='No plans avaliable for this course.'\n                              onClick={handleNoPlan}\n                            >\n                              No plans avaliable\n                            </button>\n                          )}\n                        </div>\n\n                        {buttonLoader && <Spinner />}\n                      </form>\n                    </div>\n                  </div>\n                  <div className='subject-detail'>\n                    <p className='es-par-title'>\n                      CONTAINS FOLLOWING {course.name} SUBJECTS\n                    </p>\n                    <div className='col-md-10'>\n                      <div\n                        className={`accordion ${\n                          isDarkMode\n                            ? 'according_text_dark'\n                            : 'according_text_light'\n                        }`}\n                      >\n                        {course?.subjects?.length ? (\n                          <Accordion subjects={course.subjects} />\n                        ) : (\n                          <p>No subjects found..!</p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='col-md-6 for_desktop'>\n                  <div className='e-shop-payment-right'>\n                    <h4>Choose Subscription</h4>\n                    <form>\n                      <div className='row'>\n                        {course?.plans?.length ? (\n                          course.plans.map((plan, key) => (\n                            <div className='col-md-6' key={key}>\n                              <div className='form-group'>\n                                <div className='radio-btn-page'>\n                                  <label className='cs-radio'>\n                                    ₦ {plan.plan_amount} /{' '}\n                                    {plan.plan_interval == 1 && '1 Year'}\n                                    <input\n                                      type='radio'\n                                      defaultChecked={key == 0 ? 'checked' : ''}\n                                      name='plan'\n                                      value={plan.plan_id}\n                                      onChange={handlePlan}\n                                    />\n                                    <span className='checkmark' />\n                                  </label>\n                                </div>\n                              </div>\n                            </div>\n                          ))\n                        ) : (\n                          <div className='col-md-6'>\n                            <div className='form-group'>\n                              <h4>No plans found..!</h4>\n                            </div>\n                          </div>\n                        )}\n\n                        <div className='col-md-12'>\n                          <div className='form-group'>\n                            {/* <Link to=\"#\">\n                              <img src=\"assets/images/pro.png\" alt=\"\" />\n                              Apply Promotional Code\n                            </Link> */}\n                          </div>\n                        </div>\n                      </div>\n                      <h4>Payment Information</h4>\n                      {planData.planPrice.length && (\n                        <h6>Your total is ₦ {planData.planPrice}</h6>\n                      )}\n                      {/* <p>\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing\n                        elit. Aenean commodo ligula eget dolor. Aenean massa.\n                        Cum sociis natoque penatibus et magnis dis parturient\n                        montes, nascetur ridiculus mus.\n                      </p> */}\n\n                      <div className='form-group'>\n                        {planData.planPrice.length ? (\n                          course.isUserSubscribed ? (\n                            <button\n                              className='common-btn'\n                              title='You already subscribe this course'\n                              disabled\n                            >\n                              You already subscribe this course\n                            </button>\n                          ) : course.userNotExist ? (\n                            <button\n                              className='common-btn'\n                              title='Kindly login to subscribe this course'\n                              onClick={handleBuyCourse}\n                            >\n                              Subscribe\n                            </button>\n                          ) : (\n                            <button\n                              className='common-btn'\n                              onClick={handleSubscribe}\n                              title='Click here to subscribe'\n                              disabled={buttonLoader}\n                            >\n                              Subscribe\n                            </button>\n                          )\n                        ) : (\n                          <button\n                            className='common-btn'\n                            title='No plans avaliable for this course.'\n                            onClick={handleNoPlan}\n                          >\n                            No plans avaliable\n                          </button>\n                        )}\n                      </div>\n\n                      {buttonLoader && <Spinner />}\n                    </form>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      {/* Sign in Pop up open  */}\n      <Signin show={open} closePop={handleCloseModal} />\n      <Footer />\n    </>\n  )\n}\n\nexport default Package\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { TEST_REPORT } from \"../../components/Api\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTestDate, removeTags } from \"../../components/CommonFunction\";\nimport { userAuth } from \"../../features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Comment from \"../../components/exam/Comment\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst Report = () => {\n    const history = useHistory();\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n    const [result, setResult] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const { testId } = useParams();\n\n    useEffect(() => {\n        getTestReport();\n    }, []);\n\n    const getTestReport = async () => {\n        if (\n            testId == undefined &&\n            localStorage.getItem(\"userTestId\") == undefined\n        ) {\n            history.push(\"/free-test\");\n            //return false;\n        }\n\n        try {\n            setLoader(true);\n            const body = {\n                testId: testId ? testId : localStorage.getItem(\"userTestId\"),\n            };\n            const {\n                data: { result, status },\n            } = await axios.post(TEST_REPORT, body);\n            if (status == 200) {\n                setResult(result);\n                setLoader(false);\n            } else {\n                history.push(\"/free-test\");\n            }\n        } catch (error) {\n            console.log(error);\n            //toast.error(\"Something went wrong, please try again.!\");\n        }\n    };\n\n    // Get correct answer from total question\n    const correctCount = () => {\n        return result.questionsData?.filter((item) => item?.isCorrect == true)\n            .length;\n    };\n\n    // If user has right answer\n    const getRightOption = (items) => {\n        return getOption(items.answer, items);\n    };\n    // If user has wrong anser\n    const getUserOption = (items) => {\n        return getOption(items.choosen_option, items);\n    };\n\n    // Get options common function\n    function getOption(option, items) {\n        var rightAnser = \"\";\n        switch (option) {\n            case 1:\n                rightAnser = items.option_1;\n                break;\n            case 2:\n                rightAnser = items.option_2;\n                break;\n            case 3:\n                rightAnser = items.option_3;\n                break;\n            case 4:\n                rightAnser = items.option_3;\n                break;\n            default:\n                rightAnser = \"No Answer\";\n                break;\n        }\n        return rightAnser;\n    }\n\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    {loader ? (\n                        <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                            <Spinner />\n                        </div>\n                    ) : (\n                        <>\n                            <div className=\"pagination\">\n                                <span>\n                                    {testId ? (\n                                        <Link to=\"/user/reports\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                            <i className=\"fas fa-chevron-left\" />\n                                            Back\n                                        </Link>\n                                    ) : (\n                                        <Link to=\"/user/reports\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                            <i className=\"fas fa-chevron-left\" />\n                                            Grade Report\n                                        </Link>\n                                    )}\n                                </span>\n                            </div>\n                            <div className=\"frade-timing\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6 col-12\">\n                                        <div className=\"grade-left\">\n                                            <p>\n                                                {`${result.courseName\n                                                        ? \"Course name -\" + result.courseName + \" | \"\n                                                        : \"\"\n                                                    }`}\n                                                {`${result.subjectName\n                                                        ? \"Subject name -\" + result.subjectName + \" | \"\n                                                        : \"\"\n                                                    }`}\n                                                {`${result.type\n                                                        ? result.type == 1\n                                                            ? \"Type - MCQ\"\n                                                            : \"Type - Theory\"\n                                                        : \"\"\n                                                    }`}\n                                            </p>\n                                            <p>\n                                                {getTestDate(result.created_at)} <span>|</span>\n                                                Time spent {result.time_spent} <span>|</span> Correct{\" \"}\n                                                {correctCount()} of {result.total_questions} questions\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6 col-12\">\n                                        <div className=\"grade-right\">\n                                            <span>\n                                                {Math.floor(\n                                                    (correctCount() / result.total_questions) * 100\n                                                )}\n                                                %\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row \">\n                                <div className=\"col-md-9\">\n                                    <div className=\"grade-report-chart\">\n                                        <Helmet>\n                                            <script\n                                                src=\"https://www.wiris.net/demo/plugins/app/WIRISplugins.js?viewer=image&async=true\"\n                                                type=\"text/javascript\"\n                                            />\n                                        </Helmet>\n                                        <ul>\n                                            {result.questionsData?.length > 0 ? (\n                                                result.questionsData?.map((item, index) => (\n                                                    <li\n                                                        className={\n                                                            item.isCorrect ? \"green-list\" : \"red-list\"\n                                                        }\n                                                        key={index}\n                                                    >\n                                                        <div className=\"chart-left\">\n                                                            <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div>\n                                                            {/* <p>\n                                {removeTags(item.question).length > 60\n                                  ? (item.question\n                                      .trim()\n                                      .substring(0, 60)\n                                      .replace(/(&nbsp;|<([^>]+)>)/gi, \"\"),\n                                    +\"...\")\n                                  : item.question\n                                      .trim()\n                                      .replace(/(&nbsp;|<([^>]+)>)/gi, \"\")}\n                              </p> */}\n                                                            {item.answer == item.choosen_option ? (\n                                                                <h5 className=\"green\">\n                                                                    <span>\n                                                                        {\" \"}\n                                                                        <i\n                                                                            className=\"fa fa-check\"\n                                                                            aria-hidden=\"true\"\n                                                                        />\n                                                                    </span>\n                                                                    <div\n                                                                        className=\"post__content\"\n                                                                        dangerouslySetInnerHTML={{\n                                                                            __html: getRightOption(item),\n                                                                        }}\n                                                                    />\n                                                                </h5>\n                                                            ) : (\n                                                                <>\n                                                                    <h5 className=\"green\">\n                                                                        <span>\n                                                                            {\" \"}\n                                                                            <i\n                                                                                className=\"fa fa-check\"\n                                                                                aria-hidden=\"true\"\n                                                                            />\n                                                                        </span>\n                                                                        <div\n                                                                            className=\"post__content\"\n                                                                            dangerouslySetInnerHTML={{\n                                                                                __html: getRightOption(item),\n                                                                            }}\n                                                                        />\n                                                                    </h5>\n                                                                    <h5 className=\"red\">\n                                                                        <span>\n                                                                            {\" \"}\n                                                                            <i\n                                                                                className=\"fa fa-check\"\n                                                                                aria-hidden=\"true\"\n                                                                            />\n                                                                        </span>\n                                                                        <div\n                                                                            className=\"post__content\"\n                                                                            dangerouslySetInnerHTML={{\n                                                                                __html: getUserOption(item),\n                                                                            }}\n                                                                        />\n                                                                    </h5>\n                                                                </>\n                                                            )}\n                                                        </div>\n                                                        <div className=\"chart-center\">\n                                                            <p\n                                                                style={{ cursor: \"pointer\" }}\n                                                                data-toggle=\"modal\"\n                                                                data-target={`#explanation-${index} `}\n                                                            >\n                                                                <img src=\"assets/images/not.png\" alt=\"\" />\n                                                                Explanation\n                                                            </p>\n\n                                                            {/*Expalanation modal  */}\n                                                            <div\n                                                                className=\"modal fade bd-example-modal-lg\"\n                                                                key={index}\n                                                                id={`explanation-${index} `}\n                                                                tabIndex={-1}\n                                                                role=\"dialog\"\n                                                                aria-labelledby=\"exampleModalLabel\"\n                                                                aria-hidden=\"true\"\n                                                            >\n                                                                <div\n                                                                    className=\"modal-dialog modal-lg\"\n                                                                    role=\"document\"\n                                                                >\n                                                                    <div className=\"modal-content\">\n                                                                        <div className=\"modal-header\">\n                                                                            <h5\n                                                                                className=\"modal-title\"\n                                                                                id=\"exampleModalLabel\"\n                                                                                style={{ color: 'black' }}\n                                                                            >\n                                                                                Explanation\n                                                                            </h5>\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"close\"\n                                                                                data-dismiss=\"modal\"\n                                                                                aria-label=\"Close\"\n                                                                            >\n                                                                                <span aria-hidden=\"true\">×</span>\n                                                                            </button>\n                                                                        </div>\n                                                                        <div className=\"modal-body\">\n                                                                            {\n                                                                                item.explanation ? (\n                                                                                    <div\n                                                                                        className=\"post__content\"\n                                                                                        dangerouslySetInnerHTML={{\n                                                                                            __html: item.explanation,\n                                                                                        }}\n                                                                                    ></div>\n                                                                                ) : (\n                                                                                    <div className=\"post__content\">\n                                                                                        <p>No examination found..</p>\n                                                                                    </div>\n                                                                                )\n                                                                                //   <MathJax.Provider>\n                                                                                //   <MathJax.Html html={item.explanation} />\n                                                                                // </MathJax.Provider>\n                                                                            }\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            {/* modal  */}\n                                                        </div>\n                                                        <div className=\"chart-center\">\n                                                            <p\n                                                                style={{ cursor: \"pointer\" }}\n                                                                data-toggle=\"modal\"\n                                                                data-target={`#comment-${index} `}\n                                                            >\n                                                                <img src=\"assets/images/chat.png\" alt=\"\" />\n                                                                Comments\n                                                            </p>\n                                                            {/*Comment modal  */}\n                                                            <div\n                                                                className=\"modal fade bd-example-modal-lg\"\n                                                                key={index}\n                                                                id={`comment-${index} `}\n                                                                tabIndex={-1}\n                                                                role=\"dialog\"\n                                                                aria-labelledby=\"exampleModalLabel\"\n                                                                aria-hidden=\"true\"\n                                                            >\n                                                                <div\n                                                                    className=\"modal-dialog modal-lg\"\n                                                                    role=\"document\"\n                                                                >\n                                                                    <div className=\"modal-content\">\n                                                                        <div className=\"modal-header\">\n                                                                            <h5\n                                                                                className=\"modal-title\"\n                                                                                id=\"exampleModalLabel\"\n                                                                                style={{ color: 'black' }}\n                                                                            >\n                                                                                Comments\n                                                                            </h5>\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"close\"\n                                                                                data-dismiss=\"modal\"\n                                                                                aria-label=\"Close\"\n                                                                            >\n                                                                                <span aria-hidden=\"true\">×</span>\n                                                                            </button>\n                                                                        </div>\n                                                                        <div className=\"modal-body\">\n                                                                            {!item?.comments?.length == '' ? (\n                                                                                <Comment\n                                                                                    comments={item.comments}\n                                                                                    questionId={item.id}\n                                                                                //commentChange={handleCommentChange}\n                                                                                />\n                                                                            ) : (\n                                                                                <div className=\"post__content\">\n                                                                                    <p>No comment found..</p>\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            {/* modal  */}\n                                                        </div>\n                                                    </li>\n                                                ))\n                                            ) : (\n                                                <p>No questions found..!</p>\n                                            )}\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3\">\n                                    <div className=\"free-test-tabing-right free-test-tabing-right free-test-tabing-right_light_color\">\n                                        <span>Test Details</span>\n                                        <ul>\n                                            {result &&\n                                                result.questionsData?.map((item, index) => (\n                                                    <>\n                                                        <li\n                                                            className={item.isCorrect ? \"green\" : \"red\"}\n                                                            key={index}\n                                                        >\n                                                            <a href=\"#\" onClick={(e) => e.preventDefault()}>\n                                                                {index + 1}\n                                                            </a>\n                                                        </li>\n                                                    </>\n                                                ))}\n                                        </ul>\n                                        {!testId && (\n                                            <div className=\"cal-btn\">\n                                                <Link\n                                                    to={isAuth ? \"/user/free-test\" : \"/free-test\"}\n                                                    onClick={() => {\n                                                        localStorage.getItem(\"userTestId\") != null &&\n                                                            localStorage.removeItem(\"userTestId\");\n                                                    }}\n                                                >\n                                                    Try again\n                                                </Link>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n};\n\nexport default Report;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { GET_AFFILIATE_REQUEST, GET_MONTHLY_REPORT, GET_COURSES, GET_COURSES_GRAPH, MY_PROFILE, GET_RESET_GRAPH } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\nimport Modal from \"react-modal\";\nimport Switch from \"react-switch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userProfile, profile } from \"../../features/userSlice\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst Dashboard = () => {\n    const history = useHistory();\n    const [courses, setCourses] = useState([]);\n    const [reports, setReports] = useState([]);\n    const [reportData, setReportData] = useState([]);\n    const [scoreData, setScoreData] = useState([]);\n    const [loader, setLoader] = useState(false);\n    // const [resetGrapth, setResetGrapth] = useState(false);\n    const [goAffiliat, setGoAffiliat] = useState(false);\n    const dispatch = useDispatch();\n    const userReduxData = useSelector(userProfile).user.profile;\n    var isRole =\n        !!Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n    // console.log(isRole)\n\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n\n    useEffect(() => {\n        getReports();\n    }, []);\n\n    const getReports = async () => {\n        try {\n            setLoader(true);\n            var user_data = JSON.parse(Cookies.get(\"user_data\"));\n            const body = {\n                userId: user_data.id,\n            };\n            const {\n                data: { status, data },\n            } = await axios.post(GET_MONTHLY_REPORT, body, config);\n            if (status === 200) {\n                getDate(data);\n                setReports(data);\n                setLoader(false);\n            }\n        } catch (error) {\n            setLoader(false);\n            console.log(error);\n        }\n    };\n\n    const getaffiliaterequest = async () => {\n\n        // setGoAffiliat(true)\n\n        // console.log(\"Hi\")\n\n        try {\n            setLoader(true);\n            var user_data = JSON.parse(Cookies.get(\"user_data\"));\n            const body = {\n                userId: user_data.id,\n            };\n\n            const {\n                data: { status, data },\n            } = await axios.post(GET_AFFILIATE_REQUEST, body, config);\n            // console.log(\"check data\", data)\n            if (status === 200) {\n                // checkRefferCode()\n                setGoAffiliat(true)\n                // setGoAffiliat(true);\n                // window.location.replace('https://examtice.com/affiliate/dashboard');\n            }\n        } catch (error) {\n            setLoader(false);\n            console.log(error);\n        }\n\n    };\n\n    // modal Yes button action \n    const handleGoAffiliat = async () => {\n        try {\n            setLoader(true);\n            var user_data = JSON.parse(Cookies.get(\"user_data\"));\n            const body = {\n                userId: user_data.id,\n            };\n            const {\n                data: { status, data },\n            } = await axios.post(GET_AFFILIATE_REQUEST, body, config);\n\n            console.log(data)\n            if (status === 200) {\n                console.log(data);\n                var inTwoMinutes = new Date(\n                    new Date().getTime() + 60 * 60 * 24 * 1000 * 7\n                ); // 7 days\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                setLoader(false);\n                dispatch(profile({ profile: data.user }));\n                Cookies.set(\"user_data\", JSON.stringify(data.user), expiryObject);\n\n                window.location.replace('https://www.examtice.com/affiliate/dashboard');\n            }\n        }\n        catch (error) {\n            setLoader(false);\n            console.log(error);\n        }\n    }\n\n    const getsupportlogin = async () => {\n        try {\n            setLoader(true);\n            var user_data = JSON.parse(Cookies.get(\"user_data\"));\n            window.location.replace('https://examtice.com/support');\n\n        } catch (error) {\n            setLoader(false);\n            console.log(error);\n        }\n    };\n\n\n    const handleCourseChange = async (e) => {\n        var id = e.target.value;\n\n        // console.log(id)\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (!isNaN(id)) {\n            setLoader(true);\n            try {\n                setLoader(true);\n                var user_data = JSON.parse(Cookies.get(\"user_data\"));\n                const body = {\n                    courseId: id,\n                    userId: user_data.id,\n                };\n                console.log(body)\n                const {\n                    data: { status, data },\n                } = await axios.post(GET_COURSES_GRAPH, body, config);\n\n                if (status === 200) {\n                    getDate(data);\n                    setReports(data);\n                    setLoader(false);\n                }\n            } catch (error) {\n                setLoader(false);\n                console.log(error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        getCourses();\n    }, []);\n\n    const getCourses = async () => {\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_COURSES);\n            if (status == 200) {\n                setLoader(false);\n                setCourses(data);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    function getDate(data) {\n        var dates = [];\n        var scores = [];\n        data?.userReport\n            ?.reverse()\n            .map(\n                (val, i) => (\n                    dates.push(getTestDate(val.created_at)),\n                    scores.push(\n                        Math.floor((val.totaCorrectOption / val.total_questions) * 100)\n                    )\n                )\n            );\n        setReportData(dates);\n        setScoreData(scores);\n    }\n\n\n    const state = {\n        labels: reportData,\n        datasets: [\n            {\n                label: \"Score board\",\n                fill: false,\n                lineTension: 0.5,\n                backgroundColor: \"rgba(75,192,192,1)\",\n                borderColor: \"#ffff\",\n                borderWidth: 2,\n                data: scoreData,\n            },\n        ],\n    };\n    const state2 = {\n        labels: reportData,\n        datasets: [\n            {\n                label: \"Score board\",\n                fill: false,\n                lineTension: 0.5,\n                backgroundColor: \"rgba(75,192,192,1)\",\n                borderColor: \"#000\",\n                borderWidth: 2,\n                data: scoreData,\n            },\n        ],\n    };\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        }\n    }\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"dashboad-page\">\n                <div className=\"container\">\n                    <div className=\"row\">\n\n                        <div className=\"col-md-12\">\n                            <div className=\"dash-graph\">\n                                {loader && <Spinner />}\n                                <span className=\"left mb-3\">Score of your last 30 days</span>\n\n                                {/* <span className=\"right ml-4\">\n                                    <button onClick={handleResetGraph} className=\"btn btn-danger btn-sm\">Reset</button>\n                                </span> */}\n\n                                <span className=\"right mb-3\">{reports.totalQues ? reports.totalQues : 0} Questions seen</span>\n\n                                <div className=\"select-class\">\n                                    <select onChange={handleCourseChange} id=\"courses\" className=\"p-1 p-md-1 p-lg-0\" style={{ backgroundColor: \"#fff\" }}>\n                                        <option value=\"0\">All Course</option>\n                                        {courses &&\n                                            courses.map((item, index) => (\n                                                <option value={item.id} key={index}>\n                                                    {\" \"}\n                                                    {item.name}{\" \"}\n                                                </option>\n                                            ))}\n                                    </select>\n                                </div>\n\n                                <Line\n                                    data={isDarkMode ? state : state2}\n                                    width={100}\n                                    height={200}\n                                    options={{\n                                        responsive: true,\n                                        maintainAspectRatio: true,\n                                        aspectRatio: 3,\n                                        onResize: null,\n                                        resizeDelay: 0\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/free-test\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-clipboard-check\" />\n                                    </span>\n                                    <br />\n                                    Test\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/reports\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-chart-pie\" />\n                                    </span>\n                                    <br />\n                                    Reports\n                                </Link>\n                            </div>\n                        </div>\n                        {/* <div className=\"col-md-3\">\n                            <div className=\"dashboad-page-inner\">\n                                <Link className=\"dash-panel\" to=\"#\">\n                                <span className=\"dash-icon-round\">\n                                    <i className=\"fas fa-list\" />\n                                </span>\n                                <br />\n                                Questions\n                                </Link>\n                            </div>\n                        </div> */}\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/subscription\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-users-cog\" />\n                                    </span>\n                                    <br />\n                                    Subscription\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/search-feedback\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-search\" />\n                                    </span>\n                                    <br />\n                                    Search/Feedback Question\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/faq\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"far fa-question-circle\" />\n                                    </span>\n                                    <br />\n                                    FAQ\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/my-account\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-user\" />\n                                    </span>\n                                    <br />\n                                    My Account\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/eshop\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-shopping-cart\" />\n                                    </span>\n                                    <br />\n                                    Eshop\n                                </Link>\n                            </div>\n                        </div>\n                        {/* <div className=\"col-md-3\">\n                            <div className=\"dashboad-page-inner\">\n                                <Link className=\"dash-panel\" to=\"#\">\n                                <span className=\"dash-icon-round\">\n                                    <i className=\"fas fa-envelope\" />\n                                </span>\n                                <br />\n                                Messages\n                                </Link>\n                            </div>\n                        </div> */}\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/blog\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-wifi\" />\n                                    </span>\n                                    <br />\n                                    News\n                                </Link>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/forum\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-comments\" />\n                                    </span>\n                                    <br />\n                                    Forum\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/teachersubscription\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-users-cog\" />\n                                    </span>\n                                    <br />\n                                    Subscribe Teachers/Parent\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/lmsexam\">\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-book-reader\" />\n                                    </span>\n                                    <br />\n                                    Lms Exam\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/support\" >\n                                    <span className=\"dash-icon-round\">\n                                        <i className=\"fas fa-sms\" />\n                                    </span>\n                                    <br />\n                                    Support\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/downloadApp\" >\n                                    <span className=\"dash-icon-round\">\n                                    <i class=\"fas fa-solid fa-layer-group\"></i>\n                                    </span>\n                                    <br />\n                                    App\n                                </Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                                <Link className=\"dash-panel\" to=\"/user/resources\" >\n                                    <span className=\"dash-icon-round\">\n                                    <i class=\"fas fa-solid fa-clone\"></i>\n                                    </span>\n                                    <br />\n                                    Resources\n                                </Link>\n                            </div>\n                        </div>\n                        {\n                            (isRole.affiliate_role == 5 || isRole.affiliate_role == 6) ?\n                                <>\n\n                                </>\n                                :\n                                <div className=\"col-md-3\">\n                                    <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`} onClick={getaffiliaterequest}>\n                                        <a className=\"dash-panel\" href=\"#\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                // setSaveWarning(true);\n                                            }}\n                                        >\n                                            <span className=\"dash-icon-round\">\n                                                <i className=\"fas fa-link\" />\n                                            </span>\n                                            <br />\n                                            Affiliate Join\n                                        </a>\n                                    </div>\n                                </div>\n                        }\n                    </div>\n                </div>\n            </section>\n\n\n\n\n            <Modal\n                isOpen={goAffiliat}\n                //onRequestClose={() => setTestWarning(false)}\n                style={customStyles}\n                contentLabel=\"Finish test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n                                <p>Affilicate Warning</p>\n                                <img src=\"assets/images/warning.png\" alt=\"\" />\n                                <p>Are you want to a affiliate member?</p>\n                                <div className=\"row\">\n                                    {/* {saveLoader && <Spinner />} */}\n                                    <button\n                                        href=\"#\"\n                                        onClick={handleGoAffiliat}\n                                    >\n                                        Yes\n                                    </button>\n                                    <button\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setGoAffiliat(false);\n                                        }}\n                                    >\n                                        No\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n\n            <Footer />\n        </>\n    );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  <div id=\"notfound\">\n    <div className=\"notfound\">\n      <div className=\"notfound-404\">\n        <h1>404</h1>\n        <h2>Page not found</h2>\n      </div>\n      <Link to=\"/\">Homepage</Link>\n    </div>\n  </div>\n);\n\nexport default NotFound;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { toast } from \"react-toastify\";\nimport { LOGIN, REGISTER, EDIT_PROFILE } from \"../Api\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, profile } from \"../../features/userSlice\";\nimport Spinner from \"../spinner/Spinner\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\n\nconst EditProfile = ({ show, closePop }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [loader, setLoader] = useState(false);\n    const [updateForm, setUpdateForm] = useState({\n        firstName: \"\",\n        user_id: \"\",\n        lastName: \"\",\n        phoneno: \"\",\n    });\n\n    var user_data = JSON.parse(Cookies.get(\"user_data\"));\n\n    const setProfile = () => {\n        updateForm.user_id = user_data.id\n        updateForm.firstName = user_data.first_name\n        updateForm.lastName = user_data.last_name\n        updateForm.phoneno = user_data.phoneno\n    }\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n    Modal.setAppElement(\"#root\");\n\n    const handleEditChange = (e) => {\n        setUpdateForm({\n            ...updateForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n\n    // User register\n    const updateProfile = async (e) => {\n        e.preventDefault();\n        if (user_data.firstName == \"\") {\n            toast.error(\"Please enter your first name\");\n            return false;\n        }\n        if (user_data.lastName == \"\") {\n            toast.error(\"Please enter your last name\");\n            return false;\n        }\n        if (user_data.phoneno == \"\") {\n            toast.error(\"Please enter your phone number\");\n            return false;\n        } else {\n            // if (!user_data.phoneno.match(\"[0-9]{9,15}\")) {\n            //   console.log(user_data.phoneno,\"registerForm.phoneno\")\n            //   toast.error(\"Please enter valid phone number\");\n            //   return false;\n            // }\n        }\n\n\n        const config = {\n            headers: {\n                Authorization: Cookies.get(\"token\"),\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\",\n            }\n        }\n        const bodyParameters = new FormData();\n        bodyParameters.append(\"user_id\", \"\" + updateForm.user_id);\n        bodyParameters.append(\"first_name\", \"\" + updateForm.firstName);\n        bodyParameters.append(\"last_name\", \"\" + updateForm.lastName);\n        bodyParameters.append(\"phoneno\", \"\" + updateForm.phoneno);\n\n        try {\n            setLoader(true);\n            const {\n                data: { message, status, data },\n            } = await axios.post(EDIT_PROFILE, bodyParameters, config);\n            if (status == 200) {\n\n                var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                Cookies.set(\"user_data\", JSON.stringify(data), expiryObject);\n                dispatch(profile({ profile: data }));\n\n                setLoader(false);\n                toast.success(message);\n                handleClose();\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (err) {\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            }\n            setLoader(false);\n        }\n    };\n\n\n    //Handle close popup modal\n    const handleClose = () => {\n        closePop(false);\n    };\n\n    useEffect(() => {\n        setProfile();\n    }, [])\n\n\n\n\n    return (\n        <>\n            <Modal\n                isOpen={show}\n                onRequestClose={handleClose}\n                style={customStyles}\n                contentLabel=\"Login Modal\"\n                className=\"register-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={true}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        {/* <div className=\"modal-header\">\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={handleClose}\n            >\n              <span aria-hidden=\"true\">×</span>\n            </button>\n          </div> */}\n                        <div className=\"modal-body\">\n                            <div className=\"login-deatils\">\n                                <ul className=\"nav nav-tabs\">\n                                    <li className=\"active\">\n                                        <a className=\"active\">\n                                            Edit profile\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div >\n                                <div>\n                                    <div className=\"sign-tab-detail\">\n                                        <form method=\"post\" encType='multipart/form-data'>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <input\n                                                            type=\"text\"\n                                                            placeholder=\"First Name\"\n                                                            name=\"firstName\"\n                                                            value={updateForm.firstName}\n                                                            onChange={handleEditChange}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <input\n                                                            type=\"text\"\n                                                            placeholder=\"Last Name\"\n                                                            name=\"lastName\"\n                                                            value={updateForm.lastName}\n                                                            onChange={handleEditChange}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Phone Number\"\n                                                    minLength={10}\n                                                    maxLength={15}\n                                                    name=\"phoneno\"\n                                                    value={updateForm.phoneno}\n                                                    onChange={handleEditChange}\n                                                />\n                                            </div>\n                                            {/* <div className=\"form-group\">\n                      <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={updateForm.password}\n                        onChange={handleEditChange}\n                      />\n                    </div> */}\n\n                                            {/* <input\n                        type=\"file\"\n                        id=\"profile_photo\"\n                        name=\"profile_photo\"\n                        onChange={handleEditChange}\n                        className=\"form-group\"\n                        accept=\".png, .jpg, .jpeg, .PNG, .JPG, .JPEG\"\n                      /> */}\n\n                                            <div className=\"form-group\">\n                                                <button\n                                                    value=\"UPDATE\"\n                                                    onClick={updateProfile}\n                                                    disabled={loader}\n                                                >\n                                                    UPDATE{\" \"}{loader && \"...\"}\n                                                    {loader && <Spinner />}\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditProfile;\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport EditProfile from '../../components/modals/edit'\nimport Footer from '../../components/Footer'\nimport Header from '../../components/Header'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { profile, userProfile } from '../../features/userSlice'\nimport Cookies from 'js-cookie'\nimport Spinner from '../../components/spinner/Spinner'\nimport { toast } from 'react-toastify'\nimport { EDIT_PROFILE, GET_RESET_GRAPH } from '../../components/Api'\nimport Modal from 'react-modal'\nimport { global } from '../../components/Config'\nimport axios from 'axios'\nimport { returnImageType } from '../../components/CommonFunction'\nimport { ThemeContext } from '../../ThemeContaxt/ThemeContaxt'\n\nconst MyProfile = () => {\n  const userData = useSelector(userProfile).user.profile\n  const dispatch = useDispatch()\n\n  const [open, setOpen] = useState(false)\n  const [deleteModal, setDeleteModal] = useState(false)\n  const [password, setPassword] = useState(\"\")\n  const [loader, setLoader] = useState(false)\n  const [resetGrapth, setResetGrapth] = useState(false)\n  const config = {\n    headers: {\n      Authorization: Cookies.get('token'),\n      Accept: 'application/json',\n      'Content-Type': 'multipart/form-data'\n    }\n  }\n\n  const config2 = {\n    headers: {\n      Authorization: Cookies.get('token')\n    }\n  }\n  // const userData = JSON.parse(Cookies.get(\"user_data\"));\n  const [updatePassword, setUpdatePassword] = useState({\n    password: '',\n    confirmPassword: ''\n  })\n\n  const handleCloseModal = () => {\n    setOpen(false)\n  }\n\n  const handleEditChange = e => {\n    setUpdatePassword({\n      ...updatePassword,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // handlePasswordChange\n  const handlePasswordChange = async e => {\n    e.preventDefault()\n    if (updatePassword.password == '') {\n      toast.error('Please enter your password')\n      return false\n    }\n    if (updatePassword.confirmPassword == '') {\n      toast.error('Please enter your confirm password')\n      return false\n    } else {\n      if (updatePassword.password != updatePassword.confirmPassword) {\n        toast.error(\"Passwords don't match.\")\n        return false\n      }\n    }\n    try {\n      const bodyParameters = {\n        user_id: !!userData && userData.id,\n        first_name: !!userData && userData.first_name,\n        last_name: !!userData && userData.last_name,\n        password: updatePassword.password\n      }\n      setLoader(true)\n      const {\n        data: { message, status }\n      } = await axios.post(EDIT_PROFILE, bodyParameters, config)\n      if (status == 200) {\n        setLoader(false)\n        toast.success(message)\n        setUpdatePassword({\n          password: '',\n          confirmPassword: ''\n        })\n      } else {\n        setLoader(false)\n        toast.error('Something went wrong, please try again..!')\n        //        toast.error(error_description);\n      }\n    } catch (err) {\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description)\n      }\n      setLoader(false)\n    }\n  }\n\n  // Onchange proile image\n  const uploadProfile = async e => {\n    try {\n      setLoader(true)\n      const body = new FormData()\n      body.append('user_id', '' + !!userData && userData.id)\n      body.append('first_name', '' + !!userData && userData.first_name)\n      body.append('last_name', '' + !!userData && userData.last_name)\n      body.append('phoneno', '' + !!userData && userData.phoneno)\n      body.append('image', e.target.files[0])\n\n      const {\n        data: { status, data, message }\n      } = await axios.post(EDIT_PROFILE, body, config)\n      if (status == 200) {\n        var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000)\n        let expiryObject = {\n          expires: inTwoMinutes\n        }\n        Cookies.set('user_data', JSON.stringify(data), expiryObject)\n        dispatch(profile({ profile: data }))\n\n        setLoader(false)\n        toast.success(message)\n      } else {\n        setLoader(false)\n        toast.error(message)\n      }\n    } catch (err) {\n      console.log(err)\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description)\n      } else {\n        toast.error('Something went wrong, please try again..!')\n      }\n      setLoader(false)\n    }\n  }\n\n  // reset button action\n  const handleResetGraph = async () => {\n    try {\n      setLoader(true)\n      setResetGrapth(true)\n    } catch (error) {\n      setLoader(false)\n      console.log(error)\n    }\n  }\n\n  const handleConfirmReset = async () => {\n    try {\n      setLoader(true)\n      var user_data = JSON.parse(Cookies.get('user_data'))\n      const body = {\n        userId: user_data.id\n      }\n      const {\n        data: { status, data }\n      } = await axios.post(GET_RESET_GRAPH, body, config2)\n      //console.log(status)\n      if (status == 200) {\n        console.log('test')\n        setLoader(false)\n        setResetGrapth(false)\n        window.location.reload()\n      }\n    } catch (error) {\n      setLoader(false)\n      console.log(error)\n    }\n  }\n\n  const handleDeleteProfile = async () => {\n    // try {\n    setLoader(true)\n    var user_data = JSON.parse(Cookies.get('user_data'))\n    const body = {\n      userId: user_data.id,\n      password : \"password\",\n    }\n    // console.log(body)\n    const {\n      data: { status, data }\n    } = await axios.post(\n      `https://www.examtice.com/backend/api/delete_profile?userId=${body.userId}&password=${password}`,\n      body,\n      config\n    )\n    // console.log(data)\n    \n    if (data?.success) {\n      window.location(\"https://www.examtice.com/\")\n    } \n    // } catch (error) {\n    //   setLoader(false)\n    //   console.log(error)\n    // }\n  }\n\n//   console.log(password)\n\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'rgba(0,0,0,0.4)',\n      zIndex: '9999',\n      overflowY: 'auto'\n    }\n  }\n\n  const { isDarkMode } = useContext(ThemeContext)\n\n  return (\n    <>\n      <Header />\n\n      <section className='free-testing-sec'>\n        <div className='container'>\n          <div\n            className={`pagination ${\n              isDarkMode ? 'text_color_light' : 'text_color_dark'\n            }`}\n          >\n            <span>\n              <Link to='/user/dashboard'>\n                <i className='fas fa-chevron-left' />\n                My Account\n              </Link>\n            </span>\n          </div>\n          <div className='main-body'>\n            <div className='row gutters-sm'>\n              <div className='col-md-4 mb-3'>\n                <div className='card'>\n                  <div className='card-body'>\n                    <div className='d-flex flex-column align-items-center text-center profile-img'>\n                      <img\n                        src={\n                          !!userData?.image\n                            ? returnImageType(userData?.image)\n                            : 'assets/images/no-profile.png'\n                        }\n                        alt='Admin'\n                        className='rounded-circle'\n                        width={150}\n                      />\n                      {loader && <Spinner />}\n                      <div className='file btn btn-lg btn-primary'>\n                        Change Photo\n                        <input\n                          type='file'\n                          name='file'\n                          accept='image/*'\n                          onChange={uploadProfile}\n                        />\n                      </div>\n\n                      <div className='mt-3 my_acount'>\n                        <h4>\n                          {!!userData && userData.first_name}{' '}\n                          {!!userData && userData.last_name}\n                        </h4>\n                        <p className='text-secondary mb-1'>\n                          {!!userData && userData.email}\n                        </p>\n                        <button\n                          onClick={handleResetGraph}\n                          className='btn btn-danger btn-md mt-3'\n                        >\n                          Reset Profile\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='col-md-8'>\n                <div className='card mb-3'>\n                  <div className='card-body'>\n                    <div className='tabbable-line'>\n                      <ul className='nav nav-tabs'>\n                        <li>\n                          <a\n                            href='#tab_default_1'\n                            data-toggle='tab'\n                            className='active'\n                          >\n                            User Detail{' '}\n                          </a>\n                        </li>\n                        <li>\n                          <a href='#tab_default_2' data-toggle='tab'>\n                            Change password{' '}\n                          </a>\n                        </li>\n                      </ul>\n                      <div className='tab-content'>\n                        <div className='tab-pane active' id='tab_default_1'>\n                          <div className='row'>\n                            <div className='col-sm-3'>\n                              <h5 className='mb-0 my_acount'>Full Name</h5>\n                            </div>\n                            <div className='col-sm-9 text-secondary'>\n                              {!!userData && userData.first_name}{' '}\n                              {!!userData && userData.last_name}\n                            </div>\n                          </div>\n                          <hr />\n                          <div className='row'>\n                            <div className='col-sm-3'>\n                              <h5 className='mb-0 my_acount'>Email</h5>\n                            </div>\n                            <div className='col-sm-9 text-secondary'>\n                              {!!userData && userData.email}\n                            </div>\n                          </div>\n                          <hr />\n                          <div className='row'>\n                            <div className='col-sm-3'>\n                              <h5 className='mb-0 my_acount'>Phone</h5>\n                            </div>\n                            <div className='col-sm-9 text-secondary'>\n                              {!!userData && userData.phoneno}\n                            </div>\n                          </div>\n                          <hr />\n                          <div className='d-flex' style={{ gap: '40px' }}>\n                            <div className='row'>\n                              <div className='col-sm-12'>\n                                <Link\n                                  className='common-btn'\n                                  to='#'\n                                  onClick={() => setOpen(true)}\n                                >\n                                  Edit\n                                </Link>\n                              </div>\n                            </div>\n                            {/* <div className='row'>\n                              <div className='col-sm-12'>\n                                <Link\n                                  className='common-btn'\n                                  to='#'\n                                  onClick={() => setDeleteModal(true)}\n                                >\n                                  Delete\n                                </Link>\n                              </div>\n                            </div> */}\n                          </div>\n                        </div>\n                        <div className='tab-pane text-dark' id='tab_default_2'>\n                          <h4> Change password </h4>\n                          <div className='sign-tab-detail col-12'>\n                            <form action='#'>\n                              <div className='form-group'>\n                                <input\n                                  type='password'\n                                  placeholder='Password'\n                                  name='password'\n                                  value={updatePassword.password}\n                                  onChange={handleEditChange}\n                                />\n                              </div>\n                              <div className='form-group'>\n                                <input\n                                  type='password'\n                                  placeholder='Confim password'\n                                  name='confirmPassword'\n                                  value={updatePassword.confirmPassword}\n                                  onChange={handleEditChange}\n                                />\n                              </div>\n\n                              <div className='form-group'>\n                                {loader && <Spinner />}\n                                <button\n                                  type='submit'\n                                  className='common-btn'\n                                  onClick={handlePasswordChange}\n                                >\n                                  Change password\n                                  {loader && '...'}\n                                </button>\n                              </div>\n                            </form>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <EditProfile show={open} closePop={handleCloseModal} />\n      </section>\n\n      <Modal\n        isOpen={resetGrapth}\n        //onRequestClose={() => setTestWarning(false)}\n        style={customStyles}\n        contentLabel='Finish test modal'\n        className='logout-modals'\n        id='exampleModalLong'\n        shouldReturnFocusAfterClose={false}\n      >\n        <div className='modal-dialog' role='document'>\n          <div className='modal-content'>\n            <div className='modal-body'>\n              <div className='payment-sucess'>\n                <p>Reset Warning</p>\n                <img src='assets/images/warning.png' alt='' />\n                <p>Are you sure you want to reset your profile?</p>\n                <div className='row'>\n                  {/* {saveLoader && <Spinner />} */}\n                  <button href='#' onClick={handleConfirmReset}>\n                    Yes\n                  </button>\n                  <button\n                    href='#'\n                    onClick={e => {\n                      e.preventDefault()\n                      setLoader(false)\n                      setResetGrapth(false)\n                    }}\n                  >\n                    No\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      {/* delete modal  */}\n      <Modal\n        isOpen={deleteModal}\n        //onRequestClose={() => setTestWarning(false)}\n        style={customStyles}\n        contentLabel='Finish test modal'\n        className='logout-modals'\n        id='exampleModalLong'\n        shouldReturnFocusAfterClose={false}\n      >\n        <div className='modal-dialog' role='document'>\n          <div className='modal-content'>\n            <div className='modal-body'>\n              <div className='payment-sucess'>\n                {/* <p>Delete</p> */}\n                <img src='assets/images/warning.png' alt='' />\n                <p>Are you sure you want to delete your profile?</p>\n                <form\n                  className='mb-3 mx-auto text-center'\n                  onChange={(e) => setPassword(e.target.value)}\n                  style={{ margin: 'auto' }}\n                >\n                  <input\n                    type='password'\n                    placeholder='Enter you password'\n                    className=' w-75'\n                  />\n                </form>\n                <div className='row'>\n                  {/* {saveLoader && <Spinner />} */}\n                  <button href='#' onClick={handleDeleteProfile}>\n                    Delete\n                  </button>\n                  <button\n                    href='#'\n                    onClick={e => {\n                      e.preventDefault()\n                      setLoader(false)\n                      setDeleteModal(false)\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <Footer />\n    </>\n  )\n}\n\nexport default MyProfile\n","\n\n// import React, { useState } from 'react';\n\n// const Pagination = ({ postsPerpage, totalPosts, paginate, currentPage, setCurrentPage }) => {\n//     const [pageGroup, setPageGroup] = useState(0); // Keeps track of the current group of pages\n//     const nPage = Math.ceil(totalPosts / postsPerpage);\n//     const maxPageNumbersToShow = 10;\n\n//     // Calculate the range of page numbers to display based on the current pageGroup\n//     const startPage = pageGroup * maxPageNumbersToShow + 1;\n//     const endPage = Math.min(startPage + maxPageNumbersToShow - 1, nPage);\n//     const pageNumbers = [];\n\n//     for (let i = startPage; i <= endPage; i++) {\n//         pageNumbers.push(i);\n//     }\n\n//     const prePage = () => {\n//         if (currentPage > 1) {\n//             setCurrentPage(currentPage - 1);\n//         }\n//         if (currentPage === startPage && pageGroup > 0) {\n//             setPageGroup(pageGroup - 1); // Move to the previous group of pages when reaching the start of the current group\n//         }\n//     };\n\n//     const nextPage = () => {\n//         if (currentPage < nPage) {\n//             setCurrentPage(currentPage + 1);\n//         }\n//         if (currentPage === endPage && endPage < nPage) {\n//             setPageGroup(pageGroup + 1); // Move to the next group of pages when reaching the end of the current group\n//         }\n//     };\n\n//     return (\n//         <nav>\n//             <ul className='pagination pagination-gap'>\n//                 {/* Previous Button */}\n//                 {currentPage > 1 && (\n//                     <li className='page-item'>\n//                         <a className='page-link' onClick={prePage}>\n//                             Prev\n//                         </a>\n//                     </li>\n//                 )}\n\n//                 {/* Page Numbers */}\n//                 {pageNumbers.map((number) => (\n//                     <li\n//                         key={number}\n//                         className={`page-item ${currentPage === number ? 'active' : ''}`}\n//                     >\n//                         <a onClick={() => paginate(number)} className='page-link'>\n//                             {number}\n//                         </a>\n//                     </li>\n//                 ))}\n\n//                 {/* Next Button */}\n//                 {currentPage < nPage && endPage < nPage && (\n//                     <li className='page-item'>\n//                         <a className='page-link' onClick={nextPage}>\n//                             Next\n//                         </a>\n//                     </li>\n//                 )}\n//             </ul>\n//         </nav>\n//     );\n// };\n\n// export default Pagination;\n\n\n\nimport React, { useState, useEffect } from 'react';\n\nconst Pagination = ({ postsPerpage, totalPosts, paginate, currentPage, setCurrentPage }) => {\n    const [pageGroup, setPageGroup] = useState(0);\n    const [maxPageNumbersToShow, setMaxPageNumbersToShow] = useState(10); // default for larger screens\n    const nPage = Math.ceil(totalPosts / postsPerpage);\n\n    // Adjust the number of pages shown based on screen width\n    useEffect(() => {\n        const handleResize = () => {\n            setMaxPageNumbersToShow(window.innerWidth <= 768 ? 5 : 10);\n        };\n\n        // Initial setting and event listener for window resize\n        handleResize();\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    const startPage = pageGroup * maxPageNumbersToShow + 1;\n    const endPage = Math.min(startPage + maxPageNumbersToShow - 1, nPage);\n    const pageNumbers = [];\n\n    for (let i = startPage; i <= endPage; i++) {\n        pageNumbers.push(i);\n    }\n\n    const prePage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n        if (currentPage === startPage && pageGroup > 0) {\n            setPageGroup(pageGroup - 1);\n        }\n    };\n\n    const nextPage = () => {\n        if (currentPage < nPage) {\n            setCurrentPage(currentPage + 1);\n        }\n        if (currentPage === endPage && endPage < nPage) {\n            setPageGroup(pageGroup + 1);\n        }\n    };\n\n    return (\n        <nav>\n            <ul className='pagination pagination-gap'>\n                {currentPage > 1 && (\n                    <li className='page-item'>\n                        <a className='page-link' onClick={prePage}>\n                            Prev\n                        </a>\n                    </li>\n                )}\n\n                {pageNumbers.map((number) => (\n                    <li\n                        key={number}\n                        className={`page-item ${currentPage === number ? 'active' : ''}`}\n                    >\n                        <a onClick={() => paginate(number)} className='page-link'>\n                            {number}\n                        </a>\n                    </li>\n                ))}\n\n                {currentPage < nPage && endPage < nPage && (\n                    <li className='page-item'>\n                        <a className='page-link' onClick={nextPage}>\n                            Next\n                        </a>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Pagination;\n\n","// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Footer from \"../../components/Footer\";\n// import Header from \"../../components/Header\";\n// import axios from \"axios\";\n// import { toast } from \"react-toastify\";\n// import { GET_REPORTS } from \"../../components/Api\";\n// import { getTestDate } from \"../../components/CommonFunction\";\n// import Spinner from \"../../components/spinner/Spinner\";\n// import Cookies from \"js-cookie\";\n// import { useContext } from \"react\";\n// import { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n// import Pagination from \"../../Pagination/Pagination\";\n\n// const MyReports = () => {\n//   //const userData = JSON.parse(useSelector(userProfile).user.user);\n//   const [loader, setLoader] = useState(false);\n//   const [report, setReports] = useState([]);\n//   const [postsPerPage, setPostsPerPage] = useState(2);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const config = {\n//     headers: {\n//       Authorization: Cookies.get(\"token\"),\n//     },\n//   };\n\n//   useEffect(() => {\n//     getReports();\n//   }, []);\n\n//   const getReports = async () => {\n//     try {\n//       setLoader(true);\n//       var user_data = JSON.parse(Cookies.get(\"user_data\"));\n//       const body = {\n//         userId: user_data.id,\n//       };\n//       const {\n//         data: { message, status, data },\n//       } = await axios.post(GET_REPORTS, body, config);\n//       if (status === 200) {\n//         setLoader(false);\n//         setReports(data);\n//         console.log(data.userReport)\n//       } else {\n//         setLoader(false);\n//         toast.error(\"Something went wrong, please try again.!\");\n//       }\n//     } catch (error) {\n//       setLoader(false);\n//       toast.error(\"Something went wrong, please try again.!\");\n//     }\n//   };\n\n//   //get refresh token\n//   // const getRefreshToken = () => {\n\n//   // }\n\n//   //get current posts\n//   const indexOfLastPost = currentPage * postsPerPage;\n//   const indexOfFirstPost = indexOfLastPost - postsPerPage\n//   const currentPosts = report?.slice(indexOfFirstPost, indexOfLastPost)\n\n//   //change page\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n//   const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n\n//   return (\n//     <>\n//       <Header />\n\n//       <section className=\"free-testing-sec\">\n//         <div className=\"container\">\n//           <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n//             <span>\n//               <Link to=\"/user/dashboard\" >\n//                 <i className=\"fas fa-chevron-left\" />\n//                 Reports\n//               </Link>\n//             </span>\n//           </div>\n\n//           {loader ? (\n//             <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n//               <Spinner />\n//             </div>\n//           ) : (\n//             <>\n//               <div className=\"report-menu\">\n//                 <div className=\"category free-testing-tabs\">\n//                   <ul>\n//                     <li>\n//                       <p>{report.userReport?.length}</p>\n//                       Tests taken\n//                     </li>\n//                     <li>\n//                       <p>{report.totalQues}</p>\n//                       Questions seen\n//                     </li>\n//                     <li>\n//                       <p>{report.totalTime}</p>\n//                       Time spent\n//                     </li>\n//                   </ul>\n//                 </div>\n//               </div>\n//               <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n//                 <thead>\n//                   <tr>\n//                     <th scope=\"col\">S.no</th>\n//                     <th scope=\"col\">Course Name</th>\n//                     <th scope=\"col\">Subject Name</th>\n//                     <th scope=\"col\">Date</th>\n//                     <th scope=\"col\">Time spent</th>\n//                     <th scope=\"col\">Score</th>\n//                     <th scope=\"col\" style={{ width: \"10%\" }}>\n//                       View report\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {/* {report.userReport?.length ? (\n//                     report.userReport?.map((item, index) => ( */}\n//                   {currentPosts.userReport?.length ? (\n//                     currentPosts.userReport?.map((item, index) => (\n//                       <tr key={index}>\n//                         <th scope=\"row\">{index + 1}</th>\n//                         <td>{item.course_name}</td>\n//                         <td>{item.subject_name}</td>\n//                         <td>{getTestDate(item.created_at)}</td>\n//                         <td>{item.time_spent}</td>\n//                         <td>\n//                           <div className=\"report-grade-right\">\n//                             <span>\n//                               {Math.floor(\n//                                 (item.totaCorrectOption /\n//                                   item.total_questions) *\n//                                   100\n//                               )}\n//                               %\n//                             </span>\n//                           </div>\n//                         </td>\n//                         <td>\n//                           <Link to={\"/user/report/\" + item.test_id}>View</Link>\n//                         </td>\n//                       </tr>\n//                     ))\n//                   ) : (\n//                     <tr>\n//                       <td colSpan={5}>No data found..!</td>\n//                     </tr>\n//                   )}\n//                 </tbody>\n//               </table>\n//             </>\n//           )}\n//           <Pagination postsPerpage={postsPerPage} totalPosts={report.length} paginate={paginate} setCurrentPage={setCurrentPage} currentPage={currentPage}></Pagination>\n//         </div>\n//       </section>\n\n//       <Footer />\n//     </>\n//   );\n// };\n\n// export default MyReports;\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { GET_REPORTS } from \"../../components/Api\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport Cookies from \"js-cookie\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\nimport Pagination from \"../../Pagination/Pagination\";\n\nconst MyReports = () => {\n  const [loader, setLoader] = useState(false);\n  const [reports, setReports] = useState({}); // Default to an object\n  const [postsPerPage, setPostsPerPage] = useState(25);\n  const [currentPage, setCurrentPage] = useState(1);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getReports();\n  }, []);\n\n  const getReports = async () => {\n    try {\n      setLoader(true);\n      const user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(GET_REPORTS, body, config);\n      if (status === 200) {\n        setLoader(false);\n        setReports(data || {}); // Store the object directly or an empty object if not present\n      } else {\n        setLoader(false);\n        toast.error(\"Something went wrong, please try again!\");\n      }\n    } catch (error) {\n      setLoader(false);\n      toast.error(\"Something went wrong, please try again!\");\n    }\n  };\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  \n  // Ensure `reports.userReport` is defined before using `slice`\n  const currentPosts = reports.userReport ? reports.userReport.slice(indexOfFirstPost, indexOfLastPost) : [];\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const { isDarkMode } = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n            <span>\n              <Link to=\"/user/dashboard\">\n                <i className=\"fas fa-chevron-left\" />\n                Reports\n              </Link>\n            </span>\n          </div>\n\n          {loader ? (\n            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n              <Spinner />\n            </div>\n          ) : (\n            <>\n              <div className=\"report-menu\">\n                <div className=\"category free-testing-tabs\">\n                  <ul>\n                    <li>\n                      <p>{reports.userReport?.length || 0}</p> {/* Updated */}\n                      Tests taken\n                    </li>\n                    <li>\n                      <p>{reports.totalQues || 0}</p> {/* Adjust as needed */}\n                      Questions seen\n                    </li>\n                    <li>\n                      <p>{reports.totalTime || 0}</p> {/* Adjust as needed */}\n                      Time spent\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">S.no</th>\n                    <th scope=\"col\">Course Name</th>\n                    <th scope=\"col\">Subject Name</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Time spent</th>\n                    <th scope=\"col\">Score</th>\n                    <th scope=\"col\" style={{ width: \"10%\" }}>View report</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {currentPosts.length ? (\n                    currentPosts.map((item, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1 + indexOfFirstPost}</th>\n                        <td>{item.course_name}</td>\n                        <td>{item.subject_name}</td>\n                        <td>{getTestDate(item.created_at)}</td>\n                        <td>{item.time_spent}</td>\n                        <td>\n                          <div className=\"report-grade-right\">\n                            <span>\n                              {Math.floor((item.totaCorrectOption / item.total_questions) * 100)}%\n                            </span>\n                          </div>\n                        </td>\n                        <td>\n                          <Link to={`/user/report/${item.test_id}`}>View</Link>\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={7}>No data found..!</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </>\n          )}\n          <Pagination\n            postsPerpage={postsPerPage}\n            totalPosts={reports.userReport ? reports.userReport.length : 0}\n            paginate={paginate}\n            setCurrentPage={setCurrentPage}\n            currentPage={currentPage}\n          />\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n};\n\nexport default MyReports;\n\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { VERIFY_USER } from \"../../../components/Api\";\n\nconst Verify = () => {\n  const history = useHistory();\n  const { id, token } = useParams();\n\n  useEffect(() => {\n    verifyUser();\n  }, []);\n\n  //   Verify user\n  const verifyUser = async () => {\n    try {\n        const {\n            data: { message, status },\n          } = await axios.get(VERIFY_USER + \"/\" + id + \"/\" + token);\n       if (status == 200) {\n          toast.success(message);\n          history.push(\"/\");\n       }\n    } catch (error) {\n        if(error.response.data.status == 422){\n            toast.error(error.response.data.message);\n        }else{\n            toast.error(\"Something went wrong, please try again.!\");\n        }\n        history.push(\"/\");\n    }\n  };\n\n  return <></>;\n};\nexport default Verify;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { PAYMENT_VERIFY, VERIFY_USER } from \"../../../components/Api\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./callbackCss.css\";\nimport Cookies from \"js-cookie\";\n\nconst Callback = () => {\n  const history = useHistory();\n  const { id, token } = useParams();\n  const search = useLocation().search;\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    verifyTransaction();\n    const id = new URLSearchParams(search).get(\"reference\");\n    console.log(id); //12345\n  }, []);\n\n  //   Verify user Transaction\n  const verifyTransaction = async () => {\n    try {\n      const body = {\n        reference: new URLSearchParams(search).get(\"reference\"),\n        planId: localStorage.getItem(\"planId\"),\n      };\n      const {\n        data: { message, status },\n      } = await axios.post(PAYMENT_VERIFY, body, config);\n      if (status == 200) {\n        toast.success(message);\n        history.push(\"/user/subscription\");\n        localStorage.removeItem(\"planId\");\n      } else {\n        toast.error(message);\n        history.push(\"/user/dashboard\");\n        localStorage.removeItem(\"planId\");\n      }\n    } catch (error) {\n      if (error?.response?.data?.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n      history.push(\"/user/dashboard\");\n      localStorage.removeItem(\"planId\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"load\">\n        <div className=\"alert_msg\">\n          <span>Processing... please wait!</span>\n          <p>[Please do not refresh and do not press back button.]</p>\n        </div>\n        <div className=\"preloader-js-container\">\n          <div className=\"shadow\" />\n          <div className=\"preloader-js\">\n            <div />\n            <div />\n            <div />\n            <div />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Callback;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MY_SUBSCRIPTION } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst Subscription = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [subscription, setSubscription] = useState([]);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscription();\n  }, []);\n\n  //   Verify user\n  const getSubscription = async () => {\n    try {\n      setLoader(true);\n      const {\n        data: { message, status, data },\n      } = await axios.get(MY_SUBSCRIPTION, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n            <span>\n              <Link to=\"/user/dashboard\">\n                <i className=\"fas fa-chevron-left\" />\n                Subscription\n              </Link>\n            </span>\n          </div>\n\n          <div className=\"row savedTest\">\n            {loader ? (\n              <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                {/* <div className=\"report-menu\">\n                <div className=\"category free-testing-tabs\">\n                  <ul>\n                    <li>\n                      <p>{report.userReport?.length}</p>\n                      Tests taken\n                    </li>\n                    <li>\n                      <p>{report.totalQues}</p>\n                      Questions seen\n                    </li>\n                    <li>\n                      <p>{report.totalTime}</p>\n                      Time spent\n                    </li>\n                  </ul>\n                </div>\n              </div> */}\n                <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">S.no</th>\n                      <th scope=\"col\">Plan</th>\n                      <th scope=\"col\">Amount</th>\n                      <th scope=\"col\">Subscribed on</th>\n                      <th scope=\"col\">Expired on</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\" style={{ width: \"10%\" }}>\n                        View report\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {subscription.length ? (\n                      subscription.map((item, index) => (\n                        <tr key={index}>\n                          <th scope=\"row\">{index + 1}</th>\n                          <th scope=\"row\"> {item.plan_name}</th>\n                          <td>\n                            ₦ {item.plan_amount} /{\" \"}\n                            {item.plan_interval == 1 && \"Anually\"}{\" \"}\n                          </td>\n                          <td>{getTestDate(item.created_at)}</td>\n                          <td>{getTestDate(item.next_subscription_date)}</td>\n                          <td>\n                            {item.is_active == 1 ? (\n                              <span className=\"badge-success badge mr-2\">\n                                Active\n                              </span>\n                            ) : (\n                              <span className=\"badge-danger badge mr-2\">\n                                Inactive\n                              </span>\n                            )}\n                          </td>\n                          <td>\n                            <Link to={\"/user/subscription/\" + item.id}>\n                              <span>\n                                View <i className=\"fas fa-chevron-right\"></i>\n                              </span>\n                            </Link>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={5}>No subscription found..!</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default Subscription;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  MY_SUBSCRIPTION_DETAIL,\n  CANCEL_SUBSCRIPTION,\n} from \"../../components/Api\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Cookies from \"js-cookie\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport Accordion from \"../../components/accordion\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst SubscriptionDetail = () => {\n  const history = useHistory();\n  const { subscriptionId } = useParams();\n  const [loader, setLoader] = useState(false);\n  const [buttonLoader, setButtonLoader] = useState(false);\n  const [subscriptionData, setSubscriptionData] = useState([]);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionDetail();\n  }, []);\n\n  //  MY_SUBSCRIPTION_DETAIL\n  const getSubscriptionDetail = async () => {\n    try {\n      setLoader(true);\n      const {\n        data: { status, data },\n      } = await axios.get(\n        MY_SUBSCRIPTION_DETAIL + \"/\" + subscriptionId,\n        config\n      );\n      if (status == 200) {\n        setSubscriptionData(data);\n        setLoader(false);\n      }\n    } catch (error) {\n      if (error?.response?.data?.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n        history.push(\"/user/subscription\");\n      }\n      setLoader(false);\n    }\n  };\n\n  //handleCancelSubscription\n  const handleCancelSubscription = async (e) => {\n    e.preventDefault();\n    try {\n      setButtonLoader(true);\n      const body = {\n        subscribeId: subscriptionId,\n        token: subscriptionData.email_token,\n        code: subscriptionData.subscription_code,\n      };\n      const {\n        data: { status, data, message },\n      } = await axios.post(CANCEL_SUBSCRIPTION, body, config);\n      if (status == 200) {\n        toast.success(message);\n        setButtonLoader(false);\n        history.push(\"/user/subscription\");\n      } else {\n        toast.error(message);\n        setButtonLoader(false);\n      }\n    } catch (error) {\n      if (error?.response?.data?.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n      setButtonLoader(false);\n      //history.push(\"/\");\n    }\n  };\n\n  const { isDarkMode } = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination\">\n            <span>\n              <Link to=\"/user/subscription\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                <i className=\"fas fa-chevron-left\" />\n                Back\n              </Link>\n            </span>\n          </div>\n\n          <div className=\"card mb-3\">\n            <div className=\"row m-3\">\n              {loader ? (\n                <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                  <Spinner />\n                </div>\n              ) : (\n                <>\n                  <div className=\"col-md-6 col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-body py-3 main_forum_container_body\">\n                        <div className=\"row no-gutters align-items-center\">\n                          <div className=\"col text-dark\">\n                            <h5>Course Detail</h5>\n                            <div className=\"subscription-detail-row\">\n                              <div className=\"col-6\">Course name</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {subscriptionData?.course?.name}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"subscription-detail-row\">\n                              <div className=\"col-6\">Subjects</div>\n                            </div>\n                            <div className=\"subscription-detail-row\">\n                              <div className=\"col-12\">\n                                <div className=\"accordion\">\n                                  {subscriptionData?.subjects?.length ? (\n                                    // subscriptionData.subjects.map(\n                                    //   (subject, key) => (\n                                    <Accordion\n                                      subjects={subscriptionData?.subjects}\n                                    />\n                                  ) : (\n                                    // )\n                                    //)\n                                    <p>No subjects found..!</p>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6 col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-body py-3 main_forum_container_body\">\n                        <div className=\"row no-gutters align-items-center\">\n                          <div className=\"col text-dark\">\n                            <h5>Subscription</h5>\n\n                            <div className=\"subscription-detail-row\">\n                              <div className=\"col-6\">Plan</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {subscriptionData.plan_name}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"subscription-detail-row\">\n                              <div className=\"col-6\">Subscription Code</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {subscriptionData.subscription_code}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"subscription-detail-row\">\n                              <div className=\"col-6\">Amount</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {subscriptionData.plan_amount}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"subscription-detail-row \">\n                              <div className=\"col-6\">Interval</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {subscriptionData.plan_interval == 1\n                                    ? \"Annually\"\n                                    : \"\"}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"subscription-detail-row \">\n                              <div className=\"col-6\">Subscribed On</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {getTestDate(subscriptionData.created_at)}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"subscription-detail-row \">\n                              <div className=\"col-6\">Next Charge Date</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {subscriptionData.next_subscription_date &&\n                                    getTestDate(\n                                      subscriptionData.next_subscription_date\n                                    )}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"subscription-detail-row \">\n                              <div className=\"col-6\">Status</div>\n                              <div className=\"col-6\">\n                                <span className=\"v2-text-bold\">\n                                  {subscriptionData.is_active ? (\n                                    <h5>\n                                      <span class=\"badge-success badge mr-2\">\n                                        Active\n                                      </span>\n                                    </h5>\n                                  ) : (\n                                    <h5>\n                                      <span class=\"badge-danger badge mr-2\">\n                                        Inactive\n                                      </span>\n                                    </h5>\n                                  )}\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {subscriptionData.is_active == 1 && (\n                    <div className=\"col-md-12\">\n                      <div className=\"text-center mt-4 mb-4\">\n                        <button\n                          className=\"common-btn cancel_subscription\"\n                          onClick={handleCancelSubscription}\n                          disabled={buttonLoader}\n                        >\n                          {buttonLoader && <Spinner />}\n                          {/* <span className=\"text-bold text-14px ng-binding\"> */}\n                          Cancel Subscription\n                          {/* </span> */}\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n};\nexport default SubscriptionDetail;\n","import React, { useContext, useEffect, useState } from 'react'\n//import { Link, useHistory } from \"react-router-dom\";\nimport Header from '../components/Header'\nimport { Link, useHistory } from 'react-router-dom'\nimport Footer from '../components/Footer'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\nimport { GET_LATEST_BLOGS } from '../components/Api'\nimport { removeTags } from '../components/CommonFunction'\nimport { global } from '../components/Config'\nimport Spinner from '../components/spinner/Spinner'\nimport DarkAndLightMode from '../DarkAndLightMode/DarkAndLightMode'\nimport Pagination from '../Pagination/Pagination'\nimport { ThemeContext } from '../ThemeContaxt/ThemeContaxt'\nimport { useSelector } from 'react-redux'\nimport { userAuth } from '../features/userSlice'\n\nconst Blog = () => {\n  const [blogs, setBlogs] = useState([])\n  const [data, setData] = useState([])\n  const isAuth = useSelector(userAuth) //using redux useSelector here\n  const [loader, setLoader] = useState(false)\n  const [posts, setPosts] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage, setPostsPerPage] = useState(5)\n\n  const config = {\n    headers: {\n      'Access-Control-Allow-Origin': '*'\n    }\n  }\n\n  //paniganition with 5 posts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoader(true)\n      const res = await axios.get(GET_LATEST_BLOGS)\n      setPosts(res.data.data)\n      setLoader(false)\n    }\n\n    fetchPosts()\n  }, [])\n\n  //get current posts\n  const indexOfLastPost = currentPage * postsPerPage\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n  //change page\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  // console.log(currentPosts)\n\n  //Get courses on page load\n  const getBlogs = async () => {\n    try {\n      setLoader(true)\n      const {\n        data: { data, status }\n      } = await axios.get(GET_LATEST_BLOGS)\n      if (status == 200) {\n        setLoader(false)\n        setBlogs(data)\n      }\n    } catch (err) {\n      setLoader(false)\n      toast.error('Something went wrong please try again..!')\n    }\n  }\n\n  const formatUpdateDate = date => {\n    const formattedDate = new Date(date)\n    return `${formattedDate.getFullYear()}-${(formattedDate.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')}-${formattedDate.getDate().toString().padStart(2, '0')}`\n  }\n\n  useEffect(() => {\n    getBlogs()\n  }, [])\n\n  const autoReload = () => {\n    // Reload the current page\n    window.location.reload()\n  }\n\n  console.log(currentPosts)\n\n  const { isDarkMode } = useContext(ThemeContext)\n\n  return (\n    <>\n      {/* <DarkAndLightMode></DarkAndLightMode> */}\n      <Header />\n      <section className='blog-page-main block-element'>\n        <div className='container'>\n          <div className='pagination'>\n            <span\n              onClick={autoReload}\n              className={`${\n                isDarkMode ? 'text_color_light' : 'text_color_dark'\n              }`}\n            >\n              <Link to={isAuth ? '/user/dashboard' : '/'}>\n                <i className='fas fa-chevron-left' />\n                Back\n              </Link>\n            </span>\n          </div>\n\n          <div className='row'>\n            {loader ? (\n              <div className='spinner_div' style={{ minHeight: '400px' }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                <div className='col-md-9'>\n                  <div className='blog-content'>\n                    {currentPosts.length > 0 ? (\n                      currentPosts.map((item, i) => (\n                        <div className='blog-content-inner' key={i}>\n                          <Link to={`/blog/${item.slug}`} id={item.slug}>\n                            {item?.image === \"\" ? (\n                              item?.video ? (\n                                <video\n                                  src={\n                                    `${global.API_HOST}assets/images/blogs/` +\n                                    item.video\n                                  }\n                                  controls\n                                  className='w-100'\n                                ></video>\n                              ) : (\n                                // item?.video_url\n                                <iframe width=\"100%\" height=\"600\" src={item?.video_url} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n                              )\n                            ) : (\n                              <img\n                                src={\n                                  `${global.API_HOST}assets/images/blogs/` +\n                                  item.image\n                                }\n                                alt=''\n                              />\n                            )}\n                            {/* {item?.image !== '' ? (\n                              <img\n                                src={\n                                  `${global.API_HOST}assets/images/blogs/` +\n                                  item.image\n                                }\n                                alt=''\n                              />\n                            ) : (\n                              \"\"\n                            )} */}\n                            <span\n                              className={`${\n                                isDarkMode\n                                  ? 'blog-date-dark'\n                                  : 'blog-date-light'\n                              }`}\n                            >\n                              Last Update on {formatUpdateDate(item.updated_at)}\n                            </span>\n                            <span>{item.title}</span>\n                          </Link>\n                          <div className='content'>\n                            <p>\n                              {removeTags(item.description).length > 300\n                                ? removeTags(item.description).substring(\n                                    0,\n                                    300\n                                  ) + '...'\n                                : removeTags(item.description)}\n                            </p>\n                          </div>\n                          <Link\n                            className='common-btn'\n                            to={`/blog/${item.slug}`}\n                            id={item.slug}\n                          >\n                            Read More\n                          </Link>\n                        </div>\n                      ))\n                    ) : (\n                      <p>No Blog found..!</p>\n                    )}\n                  </div>\n                </div>\n                <div className='col-md-3 col-12'>\n                  <div className='blog-content-list'>\n                    <div className='recen-post'>\n                      {' '}\n                      <span>Recent Posts</span>\n                      <ul>\n                        {currentPosts.length > 0 ? (\n                          currentPosts.map((item, i) => (\n                            <li key={i}>\n                              {' '}\n                              <Link\n                                className=''\n                                to={`/blog/${item.slug}`}\n                                id={item.slug}\n                              >\n                                {item.title}\n                              </Link>\n                            </li>\n                          ))\n                        ) : (\n                          <p>No Recent Post found..!</p>\n                        )}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n          <Pagination\n            postsPerpage={postsPerPage}\n            totalPosts={posts.length}\n            paginate={paginate}\n            setCurrentPage={setCurrentPage}\n            currentPage={currentPage}\n          ></Pagination>\n        </div>\n      </section>\n\n      <Footer />\n      {/* < ToastContainer /> */}\n    </>\n  )\n}\n\nexport default Blog\n","import React, { useEffect, useState } from 'react'\n//import { Link, useHistory } from \"react-router-dom\";\nimport Header from '../components/Header'\nimport { useParams } from 'react-router-dom'\nimport { Link, useHistory } from 'react-router-dom'\nimport Footer from '../components/Footer'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\nimport { GET_LATEST_BLOGS, GET_SINGLE_BLOG } from '../components/Api'\nimport { global } from '../components/Config'\nimport Spinner from '../components/spinner/Spinner'\nimport { useContext } from 'react'\nimport { ThemeContext } from '../ThemeContaxt/ThemeContaxt'\nimport { useSelector } from 'react-redux'\nimport { userAuth } from '../features/userSlice'\n\nconst BlogSingle = () => {\n  const [singleBlog, setBlogPost] = useState([])\n  const [blogs, setBlogs] = useState([])\n  const { slug } = useParams()\n  const [loader, setLoader] = useState(false)\n  const isAuth = useSelector(userAuth) //using redux useSelector here\n  const history = useHistory()\n\n  const config = {\n    headers: {\n      'Access-Control-Allow-Origin': '*'\n    }\n  }\n\n  const body = {\n    slug: slug\n  }\n\n  //Get courses on page load\n  const getSingleBlog = async () => {\n    try {\n      setLoader(true)\n\n      const {\n        data: { data, status, message }\n      } = await axios.post(GET_SINGLE_BLOG, body)\n      if (status == 200) {\n        setLoader(false)\n        setBlogPost(data)\n      } else {\n        toast.error(message)\n        history.push('/blog')\n      }\n    } catch (err) {\n      setLoader(false)\n\n      toast.error('Something went wrong please try again..!')\n    }\n  }\n\n  //Get courses on page load\n  const getBlogs = async () => {\n    try {\n      const {\n        data: { data, status }\n      } = await axios.get(GET_LATEST_BLOGS)\n      if (status === 200) {\n        data && setBlogs(data)\n      }\n    } catch (err) {\n      toast.error('Something went wrong please try again..!')\n    }\n  }\n\n  function blogDescription (text) {\n    return <div dangerouslySetInnerHTML={{ __html: text }} />\n  }\n\n  const formatUpdateDate = date => {\n    const formattedDate = new Date(date)\n    return `${formattedDate.getFullYear()}-${(formattedDate.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')}-${formattedDate.getDate().toString().padStart(2, '0')}`\n  }\n\n  useEffect(() => {\n    getSingleBlog()\n    getBlogs()\n  }, [slug])\n\n  const { isDarkMode } = useContext(ThemeContext)\n\n  const autoReload = () => {\n    // Reload the current page\n    window.location.reload()\n  }\n\n  return (\n    <>\n      <Header />\n\n      <section className='blog-page-main block-element'>\n        <div className='container'>\n          <div className='pagination'>\n            <span\n              onClick={autoReload}\n              className={`${\n                isDarkMode ? 'text_color_light' : 'text_color_dark'\n              }`}\n            >\n              <Link to={isAuth ? '/blog' : '/blog'}>\n                <i className='fas fa-chevron-left' />\n                Back\n              </Link>\n            </span>\n          </div>\n\n          <div className='row'>\n            {loader ? (\n              <div className='spinner_div' style={{ minHeight: '400px' }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                <div className='col-md-9'>\n                  <div className='blog-content'>\n                    <div className='blog-content-inner'>\n                      {/* {singleBlog?.img === null ? (\n                        singleBlog?.video ? (\n                          <video\n                            src={\n                              `${global.API_HOST}assets/images/blogs/` +\n                              singleBlog.video\n                            }\n                            controls\n                            className='w-100'\n                          ></video>\n                        ) : (\n                          singleBlog?.video_url\n                        )\n                      ) : (\n                        <img\n                          src={\n                            `${global.API_HOST}assets/images/blogs/` +\n                            singleBlog.image\n                          }\n                          alt=''\n                        />\n                      )} */}\n                      {singleBlog?.image === '' ? (\n                        singleBlog?.video ? (\n                          <video\n                            src={\n                              `${global.API_HOST}assets/images/blogs/` +\n                              singleBlog.video\n                            }\n                            controls\n                            className='w-100'\n                          ></video>\n                        ) : (\n                          // item?.video_url\n                          <iframe\n                            width='100%'\n                            height='600'\n                            src={singleBlog?.video_url}\n                            title='YouTube video player'\n                            frameborder='0'\n                            allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'\n                            referrerpolicy='strict-origin-when-cross-origin'\n                            allowfullscreen\n                          ></iframe>\n                        )\n                      ) : (\n                        <img\n                          src={\n                            `${global.API_HOST}assets/images/blogs/` +\n                            singleBlog.image\n                          }\n                          alt=''\n                        />\n                      )}\n                      <span\n                        className={`${\n                          isDarkMode ? 'blog-date-dark' : 'blog-date-light'\n                        }`}\n                      >\n                        Last Update on {formatUpdateDate(singleBlog.updated_at)}\n                      </span>\n                      <span>{singleBlog.title}</span>\n                      <div className='content'>\n                        {blogDescription(singleBlog.description)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='col-md-3'>\n                  <div className='blog-content-list'>\n                    <div className='recen-post'>\n                      {' '}\n                      <span>Recent Posts</span>\n                      <ul>\n                        {blogs.length > 0 ? (\n                          blogs.slice(0, 6).map((item, i) => (\n                            <li key={i}>\n                              {' '}\n                              <Link\n                                className=''\n                                to={`/blog/${item.slug}`}\n                                id={item.slug}\n                              >\n                                {item.title}\n                              </Link>\n                            </li>\n                          ))\n                        ) : (\n                          <p>No Recent Post found..!</p>\n                        )}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n      {/* < ToastContainer /> */}\n    </>\n  )\n}\n\nexport default BlogSingle\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { GET_ALL_TOPIC } from \"../components/Api\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport { useSelector } from \"react-redux\";\nimport { userAuth } from \"../features/userSlice\";\nimport Signin from \"../components/modals/signin\";\n\nconst Forum = () => {\n    const [topic, setTopic] = useState([]);\n    const [loader, setLoader] = useState(false);\n\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    //Get courses on page load\n\n    //Get courses on page load\n    const getTopics = async () => {\n        try {\n            setLoader(true);\n\n            const {\n                data: { data, status },\n            } = await axios.get(GET_ALL_TOPIC);\n            if (status == 200) {\n                setLoader(false);\n                setTopic(data);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    useEffect(() => {\n        getTopics();\n    }, []);\n\n    console.log(topic)\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"blog-page-main block-element\">\n                <div className=\"container mt-100 main_forum_container\">\n                    <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                        <span>\n                            <Link to=\"/\">\n                                <i className=\"fas fa-chevron-left\" />\n                                Back\n                            </Link>\n                        </span>\n                    </div>\n                    <div className=\"d-flex flex-wrap \">\n\n                        <div className=\"col-md-2 p-0 mb-3\">\n                            <Link className=\"common-btn-md\" to={`/topic-create`}>\n                                <span className=\"btn-icon-wrapper pr-2 opacity-7\">\n                                    {\" \"}\n                                    <i className=\"fa fa-plus fa-w-20\" />{\" \"}\n                                </span>\n                                New thread\n                            </Link>\n                        </div>\n\n                        <div className=\"col-md-3 p-0 mb-3\">\n                            <Link className=\"common-btn-md\" to={`/my-topic`}>\n                                <span className=\"btn-icon-wrapper pr-2 opacity-7\">\n                                    {\" \"}\n                                    {/* <i className=\"fa fa-plus fa-w-20\" />{\" \"} */}\n                                </span>\n                                My Topice\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header pl-0 pr-0\">\n                            <div className=\"row no-gutters w-100 align-items-center\">\n                                <div className={`col ml-3 ${isDarkMode ? 'topics_dark' : 'topics_light'}`}>Topics</div>\n                                <div className=\"col-4 text-muted\">\n                                    <div className=\"row no-gutters align-items-center\">\n                                        <div className=\"col-6 col-md-4\">Replies</div>\n                                        <div className=\"col-6 col-md-8\">Last update</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {loader ? (\n                            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                                <Spinner />\n                            </div>\n                        ) : (\n                            <>\n                                {topic?.data?.length > 0 ? (\n                                    topic?.data?.map((item, i) => (\n                                        <>\n                                            <div\n                                                className=\"card-body py-3 main_forum_container_body\"\n                                                key={i}\n                                            >\n                                                <div className=\"row no-gutters align-items-center\">\n                                                    <div className=\"col\">\n                                                        <Link className=\"text-big\" to={`/forum/${item.id}`}>\n                                                            {item.topic_name}\n                                                        </Link>\n                                                        <div className=\"text-muted small mt-1\">\n                                                            <Moment fromNow>{item.created_at}</Moment>{\" \"}\n                                                            &nbsp;·&nbsp;{\" \"}\n                                                            <Link\n                                                                to=\"#\"\n                                                                onClick={(e) => e.preventDefault()}\n                                                                className=\"text-muted\"\n                                                                data-abc=\"true\"\n                                                            >\n                                                                {item.first_name}\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\" d-md-block col-4\">\n                                                        <div className=\"row no-gutters align-items-center\">\n                                                            <div className={`col-4 ${isDarkMode ? 'topics_light' : 'topics_dark'}`}>\n                                                                {item.comment == null ? 0 : item.comment}\n                                                            </div>\n                                                            <div className=\"media col-8 align-items-center\">\n                                                                <div className=\"media-body flex-truncate ml-2\">\n                                                                    <div className={`line-height-1 text-truncate ${isDarkMode ? 'topics_light' : 'topics_dark'}`}>\n                                                                        <Moment fromNow>{item.updated_at}</Moment>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <hr className=\"m-0\" />\n                                        </>\n                                    ))\n                                ) : (\n                                    <p>No Topic Post found..!</p>\n                                )}\n                            </>\n                        )}\n                    </div>\n                </div>\n            </section>\n\n            <Footer />\n        </>\n    );\n};\n\nexport default Forum;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport Modal from \"react-modal\";\n\nimport {\n    CHANGE_STATUS_TOPIC,\n    CREATE_TOPIC,\n    DELETE_TOPIC,\n    GET_SINGLE_ALL_TOPIC,\n} from \"../components/Api\";\nimport Cookies from \"js-cookie\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\n\nconst Topic = () => {\n    const [topic, setTopic] = useState([]);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const userData = JSON.parse(Cookies.get(\"user_data\"));\n    const [loader, setLoader] = useState(false);\n    const [getTopicLoader, setTopicLoader] = useState(false);\n    const [deleteWarning, setDeleteWarning] = useState(false);\n    const [delectItem, setDelectItem] = useState(null)\n\n    //const userData = useSelector(userProfile).user.profile; //Redux user data\n\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n\n    //Get courses on page load\n    const createTopic = async (e) => {\n        e.preventDefault();\n        if (title == \"\" || title == null) {\n            toast.error(\"Please enter forum title\");\n            return false;\n        }\n        if (description == \"\" || description == null) {\n            toast.error(\"Please enter forum description\");\n            return false;\n        }\n        const bodyParameters = {\n            topic_name: title,\n            topic_by: userData.id,\n            topic_description: description,\n        };\n\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(CREATE_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(\"posted successfully\");\n                setTitle(\"\");\n                setDescription(\"\");\n                getUserTopic();\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    const deleteTopic = async (topicid) => {\n        setDelectItem(topicid)\n        setDeleteWarning(true)\n    };\n\n    const handelConfirmDelect = async () => {\n\n        const bodyParameters = {\n            id: delectItem,\n            user_id: userData.id,\n        };\n\n        try {\n            const {\n                data: { data, status },\n            } = await axios.post(DELETE_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                toast.success(\"Deleted successfully\");\n                getUserTopic();\n                setDeleteWarning(false)\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    }\n\n    const changeStatus = async (topicid, status) => {\n        const bodyParameters = {\n            id: topicid,\n            user_id: userData.id,\n            status: status == 1 ? 0 : 1,\n        };\n\n        try {\n            const {\n                data: { data, status },\n            } = await axios.post(CHANGE_STATUS_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                toast.success(\"Status changed successfully\");\n                getUserTopic();\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    //Get courses on page load\n    const getUserTopic = async () => {\n        try {\n            const bodyParameters = {\n                id: userData.id,\n            };\n            setTopicLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(GET_SINGLE_ALL_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                setTopic(data);\n                setTopicLoader(false);\n            }\n        } catch (err) {\n            setTopicLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    useEffect(() => {\n        getUserTopic();\n    }, []);\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"blog-page-main block-element\">\n                <div className=\"container mt-100 main_forum_container\">\n                    <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                        <span>\n                            <Link to=\"/forum\">\n                                <i className=\"fas fa-chevron-left\" />\n                                Back\n                            </Link>\n                        </span>\n                    </div>\n                    {/* Create topic here */}\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header pl-0 pr-0\">\n                            <div className=\"row no-gutters w-100 align-items-center\">\n                                <div className={`col ml-3 text-center ${isDarkMode ? 'color_dark' : 'color_dark'}`}>Create Topics</div>\n                            </div>\n                        </div>\n                        <div className=\"card-body py-3\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col\">\n                                    <div className=\"row no-gutters align-items-center\">\n                                        <div className=\"col-md-12\">\n                                            <div className=\"contact-fom-left \">\n                                                <h2 className=\"page-heading\">Create Topic</h2>\n                                                <form method=\"post\">\n                                                    <div className=\"form-group\">\n                                                        <input\n                                                            type=\"text\"\n                                                            placeholder=\"Title\"\n                                                            name=\"Title\"\n                                                            value={title}\n                                                            onChange={(e) => setTitle(e.target.value)}\n                                                        />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <textarea\n                                                            placeholder=\"Description\"\n                                                            value={description}\n                                                            onChange={(e) => setDescription(e.target.value)}\n                                                        />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <button\n                                                            value=\"Create\"\n                                                            className=\"btn btn-md common-btn-md\"\n                                                            onClick={createTopic}\n                                                            disabled={loader}\n                                                        >\n                                                            Create Topic{loader && \"..!\"}\n                                                        </button>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <hr className=\"m-0\" />\n                    </div>\n\n                    {/* User Topic here  */}\n\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header pl-0 pr-0\">\n                            <div className=\"row no-gutters w-100 align-items-center\">\n                                <div className=\"col ml-3 color_dark\">Yours Topics</div>\n                                <div className=\"col-4 text-muted\">\n                                    <div className=\"row no-gutters align-items-center\">\n                                        <div className=\"col-4 color_dark\">Replies</div>\n                                        <div className=\"col-4 color_dark\">Last updated</div>\n                                        <div className=\"col-4 color_dark\">Action</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {getTopicLoader ? (\n                            <div className=\"spinner_div\">\n                                <Spinner />\n                            </div>\n                        ) : (\n                            <>\n                                {topic.length > 0 ? (\n                                    topic.map((item, i) => (\n                                        <>\n                                            <div\n                                                className=\"card-body py-3 main_forum_container_body color_dark\"\n                                                key={i}\n                                            >\n                                                <div\n                                                    className=\"row no-gutters align-items-center\"\n                                                    key={i}\n                                                >\n                                                    <div className=\"col\">\n                                                        {\" \"}\n                                                        <Link className=\"text-big\" to={`/forum/${item.id}`}>\n                                                            {item.topic_name}\n                                                        </Link>\n                                                        <div className=\"text-muted small mt-1\">\n                                                            <Moment fromNow>{item.created_at}</Moment>{\" \"}\n                                                            &nbsp;·&nbsp;{\" \"}\n                                                            <Link\n                                                                to=\"#\"\n                                                                onClick={(e) => e.preventDefault()}\n                                                                className=\"text-muted\"\n                                                                data-abc=\"true\"\n                                                            >\n                                                                {item.first_name}\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"d-none d-md-block col-4\">\n                                                        <div className=\"row no-gutters align-items-center\">\n                                                            <div className=\"col-4\">\n                                                                {item.comment == null ? 0 : item.comment}\n                                                            </div>\n                                                            <div className=\"media col-4 align-items-center\">\n                                                                <div className=\"media-body flex-truncate ml-2\">\n                                                                    <div className=\"line-height-1 text-truncate\">\n                                                                        <Moment fromNow>{item.updated_at}</Moment>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-4\">\n                                                                <button\n                                                                    className=\"btn btn-sm btn-danger mr-2\"\n                                                                    onClick={() => deleteTopic(item.id)}\n                                                                    title=\"Delete\"\n                                                                >\n                                                                    Delete\n                                                                </button>\n                                                                <button\n                                                                    className={`btn btn-sm ${item.status == 1\n                                                                        ? \"btn-success\"\n                                                                        : \"btn-warning\"\n                                                                        }`}\n                                                                    onClick={() =>\n                                                                        changeStatus(item.id, item.status)\n                                                                    }\n                                                                    title={\n                                                                        item.status == 1 ? \"InActive\" : \"Active\"\n                                                                    }\n                                                                >\n                                                                    {item.status == 1 ? \"Active\" : \"InActive\"}\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <hr className=\"m-0\" />\n                                        </>\n                                    ))\n                                ) : (\n                                    <p style={{color: \"#000\"}}>No Topic Post found..!</p>\n                                )}\n                            </>\n                        )}\n                    </div>\n                </div>\n\n\n                <Modal\n                    isOpen={deleteWarning}\n                    //onRequestClose={() => setTestWarning(false)}\n                    style={customStyles}\n                    contentLabel=\"Finish test modal\"\n                    className=\"logout-modals\"\n                    id=\"exampleModalLong\"\n                    shouldReturnFocusAfterClose={false}\n                >\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-body\">\n                                <div className=\"payment-sucess\">\n                                    <p>Are you sure you want to delect?</p>\n                                    <img src=\"assets/images/warning.png\" alt=\"\" />\n                                    {/* <p>You have number of questions unanswered, confirm you want to end test</p> */}\n                                    {/*<p>You still have {notAnswer} unanswered questions.</p>*/}\n                                    <div className=\"row\">\n                                        <a\n                                            href=\"#\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                handelConfirmDelect()\n                                            }}\n\n                                        // onClick={handelConfirmDelect}\n                                        >\n                                            Yes\n                                        </a>\n\n                                        <button\n                                            href=\"#\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                setDeleteWarning(false);\n                                            }}\n                                        >\n                                            No\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n\n            </section>\n\n            <Footer />\n            {/* < ToastContainer /> */}\n        </>\n    );\n};\n\nexport default Topic;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { userProfile } from \"../features/userSlice\";\nimport Footer from \"../components/Footer\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport { GET_SINGLE_TOPIC, POST_COMMENT_TOPIC } from \"../components/Api\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\n\nconst SingleTopic = () => {\n    const [allcomment, setComment] = useState([]);\n    const [description, setDescription] = useState(\"\");\n    const { forumId } = useParams();\n    const [loader, setLoader] = useState(false);\n    const [commentLoader, setCommentLoader] = useState(false);\n    const userData = useSelector(userProfile).user.profile; //Redux user data\n\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    //Get courses on page load\n    const postComment = async (e) => {\n        if (description == \"\" || description == null) {\n            toast.error(\"Please enter your comment\");\n            return false;\n        }\n        const bodyParameters = {\n            topic_id: forumId,\n            user_id: userData.id,\n            comment: description,\n        };\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(POST_COMMENT_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(\"posted successfully\");\n                setDescription(\"\");\n                getUserComment();\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    //Get courses on page load\n    const getUserComment = async () => {\n        try {\n            const bodyParameters = {\n                id: forumId,\n            };\n            setCommentLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(GET_SINGLE_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                setCommentLoader(false);\n                setComment(data);\n            }\n        } catch (err) {\n            setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    const stringConvert = (string) => {\n        return string.charAt(0).toUpperCase();\n    };\n\n    useEffect(() => {\n        getUserComment();\n    }, [forumId]);\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"blog-page-main block-element\">\n                <div className=\"container mt-100 main_forum_container\">\n                    {/* User Topic here  */}\n                    <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                        <span>\n                            <Link to=\"/forum\">\n                                <i className=\"fas fa-chevron-left\" />\n                                Back\n                            </Link>\n                        </span>\n                    </div>\n\n                    <div className={`card mb-3 ${isDarkMode ? 'singleForum_dark' : 'singleForum_light'} `}>\n                        <div className=\"card-header pl-0 pr-0\">\n                            <div className=\"row no-gutters w-100 align-items-center\">\n                                <div className={`col ml-3 font-weight-bold ${isDarkMode ? \"color_light\" : \"color_dark\"}`}>\n                                    {allcomment.topic_name}\n                                </div>\n                                <div className=\"col-12 text-muted\"></div>\n                            </div>\n                        </div>\n\n                        <div className=\"card-body py-3 main_forum_container_body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col-12\">\n                                    <p className={`${isDarkMode ? \"color_light\" : \"color_dark\"}`}>{allcomment.topic_description}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {commentLoader && (\n                    <div className=\"spinner_div\">\n                        <Spinner />\n                    </div>\n                )}\n\n                <div className=\"container mt-5\">\n                    <div className=\"row d-flex justify-content-center\">\n                        <div className=\"col-md-12\">\n                            <div className={`shadow p-3 bg-white rounded ${isDarkMode ? 'singleForum_dark' : 'singleForum_light'}`}>\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <div className=\"d-flex flex-row align-items-center\">\n                                        {\" \"}\n                                        <span className={`mr-1 fs-14 ${isDarkMode ? \"color_light\" : \"color_dark\"}`}>All comments</span>{\" \"}\n                                    </div>\n                                </div>\n\n                                {/* <div className=\"mt-3 d-flex flex-row\">\n                                    <div className=\"w-100 ml-2 comment-area\">\n                                        <textarea\n                                            placeholder=\"Message\"\n                                            className=\"form-control\"\n                                            value={description}\n                                            onChange={(e) => setDescription(e.target.value)}\n                                        />\n                                        <button\n                                            className=\"btn btn-secondary btn-block mt-2 post-btn\"\n                                            onClick={postComment}\n                                            disabled={loader}\n                                        >\n                                            Post{loader && \"...\"}\n                                        </button>{\" \"}\n                                    </div>\n                                </div> */}\n\n                                {allcomment.comments?.length > 0 ? (\n                                    allcomment.comments?.map((item, index) => (\n                                        <div className=\"d-flex flex-row mt-4\" key={index}>\n                                            {\" \"}\n                                            <span className=\"person\">\n                                                {stringConvert(item.first_name)}\n                                            </span>\n                                            <div className=\"ml-2 w-100\">\n                                                <div className=\"d-flex justify-content-between align-items-center\">\n                                                    <div className=\"d-flex flex-row align-items-center\">\n                                                        {\" \"}\n                                                        <span className=\"font-weight-bold name\">\n                                                            {item.first_name} <i className=\"fa fa-heart\" />\n                                                        </span>{\" \"}\n                                                        <span className=\"dots\" />{\" \"}\n                                                        <small className=\"text-muted time-text\">\n                                                            <Moment fromNow>{item.created_at}</Moment>{\" \"}\n                                                        </small>{\" \"}\n                                                    </div>\n                                                </div>\n                                                <p className=\"user-comment-text text-justify\">\n                                                    {item.comment}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    ))\n                                ) : (\n                                    <p className={`${isDarkMode ? \"color_light\" : \"color_dark\"}`}>No Comment Posted yet..!</p>\n                                )}\n\n                                <div className=\"mt-3 d-flex flex-row\">\n                                    <div className=\"w-100 ml-2 comment-area\">\n                                        <textarea\n                                            placeholder=\"Message\"\n                                            className=\"form-control\"\n                                            value={description}\n                                            onChange={(e) => setDescription(e.target.value)}\n                                        />\n                                        <button\n                                            className=\"btn btn-secondary btn-block mt-2 post-btn\"\n                                            onClick={postComment}\n                                            disabled={loader}\n                                        >\n                                            Post{loader && \"...\"}\n                                        </button>{\" \"}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <Footer />\n            {/* < ToastContainer /> */}\n        </>\n    );\n};\n\nexport default SingleTopic;\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport axios from \"axios\";\nimport {\n    FLAG_QUESTION,\n    UNFLAG_QUESTION,\n    BOOKMARK_QUESTION,\n    UNBOOKMARK_QUESTION,\n    GET_SAVED_TEST_QUESTIONS,\n    QUESTION_COMMENT,\n    SAVE_QUESTIONS,\n    SAVE_TIME,\n    SAVE_USER_TEST,\n} from \"../../components/Api\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuth, isTestStart } from \"../../features/userSlice\";\nimport QuestionCount from \"../../components/exam/questionsCount\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport { useParams } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport Comment from \"../../components/exam/Comment\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport { formatTime } from \"../../components/CommonFunction\";\nimport Statistics from \"../../components/exam/statistics\";\nimport { Helmet } from \"react-helmet\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst ResumeSavedTest = () => {\n    const { userTestId } = useParams();\n    const [loader, setLoader] = useState(false);\n    const history = useHistory();\n    const [questionsData, setQuestionsData] = useState([]);\n    const [finishWarning, setFinishWarning] = useState(false);\n    const [notAnswer, setNotAnswer] = useState(\"\");\n    const [cancelWarning, setCancelWarning] = useState(false);\n    const [saveLoader, setSaveLoader] = useState(false);\n    const [step, setStep] = useState(0);\n    const [comment, setComment] = useState(\"\");\n    const [commentLoader, setCommentLoader] = useState(false);\n    const [answerLoader, setAnswerLoader] = useState(false);\n    const [saveWarning, setSaveWarning] = useState(false);\n\n    const [flagWarning, setFlagWarning] = useState(false);\n    const [bookmarkWarning, setBookmarkWarning] = useState(false);\n    const [radioOption, setRadioValue] = useState(false);\n    const [radioInnerValue, setRadioInner] = useState(1);\n    const [selectedQuestionId, setQuestionId] = useState(null);\n    const [otherOption, setOtherOption] = useState(null);\n    const [isExam, setIsExam] = useState(false);\n\n    const dispatch = useDispatch();\n    var stopwatchOffset = new Date();\n    const [stopWatch, setStopWatch] = useState();\n\n    const { seconds, minutes, hours, start, pause, reset } = useStopwatch({\n        autoStart: false,\n        offsetTimestamp:\n            !!stopwatchOffset && stopwatchOffset ? stopwatchOffset : \"\",\n    });\n\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n\n    // console.log(questionsData)\n\n    const SetTime = () => {\n        var stopwatchOffset = new Date();\n        stopwatchOffset.setSeconds(stopwatchOffset.getSeconds() + stopWatch);\n        reset(stopwatchOffset, true);\n        start();\n    };\n\n    useEffect(() => {\n        getSavedTetQuestion();\n    }, [userTestId]);\n\n    useEffect(() => {\n        SetTime();\n    }, [stopWatch]);\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n    Modal.setAppElement(\"#root\");\n\n    // get saved test data based on testId\n    const getSavedTetQuestion = async () => {\n        if (userTestId == undefined) {\n            history.push(\"/user/free-test\");\n        }\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            setLoader(true);\n            const body = {\n                test_id: userTestId,\n            };\n            const {\n                data: { status, data },\n            } = await axios.post(GET_SAVED_TEST_QUESTIONS, body, config);\n            if (status == 200) {\n                setQuestionsData(data.questions);\n\n                var hms = data.time_spent; // your input string\n                var a = hms.split(\":\"); // split it at the colons\n                // minutes are worth 60 seconds. Hours are worth 60 minutes.\n                var seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\n                setStopWatch(seconds);\n                var index;\n                if (data.is_exam == 1) {\n                    setIsExam(true);\n                }\n                data.questions.some(function (x, i) {\n                    if (x.isAttempt == true) {\n                        index = i + 1;\n                    } else if (x.isAttempt != true) {\n                        index = i >= 0 ? 1 : i;\n                    } else {\n                        index = 1;\n                    }\n                    return index;\n                });\n\n                dispatch(isTestStart(true));\n                if (step !== data.questions.length) {\n                    setStep(step + index);\n                }\n                setLoader(false);\n            } else {\n                history.push(\"/user/free-test\");\n                toast.error(\"Something went wrong, please try again.!\");\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(\"Something went wrong, please try again.!\");\n        }\n    };\n\n    // Handle user answer\n    const handleAnswer = async (quesId, choosenAnswer) => {\n        var testId = userTestId;\n        if (testId == null) {\n            toast.error(\"Something went wrong, Kindly restart your test..!\");\n            return false;\n        }\n        const bodyParameter = {\n            testId: testId,\n            question_id: quesId,\n            choosen_option: choosenAnswer,\n        };\n        try {\n            const isAttemptQuestionState = questionsData.map((item) =>\n                item.id === quesId\n                    ? {\n                        ...item,\n                        isAttempt: true,\n                    }\n                    : item\n            );\n            setQuestionsData(isAttemptQuestionState);\n            setAnswerLoader(true);\n            const {\n                data: { result, status, error },\n            } = await axios.post(SAVE_QUESTIONS, bodyParameter);\n            if (status == 200) {\n                setAnswerLoader(false);\n                const updateQuestionState = questionsData.map((item) =>\n                    item.id === quesId\n                        ? {\n                            ...item,\n                            isAttempt: true,\n                            rightOption: result.rightOption,\n                            userOption: choosenAnswer,\n                            isCorrect: result.rightOption == choosenAnswer ? true : false,\n                        }\n                        : item\n                );\n                setQuestionsData(updateQuestionState);\n                if (isExam) {\n                    setTimeout(() => {\n                        if (step !== questionsData.length) {\n                            setStep(step + 1);\n                        }\n                    }, 500);\n                } else {\n                    if (choosenAnswer == result.rightOption) {\n                        setTimeout(() => {\n                            if (step !== questionsData.length) {\n                                setStep(step + 1);\n                            }\n                        }, 500);\n                    }\n                }\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setAnswerLoader(false);\n            console.log(err);\n        }\n    };\n\n    // Handle user cancel the test\n    const handleUserCancelTest = (e) => {\n        e.preventDefault();\n        dispatch(isTestStart(false));\n\n        setTimeout(() => {\n            history.push(\"/user/dashboard\");\n        }, 300);\n    };\n\n    //Get how many questions user not attempt\n    function getUserQuestionsNotAttempt() {\n        return questionsData.filter((item) => item?.isAttempt !== true).length;\n    }\n\n    //Get how many questions user attempt\n    function getUserQuestionsAttempt() {\n        return questionsData.filter((item) => item?.isAttempt == true).length;\n    }\n\n    // increment progeress bar count\n    const progressStatus = {\n        width:\n            Math.floor((getUserQuestionsAttempt() / questionsData.length) * 100) +\n            \"%\",\n    };\n\n    // handle jump to question\n    const handleJumpQuestion = (index) => {\n        setStep(index + 1);\n    };\n\n    // handleUserCommnet\n    const handleUserCommnet = async (e, questionId) => {\n        e.preventDefault();\n        if (comment == \"\") {\n            toast.error(\"Please write your comment\");\n            return false;\n        }\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: questionId,\n                comment: comment,\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(QUESTION_COMMENT, bodyParameters, config);\n            if (status == 200) {\n                var tempData = [...questionsData];\n                tempData.filter(\n                    (ques) => ques.id == questionId && ques.comments.unshift(data)\n                );\n                setQuestionsData(tempData);\n                setCommentLoader(false);\n                setComment(\"\");\n            }\n        } catch (err) {\n            console.log(err);\n            setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    //Save test spent time\n    const saveTestTime = async (time) => {\n        try {\n            setLoader(true);\n            var testId = userTestId;\n            const {\n                data: { status, message },\n            } = await axios.post(SAVE_TIME, { testId: testId, spentTime: time });\n            if (status == 200) {\n                setTimeout(() => {\n                    history.push(\"/user/report/\" + userTestId);\n                }, 200);\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setLoader(false);\n            console.log(err);\n        }\n    };\n\n    //If user cancel the test\n    const handleCancelTest = (e) => {\n        e.preventDefault();\n        setCancelWarning(true);\n    };\n\n    // change question comment state if user delete it\n    const handleCommentChange = useCallback((commentId, questionId) => {\n        const newState = [...questionsData];\n        let updatedComments = newState.map((item) => {\n            if (item.id == questionId) {\n                return {\n                    ...item,\n                    comments: item.comments.filter((comm) => comm.id != commentId),\n                };\n            }\n            return item;\n        });\n        setQuestionsData(updatedComments);\n    });\n\n    // Dispay time\n    const myTimer = () => {\n        return (\n            <div className=\"timer\">\n                <img src=\"assets/images/timer.png\" alt=\"\" />\n                <span>\n                    {formatTime(hours)} : {formatTime(minutes)} : {formatTime(seconds)}\n                </span>\n            </div>\n        );\n    };\n\n    //If user finish the test\n    const handleFinishTest = (e) => {\n        e.preventDefault();\n        var userNotAttempted = getUserQuestionsNotAttempt();\n        setNotAnswer(userNotAttempted);\n        var time = [hours, minutes, seconds];\n        if (userNotAttempted > 0) {\n            setFinishWarning(true);\n        } else {\n            saveTestTime(time.join(\":\"));\n            dispatch(isTestStart(false));\n        }\n    };\n\n    // save test\n    const handleUserSaveTest = async (e) => {\n        e.preventDefault();\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            setSaveLoader(true);\n            var testId = userTestId;\n            var time = [hours, minutes, seconds];\n            const {\n                data: { status, message },\n            } = await axios.post(\n                SAVE_USER_TEST,\n                { testId: testId, spentTime: time.join(\":\") },\n                config\n            );\n            if (status == 200) {\n                dispatch(isTestStart(false));\n                setSaveLoader(false);\n                setTimeout(() => {\n                    history.push(\"/user/dashboard\");\n                }, 200);\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong, please try again..!\");\n            setSaveLoader(false);\n            console.log(err);\n        }\n    };\n\n    // Radio option flag\n    const handlerRadio = (option) => {\n        setRadioInner(option);\n        !!option && option == 3 ? setRadioValue(true) : setRadioValue(false);\n\n    }\n\n    // Handle user flag the test\n    // const handleUserFlagTest = async (e) => {\n    //   e.preventDefault();\n\n    //   try {\n    //     //setCommentLoader(true);\n    //     const config = {\n    //       headers: {\n    //         Authorization: Cookies.get(\"token\"),\n    //       },\n    //     };\n    //     var userData = JSON.parse(Cookies.get(\"user_data\"));\n    //     var bodyParameters = {\n    //       user_id: userData.id,\n    //       question_id: selectedQuestionId,\n    //       flag_option: radioInnerValue,\n    //       flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n    //     };\n    //     const {\n    //       data: { data, status },\n    //     } = await axios.post(FLAG_QUESTION, bodyParameters, config);\n    //     if (status == 200) {\n\n    //       // Pushing element to the arrray of object with previous object \n    //       var tempData = questionsData.map((el) =>\n    //         el.id === selectedQuestionId ? {\n    //           ...el, isFlag: true\n    //         } : el\n    //       )\n    //       // Set the new array \n    //       setQuestionsData(tempData);\n    //       setFlagWarning(false);\n    //     }\n    //   } catch (err) {\n    //     console.log(err);\n    //     // setCommentLoader(false);\n    //     toast.error(\"Something went wrong please try again..!\");\n    //   }\n    // };\n\n    // const handleUserUnFlagTest = async (e, QuestionId) => {\n    //   e.preventDefault();\n\n    //   try {\n    //     //setCommentLoader(true);\n    //     const config = {\n    //       headers: {\n    //         Authorization: Cookies.get(\"token\"),\n    //       },\n    //     };\n    //     var userData = JSON.parse(Cookies.get(\"user_data\"));\n    //     var bodyParameters = {\n    //       user_id: userData.id,\n    //       question_id: QuestionId,\n    //       flag_option: radioInnerValue,\n    //       flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n    //     };\n    //     const {\n    //       data: { data, status, message },\n    //     } = await axios.post(UNFLAG_QUESTION, bodyParameters, config);\n    //     if (status == 200) {\n\n    //       // Pushing element to the arrray of object with previous object \n    //       var tempData = questionsData.map((el) =>\n    //         el.id === selectedQuestionId ? {\n    //           ...el, isFlag: false\n    //         } : el\n    //       )\n    //       // Set the new array \n    //       setQuestionsData(tempData);\n    //       setFlagWarning(false);\n    //       toast.success(message);\n    //     }\n    //   } catch (err) {\n    //     console.log(err);\n    //     // setCommentLoader(false);\n    //     toast.error(\"Something went wrong please try again..!\");\n    //   }\n    // };\n\n    // const handleFlag = (questionId) => {\n    //   setFlagWarning(true);\n    //   setQuestionId(questionId);\n    // };\n\n    const handleUserFlagTest = async (e) => {\n        e.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: selectedQuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(FLAG_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((el) =>\n                    el.id === selectedQuestionId ? {\n                        ...el, isFlag: true\n                    } : el\n                )\n                // Set the new array \n                setQuestionsData(tempData);\n                setFlagWarning(false);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n    const handleUserUnFlagTest = async (e, QuestionId) => {\n        e.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: QuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status, message },\n            } = await axios.post(UNFLAG_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((el) =>\n                    el.id === selectedQuestionId ? {\n                        ...el, isFlag: false\n                    } : el\n                )\n                // Set the new array \n                setQuestionsData(tempData);\n                setFlagWarning(false);\n                toast.success(message);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n\n    const handleFlag = (questionId) => {\n        setFlagWarning(true);\n        setQuestionId(questionId);\n    };\n\n\n    const handleUserBookmark = async (d) => {\n        d.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: selectedQuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(BOOKMARK_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((dl) =>\n                    dl.id === selectedQuestionId ? {\n                        ...dl, isBookMark: true\n                    } : dl\n                )\n                // console.log(isbookmark);\n                // Set the new array \n                setQuestionsData(tempData);\n                setBookmarkWarning(false);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n    const handleUserUnBookmark = async (d, QuestionId) => {\n        d.preventDefault();\n\n        try {\n            //setCommentLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            var userData = JSON.parse(Cookies.get(\"user_data\"));\n            var bodyParameters = {\n                user_id: userData.id,\n                question_id: QuestionId,\n                flag_option: radioInnerValue,\n                flag_option_text: !!radioInnerValue && radioInnerValue == 1 ? 'its Spam' : radioInnerValue == 2 ? 'Wrong Q/A' : otherOption\n            };\n            const {\n                data: { data, status, message },\n            } = await axios.post(UNBOOKMARK_QUESTION, bodyParameters, config);\n            if (status == 200) {\n\n                // Pushing element to the arrray of object with previous object \n                var tempData = questionsData.map((dl) =>\n                    dl.id === selectedQuestionId ? {\n                        ...dl, isBookMark: false\n                    } : dl\n                )\n                // Set the new array \n                setQuestionsData(tempData);\n                setBookmarkWarning(false);\n                toast.success(message);\n            }\n        } catch (err) {\n            console.log(err);\n            // setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n\n    const handleBookmark = (questionId) => {\n        setBookmarkWarning(true);\n        setQuestionId(questionId);\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n\n        <>\n\n\n            <Header />\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    <div className=\"pagination\">\n                        <span className={`${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                            <Link to={isAuth ? \"/user/dashboard\" : \"/\"} >\n                                <i className=\"fas fa-chevron-left\" />\n                                TEST SETTING\n                            </Link>\n                        </span>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row short-container\">\n                                {loader ? (\n                                    <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                                        <Spinner />\n                                    </div>\n                                ) : (\n                                    <>\n                                        <div className=\"col-md-9\">\n                                            {questionsData.map((item, index) => (\n                                                <div\n                                                    className={`free-test-tabing-left ${step && step == index + 1 ? \"active_qa\" : \"hide_qa\"\n                                                        } `}\n                                                    key={index}\n                                                >\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-4 quesnumber-box timer\">\n                                                            <h5>\n                                                                {step > 1 && (\n                                                                    <i\n                                                                        className=\"fas fa-chevron-left pointer\"\n                                                                        onClick={() => setStep(step - 1)}\n                                                                    />\n                                                                )}\n                                                                Q {index + 1} / {questionsData.length}{\" \"}{\" \"}\n                                                                {/* {isAuth && item.isFlag == false ? <i className=\"fas fa-flag fa-sm\" onClick={(e) => handleFlag(item.id)}></i> : isAuth && item.isFlag == true ? <i className=\"fas fa-flag fa-sm flaged-icon\" title=\"Already flagged this question\"></i> : ''} */}\n\n                                                                {isAuth && item.isBookMark == true && !isExam ? <i className=\"fas fa-bookmark fa-sm booked-icon question-bookmark-mobile-view\" onClick={(d) => handleUserUnBookmark(d, item.id)} title=\"Already Bookmark this question\"></i> : isAuth && !isExam ? <i className=\"fas fa-bookmark fa-sm question-bookmark-mobile-view\" onClick={(d) => handleBookmark(item.id)}></i> : ''}\n\n                                                                {isAuth && item.isFlag == true ? <i className=\"fas fa-flag fa-sm flaged-icon question-bookmark-mobile-view\" onClick={(e) => handleUserUnFlagTest(e, item.id)} title=\"Already flagged this question\"></i> : isAuth && item.isFlag == false ? <i className=\"fas fa-flag fa-sm question-bookmark-mobile-view\" onClick={(e) => handleFlag(item.id)}></i> : <i className=\"fas fa-flag fa-sm question-bookmark-mobile-view\" onClick={(e) => handleFlag(item.id)}></i>}\n                                                            </h5>\n                                                        </div>\n                                                        <div className=\"col-md-4 order-first order-md-last timer\">\n                                                            <button className=\"common-btn name-id-year\">\n                                                                {item.year}, {item.name}, Ref: {item.id}\n                                                            </button>\n                                                            <h5 id=\"right-arrow-withref\">\n                                                                {step !== questionsData.length && (\n                                                                    <i\n                                                                        className=\"fas fa-chevron-right pointer\"\n                                                                        onClick={() => setStep(step + 1)}\n                                                                    />\n                                                                )}\n                                                            </h5>\n                                                        </div>\n                                                        <div className=\"col-md-4 timerr-inner timer-box\">\n\n                                                            {myTimer()}\n                                                            <h5 id=\"right-arrow-withoutref\">\n                                                                {step !== questionsData.length && (\n                                                                    <i\n                                                                        className=\"fas fa-chevron-right pointer\"\n                                                                        onClick={() => setStep(step + 1)}\n                                                                    />\n                                                                )}\n                                                            </h5>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"free-test-tabing-left-bar\">\n                                                        <span style={progressStatus}></span>\n                                                    </div>\n                                                    <div className=\"tabing-inner-page\">\n                                                        <ul className=\"nav nav-pills\">\n                                                            <li className=\"active\">\n                                                                <a\n                                                                    className=\"active\"\n                                                                    data-toggle=\"pill\"\n                                                                    href={`#home_${index + 1}`}\n                                                                >\n                                                                    <i className=\"fas fa-play fa-sm\"></i>{\" \"}\n                                                                    Question\n                                                                </a>\n                                                            </li>\n                                                            <li>\n                                                                <a\n                                                                    data-toggle=\"pill\"\n                                                                    href={`#explanation_${index + 1}`}\n                                                                >\n\n                                                                    <i className=\"fas fa-newspaper fa-sm\"></i>{\" \"}\n                                                                    Explanation\n                                                                </a>\n                                                            </li>\n                                                            <li>\n                                                                <a\n                                                                    data-toggle=\"pill\"\n                                                                    href={`#statistics${index + 1}`}\n                                                                >\n                                                                    <i className=\"fas fa-chart-pie fa-sm\"></i>{\" \"}\n                                                                    Statistics\n                                                                </a>\n                                                            </li>\n                                                            <li style={{ position: \"relative\" }}>\n                                                                <a\n                                                                    data-toggle=\"pill\"\n                                                                    href={`#comment_${index + 1}`}\n                                                                >\n                                                                    <i className=\"fas fa-comments fa-sm\"></i>{\" \"}\n\n                                                                    {item.comments.length > 0 && (\n                                                                        <span className=\"commentCount\">\n                                                                            {\" \"}\n                                                                            {item.comments.length}\n                                                                        </span>\n                                                                    )}\n                                                                    Comments\n                                                                </a>\n                                                            </li>\n                                                            {/* <li>\n                                <a\n                                  data-toggle=\"pill\"\n                                  href={`#save_${index + 1}`}\n                                >\n                                  <i className=\"fas fa-sticky-note fa-sm\"></i>{\" \"}\n                                  Notes\n                                </a>\n                              </li> */}\n                                                        </ul>\n                                                        <div className=\"tab-content\">\n                                                            <div\n                                                                id={`home_${index + 1}`}\n                                                                className=\"tab-pane fade in active show\"\n                                                            >\n                                                                <Helmet>\n                                                                    <script\n                                                                        src=\"https://www.wiris.net/demo/plugins/app/WIRISplugins.js?viewer=image&async=true\"\n                                                                        type=\"text/javascript\"\n                                                                    />\n                                                                </Helmet>\n\n                                                                <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div>\n\n                                                                {/* <div className=\"post__content\" >\n                                   <MathJax.Provider>\n                                    <MathJax.Html html={item.question} style={{color:'#fff'}}/>\n                                  </MathJax.Provider> \n                                </div>*/}\n\n                                                                {answerLoader && <Spinner />}\n\n                                                                <ul>\n                                                                    <button\n                                                                        className={`${item.rightOption == 1\n                                                                            ? \"green\"\n                                                                            : item?.userOption !==\n                                                                                item.rightOption &&\n                                                                                item.userOption == 1\n                                                                                ? \"red\"\n                                                                                : \"\"\n                                                                            }`}\n                                                                        onClick={() => handleAnswer(item.id, 1)}\n                                                                        disabled={item.isAttempt}\n                                                                    >\n                                                                        <span>A</span>\n                                                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_1 }} />\n                                                                    </button>\n                                                                    <button\n                                                                        className={`${item.rightOption == 2\n                                                                            ? \"green\"\n                                                                            : item?.userOption !==\n                                                                                item.rightOption &&\n                                                                                item.userOption == 2\n                                                                                ? \"red\"\n                                                                                : \"\"\n                                                                            }`}\n                                                                        onClick={() => handleAnswer(item.id, 2)}\n                                                                        disabled={item.isAttempt}\n                                                                    >\n                                                                        <span>B</span>\n                                                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_2 }} />\n                                                                    </button>\n                                                                    <button\n                                                                        className={`${item.rightOption == 3\n                                                                            ? \"green\"\n                                                                            : item?.userOption !==\n                                                                                item.rightOption &&\n                                                                                item.userOption == 3\n                                                                                ? \"red\"\n                                                                                : \"\"\n                                                                            }`}\n                                                                        onClick={() => handleAnswer(item.id, 3)}\n                                                                        disabled={item.isAttempt}\n                                                                    >\n                                                                        <span>C</span>\n                                                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_3 }} />\n                                                                    </button>\n                                                                    <button\n                                                                        className={`${item.rightOption == 4\n                                                                            ? \"green\"\n                                                                            : item?.userOption !==\n                                                                                item.rightOption &&\n                                                                                item.userOption == 4\n                                                                                ? \"red\"\n                                                                                : \"\"\n                                                                            }`}\n                                                                        onClick={() => handleAnswer(item.id, 4)}\n                                                                        disabled={item.isAttempt}\n                                                                    >\n                                                                        <span>D</span>\n                                                                        <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_4 }} />\n                                                                    </button>\n                                                                </ul>\n                                                            </div>\n                                                            <div\n                                                                id={`explanation_${index + 1}`}\n                                                                className=\"tab-pane fade explanation\"\n                                                            >\n                                                                {/* <h3>Menu 1</h3> */}\n\n                                                                {item.explanation &&\n\n                                                                    <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.explanation }}></div>\n                                                                    //   <MathJax.Provider>\n                                                                    //   <MathJax.Html html={item.explanation} />\n                                                                    // </MathJax.Provider>\n\n                                                                }\n\n                                                            </div>\n                                                            <div\n                                                                id={`statistics${index + 1}`}\n                                                                className=\"tab-pane fade explanation\"\n                                                            >\n                                                                <p>\n                                                                    Statistics\n                                                                </p>\n                                                                <Statistics stats={item.statistics} />\n                                                            </div>\n                                                            <div\n                                                                id={`comment_${index + 1}`}\n                                                                className=\"tab-pane fade\"\n                                                            >\n                                                                <h3>User comments</h3>\n                                                                {item.comments.length && (\n                                                                    <Comment\n                                                                        comments={item.comments}\n                                                                        questionId={item.id}\n                                                                        commentChange={handleCommentChange}\n                                                                    />\n                                                                )}\n                                                                {isAuth && (\n                                                                    <form>\n                                                                        <div className=\"form-group\">\n                                                                            <textarea\n                                                                                placeholder=\"Comment\"\n                                                                                readOnly={!isAuth}\n                                                                                value={comment}\n                                                                                onChange={(e) =>\n                                                                                    setComment(e.target.value)\n                                                                                }\n                                                                            />\n                                                                        </div>\n                                                                        <div className=\"form-group\">\n                                                                            <button\n                                                                                onClick={(e) =>\n                                                                                    handleUserCommnet(e, item.id)\n                                                                                }\n                                                                                disabled={commentLoader}\n                                                                                style={{ cursor: \"pointer\" }}\n                                                                            >\n                                                                                Post comment\n                                                                            </button>\n                                                                        </div>\n                                                                    </form>\n                                                                )}\n                                                            </div>\n                                                            <div\n                                                                id={`save_${index + 1}`}\n                                                                className=\"tab-pane fade\"\n                                                            >\n                                                                <h3>\n                                                                    Your Personal Note{\" \"}\n                                                                    <span>(Not Visible to others)</span>\n                                                                </h3>\n                                                                <form>\n                                                                    <div className=\"form-group\">\n                                                                        <textarea\n                                                                            placeholder=\"Personal Note\"\n                                                                            readOnly\n                                                                        ></textarea>\n                                                                    </div>\n                                                                    <div className=\"form-group\">\n                                                                        <button\n                                                                            disabled\n                                                                            title={isAuth ? \"\" :\n                                                                                \"You have to login to save your own note for this question.\"\n                                                                            }\n                                                                        >\n                                                                            Save Note\n                                                                        </button>\n                                                                    </div>\n                                                                </form>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n\n                                        <div className=\"col-md-3\">\n                                            <div className={`${isDarkMode ? 'free-test-tabing-right_light_color' : 'free-test-tabing-right_dark_color'}`}>\n                                                <span>Test Details</span>\n                                                <div className={`cal-btn ${isDarkMode ? 'cal-btn cat_btn_light' : 'cal-btn cat_btn_dark'}`}>\n                                                    <a href=\"#\" onClick={handleCancelTest}>\n                                                        Cancel Test\n                                                    </a>\n                                                    <a href=\"#\" onClick={handleFinishTest}>\n                                                        Finish Test\n                                                    </a>\n                                                </div>\n\n                                                <div className=\"cal-btn\" style={{ marginBottom: '10px' }}>\n                                                    <a\n                                                        href=\"#\"\n                                                        onClick={(e) => {\n                                                            e.preventDefault();\n                                                            setSaveWarning(true);\n                                                        }}\n                                                    >\n                                                        Save test\n                                                    </a>\n                                                </div>\n\n                                                <QuestionCount\n                                                    questions={questionsData}\n                                                    jumpOnQuestion={handleJumpQuestion}\n                                                />\n\n                                            </div>\n                                        </div>\n                                    </>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* If user finish the test */}\n                <Modal\n                    isOpen={finishWarning}\n                    //onRequestClose={() => setTestWarning(false)}\n                    style={customStyles}\n                    contentLabel=\"Finish test modal\"\n                    className=\"logout-modals\"\n                    id=\"exampleModalLong\"\n                    shouldReturnFocusAfterClose={false}\n                >\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-body\">\n                                <div className=\"payment-sucess\">\n                                    <p>Incomplete test</p>\n                                    <img src=\"assets/images/warning.png\" alt=\"\" />\n                                    <p>You have to answer all questions to finish the test.</p>\n                                    <p>You still have {notAnswer} unanswered questions.</p>\n                                    <a\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setFinishWarning(false);\n                                        }}\n                                    >\n                                        ok\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n                {/* If user Flag Question */}\n                <Modal\n                    isOpen={flagWarning}\n                    //onRequestClose={() => setTestWarning(false)}\n                    style={customStyles}\n                    contentLabel=\"Finish test modal\"\n                    className=\"logout-modals\"\n                    id=\"exampleModalLong\"\n                    shouldReturnFocusAfterClose={false}\n                >\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-body\">\n                                <div className=\"payment-sucess\">\n\n                                    <div className=\"edit-profile-modal__inner\">\n                                        <h4 className=\"theme-txt text-center mb-4 text-dark\">Flag Question</h4>\n                                        <img src=\"assets/images/warning.png\" alt=\"\" />\n                                        <form>\n                                            <div className=\"choose-report\">\n                                                <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"first-option\" defaultValue=\"it's spam\" defaultChecked onClick={(e) => handlerRadio(1)} /><label htmlFor=\"first-option\" /><span className=\"ml-1\">It's a spam</span></div>\n                                                <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"second-option\" defaultValue=\"Wrong Q/A\" onClick={(e) => handlerRadio(2)} /><label htmlFor=\"second-option\" /><span className=\"ml-1\">Wrong Q/A</span></div>\n                                                <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"third-option\" defaultValue=\"Other\" onClick={(e) => handlerRadio(3)} /><label htmlFor=\"third-option\" /><span className=\"ml-1\">Other</span></div>\n                                                <div className=\"form-group\">\n                                                    {radioOption ? <input type=\"text\" className=\"form-control\" name=\"otherqa\" placeholder=\"Write here\" value={otherOption} onChange={(e) => setOtherOption(e.target.value)} /> : \"\"}\n                                                </div>\n\n                                            </div>\n\n                                        </form>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <a href=\"#\" onClick={(e) => handleUserFlagTest(e)}>\n                                            Yes\n                                        </a>\n                                        <a\n                                            href=\"#\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                setFlagWarning(false);\n                                                setRadioValue(false);\n                                                //blockRoutes();\n                                            }}\n                                        >\n                                            No\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n                {/* If user bookMark  */}\n                <Modal\n                    isOpen={bookmarkWarning}\n                    //onRequestClose={() => setTestWarning(false)}\n                    style={customStyles}\n                    contentLabel=\"Finish test modal\"\n                    className=\"logout-modals\"\n                    id=\"exampleModalLong\"\n                    shouldReturnFocusAfterClose={false}\n                >\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-body\">\n                                <div className=\"payment-sucess\">\n\n                                    <div className=\"edit-profile-modal__inner\">\n                                        <h4 className=\"theme-txt text-center mb-4 text-dark\">BookMark</h4>\n                                        <img src=\"assets/images/warning.png\" alt=\"\" />\n                                        <form>\n                                            <div className=\"choose-report\">\n                                                <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"first-option\" defaultValue=\"it's spam\" defaultChecked onClick={(e) => handlerRadio(1)} /><label htmlFor=\"first-option\" /><span className=\"ml-1\">It's Spam</span></div>\n                                                <div className=\"form-group\"><input type=\"radio\" checked name=\"report\" id=\"second-option\" defaultValue=\"Wrong Q/A\" onClick={(e) => handlerRadio(2)} /><label htmlFor=\"second-option\" /><span className=\"ml-1\">Wrong Q/A</span></div>\n                                                <div className=\"form-group\"><input type=\"radio\" name=\"report\" id=\"third-option\" defaultValue=\"Other\" onClick={(e) => handlerRadio(3)} /><label htmlFor=\"third-option\" /><span className=\"ml-1\">Other</span></div>\n                                                <div className=\"form-group\">\n                                                    {radioOption ? <input type=\"text\" className=\"form-control\" name=\"otherqa\" placeholder=\"write here\" value={otherOption} onChange={(e) => setOtherOption(e.target.value)} /> : \"\"}\n                                                </div>\n\n                                            </div>\n\n                                        </form>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <a href=\"#\" onClick={(d) => handleUserBookmark(d)}>\n                                            Yes\n                                        </a>\n                                        <a\n                                            href=\"#\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                setBookmarkWarning(false);\n                                                setRadioValue(false);\n                                                //blockRoutes();\n                                            }}\n                                        >\n                                            No\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n                {/* If user cancel the test */}\n                <Modal\n                    isOpen={cancelWarning}\n                    //onRequestClose={() => setTestWarning(false)}\n                    style={customStyles}\n                    contentLabel=\"Finish test modal\"\n                    className=\"logout-modals\"\n                    id=\"exampleModalLong\"\n                    shouldReturnFocusAfterClose={false}\n                >\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-body\">\n                                <div className=\"payment-sucess\">\n                                    <p>Incomplete test</p>\n                                    <img src=\"assets/images/warning.png\" alt=\"\" />\n                                    <p>Do you really want to cancel this test?</p>\n                                    <div className=\"row\">\n                                        <a href=\"#\" onClick={handleUserCancelTest}>\n                                            Yes\n                                        </a>\n                                        <a\n                                            href=\"#\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                setCancelWarning(false);\n                                                //blockRoutes();\n                                            }}\n                                        >\n                                            No\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n                {/* If user saved the test */}\n                <Modal\n                    isOpen={saveWarning}\n                    style={customStyles}\n                    contentLabel=\"Finish test modal\"\n                    className=\"logout-modals\"\n                    id=\"exampleModalLong\"\n                    shouldReturnFocusAfterClose={false}\n                >\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-body\">\n                                <div className=\"payment-sucess\">\n                                    <p>Save test</p>\n                                    <img src=\"assets/images/warning.png\" alt=\"\" />\n                                    <p>Do you really want to save this test?</p>\n                                    <div className=\"row\">\n                                        {saveLoader && <Spinner />}\n                                        <button\n                                            href=\"#\"\n                                            onClick={handleUserSaveTest}\n                                            disabled={saveLoader}\n                                        >\n                                            Yes\n                                        </button>\n                                        <button\n                                            href=\"#\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                setSaveWarning(false);\n                                                setLoader(false);\n                                            }}\n                                        >\n                                            No\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n            </section>\n            <Footer />\n            {/* < ToastContainer /> */}\n        </>\n    );\n};\nexport default ResumeSavedTest;\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Contact from \"../components/Contact-us\";\n\nconst ContactUs = ({ props }) => {\n  return (\n    <>\n      <Header />\n\n      {/* contact us form */}\n      <Contact />\n      {/* contact us form */}\n\n      <Footer />\n    </>\n  );\n};\n\nexport default ContactUs;\n","import React, { useEffect, useState } from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport { Link } from 'react-router-dom'\n\nconst TermsAndCondition = props => {\n  const [termsAndConditions, setTermsAndConditions] = useState([])\n\n  const title = termsAndConditions?.data?.title\n  const subTitle = termsAndConditions?.data?.sub_title\n  const description = termsAndConditions?.data?.description\n\n  // console.log(subTitle)\n\n  useEffect(() => {\n    fetch('https://examtice.com/backend/api/terms-condition')\n      .then(res => res.json())\n      .then(data => setTermsAndConditions(data))\n  }, [])\n\n  //   console.log(termsAndConditions)\n\n  return (\n    <>\n      <Header />\n      <section className='terms-and-condition'>\n        <div className='container'>\n          <h2 className='page-heading'>{title}</h2>\n          {subTitle && <p>{subTitle}</p>}\n          {description && (\n            <div className='termsAndCondition'>\n              <div dangerouslySetInnerHTML={{ __html: description }}></div>\n            </div>\n          )}\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  )\n}\n\nexport default TermsAndCondition\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Link } from \"react-router-dom\";\n\nconst AffiliateTermsAndCondition = (props) => {\n    const [affiliateTermsAndConditions, setAffiliateTermsAndCondition] = useState([])\n\n    const title = affiliateTermsAndConditions?.data?.title\n    const subTitle = affiliateTermsAndConditions?.data?.sub_title\n    const description = affiliateTermsAndConditions?.data?.description\n\n    useEffect(() => {\n        fetch(\"https://examtice.com/backend/api/affiliate-terms-condition\")\n            .then(res => res.json())\n            .then(data => setAffiliateTermsAndCondition(data))\n    }, [])\n\n    // console.log(affiliateTermsAndConditions)\n\n    return (\n        <>\n            <Header />\n            <section className=\"terms-and-condition\">\n                <div className=\"container\">\n                    <h2 className=\"page-heading\">{title}</h2>\n                    {/* <h2 className=\"page-heading\">General Terms & Conditions</h2> */}\n                    {subTitle && <p>{subTitle}</p>}\n                    {description && (\n                        <div className=\"termsAndCondition\">\n                            <div dangerouslySetInnerHTML={{ __html: description }}></div>\n                        </div>\n                    )}\n                </div>\n\n            </section>\n\n            <Footer />\n        </>\n    );\n};\n\nexport default AffiliateTermsAndCondition;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { GET_AFFILIATE_DASHBOARD, MY_PROFILE } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userProfile, profile } from \"../../features/userSlice\";\n\nconst AffiliateDashboard = () => {\n    const [affiliateLoader, setAffiliateLoader] = useState(false);\n    const [affiliateData, setAffiliate] = useState([]);\n    const dispatch = useDispatch();\n    const userReduxData = useSelector(userProfile).user.profile;\n\n    useEffect(() => {\n        getAffiliateDashboard();\n    }, []);\n\n    const getAffiliateDashboard = async () => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            setAffiliateLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(GET_AFFILIATE_DASHBOARD, null, config);\n            if (status == 200) {\n                setAffiliate(data);\n                setAffiliateLoader(false);\n            }\n        } catch (error) {\n            setAffiliateLoader(false);\n            //console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getReffterDashboard();\n    }, []);\n\n    const getReffterDashboard = async () => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n            const {\n                data: { data, status },\n            } = await axios.post(MY_PROFILE, null, config);\n            if (status == 400) {\n                // history.push(\"/\");\n            } else {\n                dispatch(profile({ profile: data }));\n                // console.log(dispatch(profile({ profile: data })))\n            }\n        } catch (err) {\n            console.log(err, \"axios error\");\n        }\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n\n            <section className=\"earning-banner\">\n                <div className=\"container\">\n                    <div className=\"row d-flex align-items-center\">\n                        <div className=\"col-md-6\">\n                            <div className=\"earning-banner-left\">\n                                <h4>Refer your Friends &amp; Earn Money</h4>\n                                <p>\n                                    Introduce Your Friends To Examtice And be Credited with 20% of the subscrption fees instatntly\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"earning-banner-right\">\n                                <img src=\"assets/images/earn-1.png\" alt=\"\" />\n                                <div className=\"d-md-block d-none\">\n                                    <div className={`credit-blog ${isDarkMode ? 'color_dark' : 'color_dark'}`}>\n                                        <h5>₦ {affiliateData.totalAmount}</h5>\n                                        <span>Credit</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"earning-widthdral\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <div className=\"widthdral-inner width-one\">\n                                <span />\n                                <div className=\"row\">\n                                    <div className=\"col-md-3\">\n                                        <img src=\"assets/images/dl-1.png\" alt=\"\" />\n                                    </div>\n                                    <div className=\"col-md-6 ern-mny\">\n                                        <p>Monthly Balance</p>\n                                        <h5>₦ {affiliateData.oneMonth}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* <div className=\"col-md-4\">\n                            <div className=\"widthdral-inner width-two\">\n                                <span />\n                                <div className=\"row\">\n                                    <div className=\"col-md-3\">\n                                        <img src=\"assets/images/dl-2.png\" alt=\"\" />\n                                    </div>\n                                    <div className=\"col-md-6 ern-mny\">\n                                        <p>Refferral Signup</p>\n                                        <h5>₦150</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> */}\n                        <div className=\"col-md-4\">\n                            <div className=\"widthdral-inner width-three\">\n                                <span />\n                                <div className=\"row\">\n                                    <div className=\"col-md-3\">\n                                        <img src=\"assets/images/dl-3.png\" alt=\"\" />\n                                    </div>\n                                    <div className=\"col-md-6 ern-mny\">\n                                        <p>Total Balance</p>\n                                        <h5>₦ {affiliateData.totalAmount}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <div className=\"widthdral-inner width-three\">\n                                <span />\n                                <div className=\"row\">\n                                    <div className=\"col-md-3\">\n                                        <img src=\"assets/images/dl-3.png\" alt=\"\" />\n                                    </div>\n                                    <div className=\"col-md-6 ern-mny\">\n                                        <p>Referral Code</p>\n                                        <p className=\"text-end\">\n                                            {!!userReduxData && userReduxData.refer_id}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4 mt-5\">\n                            <Link to='/affiliate/refferUser'>\n                                <div className=\"widthdral-inner width-three\">\n                                    <span />\n                                    <div className=\"row\">\n                                        <div className=\"col-md-3\">\n                                            <img src=\"assets/images/dl-3.png\" alt=\"\" />\n                                        </div>\n                                        <div className=\"col-md-6 ern-mny\">\n                                            <p className={`text-decoration-none ${isDarkMode ? 'color_light' : 'color_dark'}`} >Referral list</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                    {\n                        affiliateLoader && <Spinner />\n                        // <div className=\"spinner_div\">\n                        //   <Spinner /> \n                        // </div>\n                    }\n                    <Link to={'/affiliate/withdraw'} style={{ textDecoration: 'none' }}>\n                        <button className=\"common-btn\" >Quick withdraw</button>\n                    </Link>\n                </div>\n            </section>\n\n            <Footer />\n        </>\n    );\n};\n\nexport default AffiliateDashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { GET_MONTHLY_REPORT, WITHDRAW_AMOUNT } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { userProfile } from \"../../features/userSlice\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom\";\n\n\nconst Withdraw = () => {\n    const [loader, setLoader] = useState(false);\n    const history = useHistory();\n    const [withdrawForm, setWithdrawForm] = useState({\n        bank: \"\",\n        email: \"\",\n        withdrawAmount: \"\",\n        confirmPassword: \"\",\n    });\n\n    //  Handle withdraw amount here\n    const handleWithdrawChange = (e) => {\n        setWithdrawForm({\n            ...withdrawForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n    const userData = useSelector(userProfile).user.profile; //Getting user data from redux\n\n    const handleWithdraw = async (e) => {\n        e.preventDefault();\n        if (withdrawForm.bank == \"\") {\n            toast.error(\"Please enter your Bank account number\");\n            return false;\n        }\n        if (withdrawForm.email == \"\") {\n            toast.error(\"Please enter your email\");\n            return false;\n        }\n        if (withdrawForm.confirmPassword == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        if (withdrawForm.withdrawAmount == \"\") {\n            toast.error(\"Please enter your withdraw amount\");\n            return false;\n        }\n\n        if (!!userData && userData.amount < withdrawForm.withdrawAmount) {\n            toast.error(\"You don't have sufficient balance\");\n            return false;\n        }\n\n        if (withdrawForm.withdrawAmount <= 10000) {\n            toast.error(\"Minimum balance required \");\n            return false;\n        }\n\n        const config = {\n            headers: {\n                Authorization: Cookies.get(\"token\"),\n            },\n        };\n\n        const body = {\n            bank: withdrawForm.bank,\n            email: withdrawForm.email,\n            withdrawAmount: withdrawForm.withdrawAmount,\n            confirmPassword: withdrawForm.confirmPassword,\n        };\n\n        // Api call here \n        try {\n            setLoader(true);\n            const {\n                data: { message, status, error_description },\n            } = await axios.post(WITHDRAW_AMOUNT, body, config);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(message);\n                history.push(\"/affiliate/dashboard\");\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (err) {\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            }\n            setLoader(false);\n        }\n    }\n\n    const autoReload = () => {\n        // Reload the current page\n        window.location.reload();\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n\n            <section className=\"e-shop-payment eshop-three\">\n                <div className=\"container\">\n\n                    <div className=\"pagination\">\n                        <span onClick={autoReload} className={`${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                            <Link to=\"/affiliate/dashboard\">\n                                <i className=\"fas fa-chevron-left\" />\n                                Back\n                            </Link>\n                        </span>\n                    </div>\n\n                    <div className=\"row d-flex align-items-center\">\n                        <div className=\"col-md-6 col-12\">\n                            <div className=\"e-shop-payment-right\">\n                                <h5>Withdraw Your Money</h5>\n                                <form>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            name=\"bank\"\n                                            placeholder=\"Bank account number\"\n                                            value={withdrawForm.bank}\n                                            onChange={handleWithdrawChange}\n\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            name=\"email\"\n                                            placeholder=\"Email\"\n                                            value={withdrawForm.email}\n                                            onChange={handleWithdrawChange}\n                                        />\n                                    </div>\n                                    <ul>\n                                        <li>\n                                            <span>Available balance</span> ₦ {!!userData && userData.amount ? userData.amount : '0'}\n                                        </li>\n                                    </ul>\n                                    <div className=\"widthral\">\n                                        {/* <p>Amount to withdraw</p> */}\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"\">Amount to withdraw</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"withdrawAmount\"\n                                                placeholder=\"Enter amount\"\n                                                value={withdrawForm.withdrawAmount}\n                                                onChange={handleWithdrawChange}\n\n                                            />\n                                        </div>\n                                        <img src=\"assets/images/mark.png\" alt=\"\" />\n\n                                    </div>\n                                    {/* <p>\n                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n                    Aenean commodo ligula eget dolor. Aenean massa. Cum sociis\n                    natoque penatibus et magnis dis parturient montes, nascetur\n                    ridiculus mus.\n                  </p> */}\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"password\"\n                                            name=\"confirmPassword\"\n                                            placeholder=\"Confirm password\"\n                                            value={withdrawForm.confirmPassword}\n                                            onChange={handleWithdrawChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <button value=\"Withdraw\" onClick={handleWithdraw} >Withdraw</button>\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 col-12\">\n                            <div className=\"house-left\">\n                                <img src=\"assets/images/house.jpg\" alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <Footer />\n        </>\n    );\n};\n\nexport default Withdraw;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AFFILIATE_SUBSCRIPTION_USERS } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst SubscribeUsers = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [subscription, setSubscription] = useState([]);\n  var userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n  console.log(userData, \"userData\");\n\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscribeUsers();\n  }, []);\n\n  //   getSubscribeUsers user\n  const getSubscribeUsers = async () => {\n    try {\n      setLoader(true);\n      const {\n        data: { message, status, data },\n      } = await axios.get(AFFILIATE_SUBSCRIPTION_USERS, config);\n      if (status == 200) {\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const { isDarkMode } = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination\">\n            <span>\n              <Link to=\"/affiliate/dashboard\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                <i className=\"fas fa-chevron-left\" />\n                Subscribe Users\n              </Link>\n            </span>\n          </div>\n          <div className=\"row savedTest\">\n            {loader ? (\n              <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                <table  className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">S.no</th>\n                      <th scope=\"col\">Full Name</th>\n                      <th scope=\"col\">Phone no.</th>\n                      {userData.affiliate_role == 5 && (\n                        <th scope=\"col\">Role</th>\n                      )}\n                      <th scope=\"col\">Join on</th>\n                      <th scope=\"col\">Status</th>\n                      {/* <th scope=\"col\" style={{ width: \"10%\" }}>\n                        View report\n                      </th> */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {subscription.length ? (\n                      subscription.map((item, index) => (\n                        <tr key={index}>\n                          <th scope=\"row\">{index + 1}</th>\n                          <th scope=\"row\">\n                            {\" \"}\n                            {item.first_name + \" \" + item.last_name}\n                          </th>\n                          <th scope=\"row\"> {item.phoneno}</th>\n                          {userData.affiliate_role == 5 && (\n                            <td>\n                              {item.affiliate_role == 6 ? (\n                                <span className=\"badge-info badge mr-2\">\n                                  Affiliate partner\n                                </span>\n                              )\n                              :\n                              (\n                                <span className=\"badge-light badge mr-2\">\n                                    Student\n                                </span>\n                              )\n                            }\n                            </td>\n                          )}\n                          <td>{getTestDate(item.created_at)}</td>\n\n                          <td>\n                            {item.status == 1 ? (\n                              <span className=\"badge-success badge mr-2\">\n                                Active\n                              </span>\n                            ) : (\n                              <span className=\"badge-danger badge mr-2\">\n                                Inactive\n                              </span>\n                            )}\n                          </td>\n                          {/* <td>\n                            <Link to={\"/user/subscription/\" + item.id}>\n                              <span>\n                                View <i class=\"fas fa-chevron-right\"></i>\n                              </span>\n                            </Link>\n                          </td> */}\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={5}>No user found..!</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default SubscribeUsers;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AFFILIATE_TRANSACTION } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst Transaction = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  var userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getTransaction();\n  }, []);\n\n  //   get all Transaction that user has been done\n  const getTransaction = async () => {\n    try {\n      setLoader(true);\n      const {\n        data: { message, status, data },\n      } = await axios.get(AFFILIATE_TRANSACTION, config);\n      if (status == 200) {\n        setLoader(false);\n        setTransactions(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error?.response?.data?.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n            <span>\n              <Link to=\"/affiliate/dashboard\">\n                <i className=\"fas fa-chevron-left\" />\n                Transaction\n              </Link>\n            </span>\n          </div>\n          <div className=\"row savedTest\">\n            {loader ? (\n              <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                <table className={` ${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">S.no</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Account no.</th>\n                      <th scope=\"col\">Amount</th>\n                      <th scope=\"col\">Requested at</th>\n                      <th scope=\"col\">Status</th>\n                      {/* <th scope=\"col\" style={{ width: \"10%\" }}>\n                        View report\n                      </th> */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {transactions.length ? (\n                      transactions.map((item, index) => (\n                        <tr key={index}>\n                          <th scope=\"row\">{index + 1}</th>\n                          <th scope=\"row\"> {item.email}</th>\n                          <th scope=\"row\"> {item.bank}</th>\n                          <th scope=\"row\">₦ {item.amount}</th>\n                          <td>{getTestDate(item.created_at)}</td>\n                          <td>\n                            {item.status == 0 ? (\n                              <span className=\"badge-warning badge mr-2\">\n                                Pending\n                              </span>\n                            ) : item.status == 1 ? (\n                              <span className=\"badge-success badge mr-2\">\n                                Approved\n                              </span>\n                            ) : (\n                              <span className=\"badge-danger badge mr-2\">\n                                Cancelled\n                              </span>\n                            )}\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={5}>No transaction found..!</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default Transaction;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  var isRole =\n    !!Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  var affiliateRole = !!isRole && isRole.affiliate_role;\n  const IsAffiliateRole = [];\n  const IsLmsRole = [7, 8];\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") &&\n        !IsAffiliateRole.includes(affiliateRole) ? (\n          <Component {...props} />\n        ) : (\n          <>\n            {IsAffiliateRole.includes(affiliateRole) ? (\n              <Redirect\n                to={{\n                  pathname: \"/affiliate/dashboard\",\n                  state: { from: props.location },\n                }}\n              />\n            ) : (\n              <>\n              {IsLmsRole.includes(affiliateRole) ? (\n                <Redirect\n                \n                  to={{\n                    pathname: \"/learningmanagement/dashboard\",\n                    state: { from: props.location },\n                  }}\n                />\n              ):(\n                <Redirect\n                \n                to={{\n                  pathname: \"/\",\n                  state: { from: props.location },\n                }}\n              />\n              )}\n              </>\n            )}\n          </>\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst AffiliateRoute = ({\n    isAffiliate,\n  component: Component,\n  ...rest\n}) => {\n\nconst IsAffiliateRole = [5, 6];\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        Cookies.get(\"token\") && Cookies.get(\"user_data\") && IsAffiliateRole.includes(isAffiliate) ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n\n  );\n};\n\nexport default AffiliateRoute;\n\n","import React, { useEffect, useState } from \"react\";\n//import { Link, useHistory } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport { toast } from \"react-toastify\";\nimport { global } from \"../components/Config\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport Faq from \"react-faq-component\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport { FAQ } from \"../components/Api\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst Faqlist = () => {\n    const [loader, setLoader] = useState(false);\n    const [faqQuestions, setFaqQuestions] = useState([])\n\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n\n    useEffect(() => {\n        fetch(\"https://examtice.com/backend/api/faq/list\")\n            .then(res => res.json())\n            .then(data => setFaqQuestions(data.data))\n    }, [])\n\n    // console.log(faqQuestions)\n\n    const data = {\n        title: \"FAQ (How it works)\",\n        rows: faqQuestions\n    };\n\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    const styles = {\n        // bgColor: 'white',\n        titleTextColor: 'dark',\n        rowTitleColor: \"#f12679\",\n        rowContentColor: 'dark',\n        arrowColor: \"#f12679\",\n    };\n\n    const config2 = {\n        // animate: true,\n        // arrowIcon: \"V\",\n        // tabFocus: true\n    };\n\n    return (\n        <>\n            <Header />\n\n            {/* <section className=\"inner-banner\">\n          <img src=\"assets/images/about-banner.jpg\" alt=\"\" />\n        </section> */}\n            <section className=\"welcome-ebay\">\n                <div className=\"container\">\n                    <div className=\"about-left\">\n                        <h6>FAQ</h6>\n                        <h2 className=\"page-heading\">Frequently Asked Questions</h2>\n                        <Faq\n                            data={data}\n                            styles={styles}\n                            config={config2}\n                        />\n                    </div>\n                </div>\n            </section>\n            <Footer />\n\n            {/* < ToastContainer /> */}\n        </>\n\n    );\n};\nexport default Faqlist;","import React, { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { toast } from \"react-toastify\";\nimport { SEARCH_QUESTIONBYID } from \"../Api\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\n\nconst Questiondetails = ({ show, closePop, questionsid }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [searchquestiondetails, setSearchquestiondetails] = useState([]);\n  //const [questionsidData, setquestionsidData] = useState([]);\n\n  useEffect(() => {\n    //setquestionsidData(questionsid);\n    viewquestiondetails();\n  }, [questionsid]);\n\n  // console.log(searchquestiondetails)\n\n  const customStyles = {\n    overlay: {\n      backgroundColor: \"rgba(0,0,0,0.4)\",\n      zIndex: \"9999\",\n      overflowY: \"auto\",\n    },\n  };\n  Modal.setAppElement(\"#root\");\n\n  //Handle close popup modal\n  const handleClose = () => {\n    closePop(false);\n  };\n\n  const viewquestiondetails = async () => {\n    try {\n      var queid = questionsid;\n      const config = {\n        headers: {\n          Authorization: Cookies.get(\"token\"),\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        }\n      }\n      var userId = Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n      const body = {\n        questionId: queid,\n      };\n\n      const {\n        data: { status, data, message },\n      } = await axios.post(SEARCH_QUESTIONBYID, body);\n      if (status == 200) {\n        setLoader(false);\n        setSearchquestiondetails(data);\n        // toast.success(message);\n        console.log(data)\n      } else {\n        setLoader(false);\n        toast.error(message);\n\n      }\n    } catch (err) {\n      console.log(err)\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description);\n      } else {\n        toast.error(\"Something went wrong, please try again..!\");\n      }\n      setLoader(false);\n    }\n\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={show}\n        onRequestClose={handleClose}\n        style={customStyles}\n        contentLabel=\"Login Modal\"\n        className=\"questiondetails-modals\"\n        id=\"exampleModalLong\"\n        shouldReturnFocusAfterClose={true}\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n\n            <div className=\"modal-body\">\n              <div className=\"login-deatils\">\n                <ul className=\"nav nav-tabs\">\n                  <li className=\"active\">\n                    <a className=\"active\">\n                      Question Details\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <div >\n                <div>\n                  <br />\n                  <br />\n                  <div className=\"sign-tab-detail\">\n                    {searchquestiondetails &&\n                      searchquestiondetails.map((item, index) => (\n                        <div className=\"row searchquestionlisting\">\n                          <div className=\"col-sm-3 \">\n                            <b>Course Name:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.courseName }}></div>\n\n                          </div>\n\n                          <div className=\"col-sm-3 text-black\">\n                            <b>Subject Name:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.subjectName }}></div>\n\n                          </div>\n\n                          <div className=\"col-sm-4 text-black\">\n                            <b>Topic Name:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.topicName }}></div>\n                          </div>\n\n                          <div className=\"col-sm-2 text-black text-center\">\n                            <b>Year:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.year }}></div>\n                          </div>\n\n                          <div className=\"col-sm-12 text-black\">\n                            <b>Question:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div>\n\n                          </div>\n                          <div className=\"col-sm-6\">\n                            <b>Option 1:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_1 }}></div>\n\n                          </div>\n                          <div className=\"col-sm-6\">\n                            <b>Option 2:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_2 }}></div>\n\n                          </div>\n                          <div className=\"col-sm-6\">\n                            <b>Option 3:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_3 }}></div>\n\n                          </div>\n                          <div className=\"col-sm-6\">\n                            <b>Option 4:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.option_4 }}></div>\n\n                          </div>\n                          <div className=\"col-sm-12\">\n                            <b>Answer:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.answer }}></div>\n\n                          </div>\n                          <div className=\"col-sm-12\">\n                            <b>Explanation:</b> <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.explanation }}></div>\n\n                          </div>\n\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default Questiondetails;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Questiondetails from \"../../components/modals/questiondetails\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport {\n    GET_COURSES,\n    GET_SUBJECTS,\n    GET_TOPICS_LIST,\n    SAVE_FEEDBACK_QUESTION,\n    SEARCH_QUESTION,\n} from \"../../components/Api\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst SearchandFeedback = () => {\n    const dispatch = useDispatch();\n    const [courses, setCourses] = useState([]);\n    const [subjects, setSubjects] = useState([]);\n    const [subjectssearch, setSubjectssearch] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [questionsid, setQuestions] = useState([]);\n    const [testData, setTestData] = useState({ type: 1 });\n    const [topics, setTopics] = useState([]);\n    const [searchquestionlist, setSearchquestionlist] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [usersubscription, setUserSubscription] = useState([]);\n    const [updateForm, setUpdateForm] = useState({\n        searchquestion: \"\",\n        user_id: \"\",\n        course_id: \"\",\n        subject_id: \"\",\n        topic_id: \"\",\n        question: \"\",\n        option_1: \"\",\n        option_2: \"\",\n        option_3: \"\",\n        option_4: \"\",\n        answer: \"\",\n        explanation: \"\",\n    });\n\n    useEffect(() => {\n        getCourses();\n    }, []);\n\n    // Do not copy text \n    const disableContextMenu = (e) => {\n      e.preventDefault();\n    };\n\n    const disableCopyShortcut = (e) => {\n      if (e.ctrlKey && (e.key === 'c' || e.key === 'C')) {\n        e.preventDefault();\n      }\n    };\n\n    useEffect(() => {\n      document.addEventListener('contextmenu', disableContextMenu);\n      document.addEventListener('keydown', disableCopyShortcut);\n\n      return () => {\n        document.removeEventListener('contextmenu', disableContextMenu);\n        document.removeEventListener('keydown', disableCopyShortcut);\n      };\n    }, []);\n\n\n\n    const handleCloseModal = () => {\n        setOpen(false);\n    };\n    const handleModalShow = async (e) => {\n        var id = e.target.value;\n        setQuestions(id);\n        setOpen(true);\n    };\n\n    //Get courses on page load\n    const getCourses = async () => {\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_COURSES);\n            if (status == 200) {\n                setLoader(false);\n                setCourses(data);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    const handleEditChange = (e) => {\n        setUpdateForm({\n            ...updateForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    //Get subject based on course change\n    const handleCourseChangesearch = async (e) => {\n        var id = e.target.value;\n        setUpdateForm({\n            ...updateForm,\n            [e.target.name]: e.target.value,\n        });\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (!isNaN(id)) {\n            setLoader(true);\n            setTestData({\n                ...testData,\n                courseName: e.target.options[e.target.selectedIndex].text,\n                courseId: id,\n            });\n            const body = {\n                courseId: id,\n                user_id: !!userId && userId.id,\n            };\n            try {\n                const {\n                    data: { data, status, mcq, theory, practical, usersubscription, error },\n                } = await axios.post(GET_SUBJECTS, body);\n                if (status == 200) {\n                    setLoader(false);\n                    setSubjectssearch(data);\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    const handleCourseChange = async (e) => {\n        var id = e.target.value;\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (!isNaN(id)) {\n            setLoader(true);\n            setTestData({\n                ...testData,\n                courseName: e.target.options[e.target.selectedIndex].text,\n                courseId: id,\n            });\n            const body = {\n                courseId: id,\n                user_id: !!userId && userId.id,\n            };\n            try {\n                const {\n                    data: { data, status, mcq, theory, practical, usersubscription, error },\n                } = await axios.post(GET_SUBJECTS, body);\n                if (status == 200) {\n                    setLoader(false);\n                    setSubjects(data);\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    const handleSubjectChange = async (e) => {\n        var id = e.target.value;\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (!isNaN(id)) {\n            setLoader(true);\n            setTestData({\n                ...testData,\n                subjectName: e.target.options[e.target.selectedIndex].text,\n                subjectId: id,\n            });\n            const body = {\n                subjectId: id,\n                user_id: !!userId && userId.id,\n            };\n            try {\n                const {\n                    data: { data, status, number_of_question, ave_total_question, error },\n                } = await axios.post(GET_TOPICS_LIST, body);\n                if (status == 200) {\n                    setLoader(false);\n                    setTopics(data);\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    const handleTopicChange = async (e) => {\n        var id = e.target.value;\n        if (!isNaN(id)) {\n            setTestData({\n                ...testData,\n                topicName: e.target.options[e.target.selectedIndex].text,\n                topicId: id,\n            });\n        }\n    };\n    const handleFeedbackQuestion = async (e) => {\n        try {\n            setLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"multipart/form-data\",\n                }\n            }\n            var userId = Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n            const body = {\n                user_id: userId.id,\n                course_id: testData.courseId,\n                subject_id: testData.subjectId,\n                topic_id: testData.topicId,\n                question: updateForm.question,\n                option_1: updateForm.option_1,\n                option_2: updateForm.option_2,\n                option_3: updateForm.option_3,\n                option_4: updateForm.option_4,\n                answer: updateForm.answer,\n                explanation: updateForm.explanation,\n            };\n\n            const {\n                data: { status, data, message },\n            } = await axios.post(SAVE_FEEDBACK_QUESTION, body);\n            if (status == 200) {\n                var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                Cookies.set(\"user_data\", JSON.stringify(data), expiryObject);\n\n                setLoader(false);\n                toast.success(message);\n            } else {\n                setLoader(false);\n                toast.error(message);\n\n            }\n        } catch (err) {\n            console.log(err)\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n\n\n    };\n\n    const handleFeedbackQuestion2 = async (e) => {\n        try {\n            setLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"multipart/form-data\",\n                }\n            }\n            var userId = Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n            const body = {\n                user_id: userId.id,\n                type: 2,\n                course_id: testData.courseId,\n                subject_id: testData.subjectId,\n                topic_id: testData.topicId,\n                question: updateForm.question,\n                explanation: updateForm.explanation,\n            };\n\n            const {\n                data: { status, data, message },\n            } = await axios.post(SAVE_FEEDBACK_QUESTION, body);\n            if (status == 200) {\n                var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                Cookies.set(\"user_data\", JSON.stringify(data), expiryObject);\n\n                setLoader(false);\n                toast.success(message);\n            } else {\n                setLoader(false);\n                toast.error(message);\n\n            }\n        } catch (err) {\n            console.log(err)\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n\n\n    };\n    const handleFeedbackQuestion3 = async (e) => {\n        try {\n            setLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"multipart/form-data\",\n                }\n            }\n            var userId = Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n            const body = {\n                user_id: userId.id,\n                type: 3,\n                course_id: testData.courseId,\n                subject_id: testData.subjectId,\n                topic_id: testData.topicId,\n                question: updateForm.question,\n                explanation: updateForm.explanation,\n            };\n\n            const {\n                data: { status, data, message },\n            } = await axios.post(SAVE_FEEDBACK_QUESTION, body);\n            if (status == 200) {\n                var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                Cookies.set(\"user_data\", JSON.stringify(data), expiryObject);\n\n                setLoader(false);\n                toast.success(message);\n            } else {\n                setLoader(false);\n                toast.error(message);\n\n            }\n        } catch (err) {\n            console.log(err)\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n\n\n    };\n\n    const handlesearchQuestion = async (e) => {\n        try {\n            setLoader(true);\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"multipart/form-data\",\n                }\n            }\n            var userId = Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n\n            const body = {\n                user_id: userId.id,\n                course_id: updateForm.search_courses_id,\n                subject_id: updateForm.search_subject_id,\n                type: updateForm.search_type,\n                searchq: updateForm.searchquestion,\n            };\n\n            // console.log(body)\n\n            const {\n                data: { status, data, usersubscription, message },\n            } = await axios.post(SEARCH_QUESTION, body);\n            if (status == 200) {\n                setLoader(false);\n                setSearchquestionlist(data);\n\n                if (usersubscription == 0) {\n                    toast.error('Subscription not complate yet');\n                } else {\n                    setUserSubscription(usersubscription);\n                }\n                //toast.success(message);\n            } else {\n                setLoader(false);\n                toast.error(message);\n\n            }\n        } catch (err) {\n            // console.log(err)\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n\n\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                        <span>\n                            <Link to=\"/user/dashboard\">\n                                <i className=\"fas fa-chevron-left\" />\n                                Search Question/Feedback Question\n                            </Link>\n                        </span>\n                    </div>\n                    <div className=\"main-body text-dark\">\n                        <div className=\"row gutters-sm search-section\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card mb-3\">\n                                    <div className=\"card-body\">\n                                        <div className=\"tabbable-line\">\n                                            <ul className=\"nav nav-tabs \">\n                                                <li>\n                                                    <a\n                                                        href=\"#tab_default_1\"\n                                                        data-toggle=\"tab\"\n                                                        className=\"active\"\n                                                    >\n                                                        Search Question{\" \"}\n                                                    </a>\n                                                </li>\n                                                <li>\n                                                    <a href=\"#tab_default_2\" data-toggle=\"tab\">\n                                                        Feedback Question{\" \"}\n                                                    </a>\n                                                </li>\n                                            </ul>\n                                            <div className=\"tab-content\">\n                                                <div className=\"tab-pane active\" id=\"tab_default_1\">\n                                                    <div className=\"row\">\n                                                        <div className=\"sign-tab-detail col-md-4\">\n\n                                                            <div className=\"select-class select-testing\">\n                                                                <p>Select Course</p>\n                                                                <select onChange={handleCourseChangesearch} id=\"search_courses_id\" name=\"search_courses_id\">\n                                                                    <option value>Select course</option>\n                                                                    {courses &&\n                                                                        courses.map((item, index) => (\n                                                                            <option value={item.id} key={index}>\n                                                                                {\" \"}\n                                                                                {item.name}{\" \"}\n                                                                            </option>\n                                                                        ))}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"sign-tab-detail col-md-4\">\n                                                            <div className=\"select-subject select-testing\">\n                                                                <p>Select Subject</p>\n                                                                <select id=\"search_subject_id\" name=\"search_subject_id\" onChange={handleEditChange}>\n                                                                    <option value=\"\">Select subject</option>\n                                                                    {subjectssearch &&\n                                                                        subjectssearch.map((item, index) => (\n                                                                            <option value={item.id} key={index}>\n                                                                                {\" \"}\n                                                                                {item.name}{\" \"}\n                                                                            </option>\n                                                                        ))}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"sign-tab-detail col-md-4\">\n                                                            <div className=\"select-subject select-testing\">\n                                                                <p>Select Type</p>\n                                                                <select id=\"search_type\" name=\"search_type\" onChange={handleEditChange}>\n                                                                    <option value=\"\">Select Type</option>\n                                                                    <option value=\"1\">Multichoise Question</option>\n                                                                    <option value=\"2\">Theory Question</option>\n                                                                    <option value=\"3\">Practical Question</option>\n\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-9 col-sm-12 text-secondary\">\n                                                            <div className=\"select-search\">\n                                                                <input\n                                                                    type=\"text\"\n                                                                    placeholder=\"Search Question\"\n                                                                    name=\"searchquestion\"\n                                                                    value={updateForm.searchquestion}\n                                                                    onChange={handleEditChange}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-3 col-sm-12\">\n                                                            <Link\n                                                                className=\"common-btn\"\n                                                                to=\"#\"\n                                                                onClick={handlesearchQuestion}\n                                                            >\n                                                                Search\n\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row savedTest\">\n                                                        <div className=\"col-sm-12\">\n                                                            <div className=\"row searchquestionlisting\" >\n                                                                <h4 className={`${isDarkMode ? 'color_dark' : 'color_dark'}`}>Search Questions</h4>\n                                                                <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`} style={{ width: \"100%\" }}>\n\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <td style={{ width: \"15%\" }}>Course Name</td>\n                                                                            <td style={{ width: \"15%\" }}>Subject Name</td>\n                                                                            <td style={{ width: \"15%\" }}>Topic Name</td>\n                                                                            <td style={{ width: \"30%\" }}>Question</td>\n                                                                            <td style={{ width: \"25%\" }}>Action</td>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {usersubscription && searchquestionlist &&\n                                                                            searchquestionlist.map((item, index) => (\n                                                                                <tr key={index}>\n                                                                                    <td>{item.courseName}</td>\n                                                                                    <td>{item.subjectName}</td>\n                                                                                    <td>{item.topicName}</td>\n                                                                                    <td style={{ maxWidth: \"30%\" }} className=\"feedback-question\">\n                                                                                        <div style={{ maxWidth: \"100%\", overflow: \"auto\" }} dangerouslySetInnerHTML={{ __html: item.question }} />\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <button\n                                                                                            className=\"common-btn\"\n                                                                                            value={item.id}\n                                                                                            onClick={handleModalShow}\n                                                                                        >\n                                                                                            View\n                                                                                        </button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                            ))}\n                                                                    </tbody>\n\n                                                                    {/* <thead>\n                                                                        <tr>\n                                                                            <td>Course Name</td>\n                                                                            <td>Subject Name</td>\n                                                                            <td>Topic Name</td>\n                                                                            <td>Question</td>\n                                                                            <td>Action</td>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {usersubscription && searchquestionlist &&\n                                                                            searchquestionlist.map((item, index) => (\n                                                                                <tr>\n                                                                                    <td><div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.courseName }}></div></td>\n                                                                                    <td><div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.subjectName }}></div></td>\n                                                                                    <td><div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.topicName }}></div></td>\n                                                                                    <td><div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div></td>\n                                                                                    <td>\n                                                                                        <button\n                                                                                            className=\"common-btn\"\n                                                                                            value={item.id}\n                                                                                            onClick={handleModalShow}\n                                                                                        >\n                                                                                            View\n                                                                                        </button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                            ))}\n                                                                    </tbody> */}\n\n                                                                </table>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                                <div className=\"tab-pane\" id=\"tab_default_2\">\n                                                    <h4> Feed Back Question </h4>\n                                                    <div className=\"tabbable-line\">\n                                                        <ul className=\"nav nav-tabs \">\n                                                            <li>\n                                                                <a\n                                                                    href=\"#tab_default_mcq\" data-toggle=\"tab\"\n                                                                    className=\"active\"\n                                                                >\n                                                                    Multichoise Question\n                                                                </a>\n                                                            </li>\n                                                            <li>\n                                                                <a href=\"#tab_default_theory\" data-toggle=\"tab\">\n                                                                    Theory Question\n                                                                </a>\n                                                            </li>\n                                                            <li>\n                                                                <a href=\"#tab_default_practical\" data-toggle=\"tab\">\n                                                                    Practical Question\n                                                                </a>\n                                                            </li>\n                                                        </ul>\n                                                        <div className=\"tab-content\">\n                                                            <div className=\"tab-pane active\" id=\"tab_default_mcq\">\n                                                                <div className=\"row\">\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n\n                                                                        <div className=\"select-class select-testing\">\n                                                                            <p>Select Course</p>\n                                                                            <select onChange={handleCourseChange} id=\"courses\" name=\"course_id\">\n                                                                                <option value>Select course</option>\n                                                                                {courses &&\n                                                                                    courses.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Select Subject</p>\n                                                                            <select id=\"subjects\" name=\"subject_id\" onChange={handleSubjectChange}>\n                                                                                <option value=\"\">Select subject</option>\n                                                                                {subjects &&\n                                                                                    subjects.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Select Topic</p>\n                                                                            <select id=\"subjects\" name=\"topic_id\" onChange={handleTopicChange}>\n                                                                                <option value=\"\">Select topic</option>\n                                                                                {topics &&\n                                                                                    topics.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Question</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"question\"\n                                                                                value={updateForm.question}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-8\">\n\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Option 1</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"option_1\"\n                                                                                value={updateForm.option_1}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Option 2</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"option_2\"\n                                                                                value={updateForm.option_2}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Option 3</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"option_3\"\n                                                                                value={updateForm.option_3}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Option 4</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"option_4\"\n                                                                                value={updateForm.option_4}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Answer</p>\n                                                                            <select id=\"subjects\" name=\"answer\" onChange={handleEditChange}>\n                                                                                <option value=\"\">Select Answer</option>\n                                                                                <option value=\"1\">Option 1</option>\n                                                                                <option value=\"2\">Option 2</option>\n                                                                                <option value=\"3\">Option 3</option>\n                                                                                <option value=\"4\">Option 4</option>\n\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Explanation</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"explanation\"\n                                                                                value={updateForm.explanation}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n\n                                                                    </div>\n                                                                    <div className=\"\">\n                                                                        <div className=\"col-md-12\">\n                                                                            <div className=\"select-subject select-testing\">\n                                                                                {loader && <Spinner />}\n                                                                                <button\n                                                                                    value=\"Save Feedback\"\n                                                                                    className=\"common-btn\"\n                                                                                    onClick={handleFeedbackQuestion}\n                                                                                    disabled={loader}\n                                                                                >\n                                                                                    Save Feedback\n                                                                                    {loader && \"...\"}\n                                                                                </button>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"tab-pane\" id=\"tab_default_theory\">\n                                                                <div className=\"row\">\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-class select-testing\">\n                                                                            <p>Select Course</p>\n                                                                            <select onChange={handleCourseChange} id=\"courses\" name=\"course_id\">\n                                                                                <option value>Select course</option>\n                                                                                {courses &&\n                                                                                    courses.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Select Subject</p>\n                                                                            <select id=\"subjects\" name=\"subject_id\" onChange={handleSubjectChange}>\n                                                                                <option value=\"\">Select subject</option>\n                                                                                {subjects &&\n                                                                                    subjects.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Select Topic</p>\n                                                                            <select id=\"subjects\" name=\"topic_id\" onChange={handleTopicChange}>\n                                                                                <option value=\"\">Select topic</option>\n                                                                                {topics &&\n                                                                                    topics.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Question</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"question\"\n                                                                                value={updateForm.question}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-8\">\n\n                                                                    </div>\n\n                                                                    <div className=\"sign-tab-detail col-md-6\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Explanation</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"explanation\"\n                                                                                value={updateForm.explanation}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-6\">\n\n                                                                    </div>\n                                                                    <div className=\"\">\n                                                                        <div className=\"col-md-12\">\n                                                                            <div className=\"select-subject select-testing\">\n                                                                                {loader && <Spinner />}\n                                                                                <button\n                                                                                    value=\"Save Feedback\"\n                                                                                    className=\"common-btn\"\n                                                                                    onClick={handleFeedbackQuestion2}\n                                                                                    disabled={loader}\n                                                                                >\n                                                                                    Save Feedback\n                                                                                    {loader && \"...\"}\n                                                                                </button>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n                                                            <div className=\"tab-pane\" id=\"tab_default_practical\">\n                                                                <div className=\"row\">\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-class select-testing\">\n                                                                            <p>Select Course</p>\n                                                                            <select onChange={handleCourseChange} id=\"courses\" name=\"course_id\">\n                                                                                <option value>Select course</option>\n                                                                                {courses &&\n                                                                                    courses.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Select Subject</p>\n                                                                            <select id=\"subjects\" name=\"subject_id\" onChange={handleSubjectChange}>\n                                                                                <option value=\"\">Select subject</option>\n                                                                                {subjects &&\n                                                                                    subjects.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Select Topic</p>\n                                                                            <select id=\"subjects\" name=\"topic_id\" onChange={handleTopicChange}>\n                                                                                <option value=\"\">Select topic</option>\n                                                                                {topics &&\n                                                                                    topics.map((item, index) => (\n                                                                                        <option value={item.id} key={index}>\n                                                                                            {\" \"}\n                                                                                            {item.name}{\" \"}\n                                                                                        </option>\n                                                                                    ))}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-4\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Question</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"question\"\n                                                                                value={updateForm.question}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-8\">\n\n                                                                    </div>\n\n                                                                    <div className=\"sign-tab-detail col-md-6\">\n                                                                        <div className=\"select-subject select-testing\">\n                                                                            <p>Explanation</p>\n                                                                            <input\n                                                                                type=\"text\"\n                                                                                placeholder=\"Question\"\n                                                                                name=\"explanation\"\n                                                                                value={updateForm.explanation}\n                                                                                onChange={handleEditChange}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"sign-tab-detail col-md-6\">\n\n                                                                    </div>\n                                                                    <div className=\"\">\n                                                                        <div className=\"col-md-12\">\n                                                                            <div className=\"select-subject select-testing\">\n                                                                                {loader && <Spinner />}\n                                                                                <button\n                                                                                    value=\"Save Feedback\"\n                                                                                    className=\"common-btn\"\n                                                                                    onClick={handleFeedbackQuestion3}\n                                                                                    disabled={loader}\n                                                                                >\n                                                                                    Save Feedback\n                                                                                    {loader && \"...\"}\n                                                                                </button>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Questiondetails show={open} questionsid={questionsid} closePop={handleCloseModal} />\n            </section>\n\n            <Footer />\n        </>\n    );\n};\n\nexport default SearchandFeedback;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MY_TICKETLIST} from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst Supportlist = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [tickets, setTicketdata] = useState([]);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getTicketlist();\n  }, []);\n\n  //   Verify user\n  const getTicketlist = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(MY_TICKETLIST,body, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setTicketdata(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className={`pagination row dash-graph ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n            <div className=\"col-md-6\">\n              <span>\n                <Link to=\"/user/dashboard\">\n                  <i className=\"fas fa-chevron-left\" />\n                  Dashboard\n                </Link>\n              </span>\n            </div>\n            <div className=\"col-md-6\">\n              <span className=\"right\">\n                <Link to=\"/user/addticket\" className=\"common-btn\">\n                  Create Ticket\n                </Link>\n              </span>\n            </div>\n          </div>\n\n          <div className=\"row savedTest\">\n            {loader ? (\n              <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                {/* <div className=\"report-menu\">\n                <div className=\"category free-testing-tabs\">\n                  <ul>\n                    <li>\n                      <p>{report.userReport?.length}</p>\n                      Tests taken\n                    </li>\n                    <li>\n                      <p>{report.totalQues}</p>\n                      Questions seen\n                    </li>\n                    <li>\n                      <p>{report.totalTime}</p>\n                      Time spent\n                    </li>\n                  </ul>\n                </div>\n              </div> */}\n                \n                <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">S.no</th>\n                      <th scope=\"col\">Title</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Category</th>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\" style={{ width: \"10%\" }}>\n                        View\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tickets.length ? (\n                      tickets.map((item, index) => (\n                        <tr key={index}>\n                          <th scope=\"row\">{index + 1}</th>\n                          <th scope=\"row\"> {item.title}</th>\n                          <td>\n                            {item.status_id == 3 ? (\n                              <span className=\"badge-success badge mr-2\">\n                                Open\n                              </span>\n                            ) : (\n                              <>\n                                {item.status_id==4?(\n                                  <span className=\"badge-danger badge mr-2\">Close</span>\n                                ):(\n                                  <span className=\"badge-warning badge mr-2\">Awaiting</span>\n                                )}\n                              </>\n                            )}\n                          </td>\n                          <td>{item.category_name}</td>\n                          <td>{getTestDate(item.created_at)}</td>\n                          <td className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                            <Link to={\"/user/supportdetails/\" + item.id}>\n                              <span>\n                                View <i className=\"fas fa-chevron-right\"></i>\n                              </span>\n                            </Link>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={5}>No Ticket found..!</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default Supportlist;\n","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../../components/Footer'\r\nimport Header from '../../components/Header'\r\n\r\nconst DownloadApp = () => {\r\n  const [isMobile, setIsMobile] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkDevice = () => {\r\n      setIsMobile(window.innerWidth <= 768) // 768px এর নিচে হলে mobile ধরবে\r\n    }\r\n\r\n    checkDevice() // প্রথমবার চেক\r\n    window.addEventListener('resize', checkDevice) // resize এও চেক করবে\r\n\r\n    return () => window.removeEventListener('resize', checkDevice) // cleanup\r\n  }, [])\r\n\r\n  //   if (!isMobile) {\r\n  //     return (\r\n  //       <div style={{ padding: '50px', textAlign: 'center' }}>\r\n  //         <div className='row mt-5'>\r\n  //           <div className='col-6'>\r\n  //             <button className='common-btn'>\r\n  //               <i className='fas fa-solid fa-robot'></i> Download iSO\r\n  //             </button>\r\n  //           </div>\r\n  //           <div className='col-6'>\r\n  //             <button className='common-btn'>\r\n  //               <i className='fas fa-solid fa-robot'></i> Download Android\r\n  //             </button>\r\n  //           </div>\r\n  //         </div>\r\n  //       </div>\r\n  //     )\r\n  //   }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className='free-testing-sec'>\r\n        <div className='container'>\r\n          <div>\r\n            <span className='pagination text_color_light'>\r\n              <Link to='/user/dashboard'>\r\n                <i className='fas fa-chevron-left' />\r\n                Back\r\n              </Link>\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <h2>Download the app for iOS or Android</h2>\r\n            {isMobile ? (\r\n              <div className='row mt-5'>\r\n                <div className='col-12'>\r\n                  <button className='common-btn'>\r\n                    <i className='fas fa-solid fa-robot'></i> Download Dasktop App\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className='row mt-5'>\r\n                <div className='col-6'>\r\n                  <button className='common-btn'>\r\n                    <i className='fas fa-solid fa-robot'></i> Download iSO\r\n                  </button>\r\n                </div>\r\n                <div className='col-6'>\r\n                  <button className='common-btn'>\r\n                    <i className='fas fa-solid fa-robot'></i> Download Android\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DownloadApp\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from '../../components/Header'\r\nimport Footer from '../../components/Footer'\r\nimport { ThemeContext } from '../../ThemeContaxt/ThemeContaxt';\r\n\r\nexport default function Resources() {\r\n    const { isDarkMode } = useContext(ThemeContext);\r\n    const [resources, setResources] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://www.examtice.com/backend/api/resources/list\")\r\n            .then(res => res.json())\r\n            .then(data => setResources(data.data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <section className=\"free-testing-sec\">\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <span className=\"pagination text_color_light\">\r\n                            <Link to=\"/user/dashboard\">\r\n                                <i className=\"fas fa-chevron-left\" />\r\n                                Back\r\n                            </Link>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"row\">S.no</th>\r\n                                    <th>Recources Date</th>\r\n                                    <th>Link</th>\r\n                                    <th>Download</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    resources.map((resource, index) => (\r\n                                        <tr>\r\n                                            <td>{index + 1 }</td>\r\n                                            <td>{resource.name}</td>\r\n                                            <td>{resource.link}</td>\r\n                                            <td className=\"tex-center\">\r\n                                                <a href={resource.link} className='text-white' download=\"document.docx\">\r\n                                                    <i class=\"fas fa-solid fa-download\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory,useParams } from \"react-router-dom\";\nimport { MY_TICKETDETAILS,MY_TICKETCOMMENTS,MY_TICKETCOMMENTSSTORE} from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst TicketDetails = () => {\n  const history = useHistory();\n  const { ticketId } = useParams();\n  const [loader, setLoader] = useState(false);\n  const [tickets, setTicketdata] = useState([]);\n  const [ticketcomments, setTicketComments] = useState([]);\n  const [updateForm, setUpdateForm] = useState({\n    comment_text: \"\",\n  });\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getTicketDetails();\n  }, []);\n\n  //   Verify user\n  const getTicketDetails = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n        ticketId: ticketId,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(MY_TICKETDETAILS,body, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setTicketdata(data);\n        getTicketComments();\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.data.status == 422) {\n        toast.error(error.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  \n\n  const handleTickektsComments = async () => {\n    try {\n      setLoader(true);\n      const config = {\n        headers: {\n          Authorization: Cookies.get(\"token\"),\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        }\n      }\n      var userId =Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n      \n      const body = {\n        userId: userId.id,\n        ticket_id: ticketId,\n        comment_text: updateForm.comment_text,\n      };\n\n      const {\n        data: { status, data, message },\n      } = await axios.post(MY_TICKETCOMMENTSSTORE, body);\n      if (status == 200) {\n        getTicketComments();\n        setLoader(false);\n        toast.success(message);\n      }else{\n        setLoader(false);\n        toast.error(message);\n\n      }\n    } catch (err) {\n      console.log(err)\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description);\n      } else {\n        toast.error(\"Something went wrong, please try again..!\");\n      }\n      setLoader(false);\n    }\n\n\n  };\n\n  const getTicketComments = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n        ticketId: ticketId,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(MY_TICKETCOMMENTS,body, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setTicketComments(data);\n\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.data.status == 422) {\n        toast.error(error.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const handleEditChange = (e) => {\n    setUpdateForm({\n      ...updateForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const { isDarkMode} = useContext(ThemeContext);\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n            <span>\n              <Link to=\"/user/support\">\n                <i className=\"fas fa-chevron-left\" />\n                Ticket List\n              </Link>\n            </span>\n          </div>\n\n          <div className=\"row savedTest\">\n                <table className=\"table table-bordered table-striped\">\n                  <tbody>\n                      <tr>\n                          <th> IDh </th>\n                          <td>{tickets.id} </td>\n                      </tr>\n                      <tr>\n                          <th> Created at </th>\n                          <td> {getTestDate(tickets.created_at)} </td>\n                      </tr>\n                      <tr>\n                          <th> Title </th>\n                          <td> {tickets.title} </td>\n                      </tr>\n                      <tr>\n                          <th> Content </th>\n                          <td> {tickets.content} </td>\n                      </tr>\n                      \n                      <tr>\n                          <th> Status </th>\n                          <td> \n                            {tickets.status_id && tickets.status_id==3?(\n                              <span className=\"badge-success badge mr-2\">Open</span>\n                            ):(\n                              <>\n                                {tickets.status_id==4?(\n                                  <span className=\"badge-danger badge mr-2\">Close</span>\n                                ):(\n                                  <span className=\"badge-warning badge mr-2\">Awaiting</span>\n                                )}\n                              </>\n                            )}\n                          </td>\n                      </tr>\n                      \n                      <tr>\n                          <th> Category </th>\n                          <td>{tickets.category_name}</td>\n                      </tr>\n                      <tr>\n                          <th> Author Name </th>\n                          <td> {tickets.author_name} </td>\n                      </tr>\n                      <tr>\n                          <th> Author Email </th>\n                          <td> {tickets.author_email} </td>\n                      </tr>\n                      \n                      <tr>\n                          <th> Comments </th>\n                          <td>\n                          {ticketcomments.length ? (\n                            ticketcomments.map((item, index) => (\n                              <>\n                              <div className=\"row\">\n                                <div className=\"col\">\n                                  <p className=\"font-weight-bold\">\n                                    <a href=\"#\">{item.author_name}</a> {getTestDate(item.created_at)}</p>\n                                  <p>{item.comment_text}</p>\n                                </div>\n                              </div>\n                            <hr/>\n                            </>\n                            ))\n                          ) : (\n                            <>\n                              <div className=\"row\">\n                                \n                              </div>\n                            </>\n                          )}\n                        \n                            {loader && <Spinner />}\n                            <hr/>\n                              <div className=\"form-group\">\n                                <label for=\"comment_text\">Leave a comment</label>\n                                <textarea className=\"form-control\" value={updateForm.comment_text} onChange={handleEditChange} id=\"comment_text\" name=\"comment_text\" rows=\"3\" required=\"\"></textarea>\n                              </div>\n\n                              <button\n                                value=\"Save Feedback\"\n                                className=\"common-btn\"\n                                onClick={handleTickektsComments}\n                                disabled={loader}\n                              >\n                                      Submit\n                                    {loader && \"...\"}\n                              </button>\n                              \n                          </td>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default TicketDetails;\n","import React, { useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport { Link,useHistory } from \"react-router-dom\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport Cookies from \"js-cookie\";\nimport {CREATE_TICKET,GET_TICKETSTATUS} from \"../../components/Api\";\nimport { toast } from \"react-toastify\";\n\nconst CreateTicket = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [category, setCategory] = useState();\n  const [testData, setTestData] = useState({ type: 1 });\n  const [updateForm, setUpdateForm] = useState({\n    title:\"\",\n    content: \"\",\n    category_id: \"\",\n  });\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  //Get courses on page load\n  const getCategory = async () => {\n    try {\n      setLoader(true);\n      const {\n        data: { data, status },\n      } = await axios.get(GET_TICKETSTATUS);\n      if (status == 200) {\n        setLoader(false);\n        setCategory(data);\n      }\n    } catch (err) {\n      setLoader(false);\n      toast.error(\"Something went wrong please try again..!\");\n    }\n  };\n\n  const handleEditChange = (e) => {\n    setUpdateForm({\n      ...updateForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n\n  const handleCategoryChange = async (e) => {\n    var id = e.target.value;\n    if (!isNaN(id)) {\n      setTestData({\n        ...testData,\n        categoryId: id,\n      });\n    }\n  };\n\n  const handleCreateTicket = async (e) => {\n    try {\n      setLoader(true);\n      if (updateForm.title==\"\") {\n        toast.error('Title Must be fill');\n        setLoader(false);\n      }else{\n        if (updateForm.content==\"\") {\n          toast.error('Content Must be fill');\n          setLoader(false);\n        }else{\n          if (isNaN(testData.categoryId)) {\n            toast.error('Must Select a Category');\n            setLoader(false);\n          }else{\n            const config = {\n              headers: {\n                Authorization: Cookies.get(\"token\"),\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\",\n              }\n            }\n            var userId =Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n            \n            const body = {\n              userId: userId.id,\n              title:updateForm.title,\n              content: updateForm.content,\n              category_id: testData.categoryId,\n            };\n      \n            const {\n              data: { status, data, message },\n            } = await axios.post(CREATE_TICKET, body);\n            if (status == 200) {\n              setLoader(false);\n              toast.success(message);\n              history.push(\"/user/support\");\n            }else{\n              setLoader(false);\n              toast.error(message);\n      \n            }\n          }\n        }\n      }\n      \n    } catch (err) {\n      console.log(err)\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description);\n      } else {\n        toast.error(\"Something went wrong, please try again..!\");\n      }\n      setLoader(false);\n    }\n\n  };\n\n  return (\n    <>\n      <Header />\n\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination\">\n            <span>\n              <Link to=\"/user/support\">\n                <i className=\"fas fa-chevron-left\" />\n                Ticket List\n              </Link>\n            </span>\n          </div>\n          <div className=\"main-body\">\n            <div className=\"row gutters-sm search-section\">\n              <div className=\"col-md-12\">\n                <div className=\"card mb-3\">\n                  <div className=\"card-body\">\n                    <div className=\"tabbable-line\">\n                      <ul className=\"nav nav-tabs \">\n                        <li>\n                          <a\n                            href=\"#tab_default_1\"\n                            data-toggle=\"tab\"\n                            className=\"active\"\n                          >\n                            Create Ticket{\" \"}\n                          </a>\n                        </li>\n                       \n                      </ul>\n                      <div className=\"tab-content\">\n                        <div className=\"tab-pane active\" id=\"tab_default_1\">\n                          <div className=\"row\">\n                            <div className=\"sign-tab-detail col-md-12\">\n                              \n                              <div className=\"select-class select-testing\">\n                                <p className=\"text-dark\">Title</p>\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Title\"\n                                  name=\"title\"\n                                  value={updateForm.title}\n                                  onChange={handleEditChange}\n                                />\n                              </div>\n                            </div>\n                            <div className=\"sign-tab-detail col-md-12\">\n                              <div className=\"select-subject select-testing\">\n                                <p className=\"text-dark\">Content</p>\n                                <textarea value={updateForm.content} className=\"form-control\" name=\"content\" onChange={handleEditChange} />\n                              </div>\n                            </div>\n                            <div className=\"sign-tab-detail col-md-12\">\n                              <div className=\"select-subject select-testing\">\n                                <p className=\"text-dark\">Select Category</p>\n                                <select id=\"category_id\" name=\"category_id\" className=\"form-control\" onChange={handleCategoryChange}>\n                                <option value=''>Select Category</option>\n                                {category &&\n                                    category.map((item, index) => (\n                                      <option value={item.id} key={index}>\n                                        {\" \"}\n                                        {item.name}{\" \"}\n                                      </option>\n                                ))}\n                                    \n                                </select>\n                              </div>\n                              <div className=\"select-testing\">\n                                <div className=\"submit-btn\" style={{float:\"left\"}}>\n                                  <button\n                                    value=\"Save Feedback\"\n                                    className=\"common-btn\"\n                                    onClick={handleCreateTicket}\n                                    disabled={loader}\n                                  >\n                                          Submit\n                                        {loader && \"...\"}\n                                  </button>\n                                </div>\n                                \n                              </div>\n                              \n                            </div>\n                            \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n};\n\nexport default CreateTicket;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MY_TICKETLIST} from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst Supportlist = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [tickets, setTicketdata] = useState([]);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getTicketlist();\n  }, []);\n\n  //   Verify user\n  const getTicketlist = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(MY_TICKETLIST,body, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setTicketdata(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination row dash-graph\">\n            <div className=\"col-md-6\">\n              <span>\n                <Link to=\"/lms/dashboard\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                  <i className=\"fas fa-chevron-left\" />\n                  Dashboard\n                </Link>\n              </span>\n            </div>\n            <div className=\"col-md-6\">\n              <span className=\"right\">\n                <Link to=\"/lms/addticket\" className={`common-btn ${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                  Create Ticket\n                </Link>\n              </span>\n            </div>\n          </div>\n\n          <div className=\"row savedTest\">\n            {loader ? (\n              <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                {/* <div className=\"report-menu\">\n                <div className=\"category free-testing-tabs\">\n                  <ul>\n                    <li>\n                      <p>{report.userReport?.length}</p>\n                      Tests taken\n                    </li>\n                    <li>\n                      <p>{report.totalQues}</p>\n                      Questions seen\n                    </li>\n                    <li>\n                      <p>{report.totalTime}</p>\n                      Time spent\n                    </li>\n                  </ul>\n                </div>\n              </div> */}\n                \n                <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">S.no</th>\n                      <th scope=\"col\">Title</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Category</th>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\" style={{ width: \"10%\" }}>\n                        View\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tickets.length ? (\n                      tickets.map((item, index) => (\n                        <tr key={index}>\n                          <th scope=\"row\">{index + 1}</th>\n                          <th scope=\"row\"> {item.title}</th>\n                          <td>\n                            {item.status_id == 3 ? (\n                              <span className=\"badge-success badge mr-2\">\n                                Open\n                              </span>\n                            ) : (\n                              <>\n                                {item.status_id==4?(\n                                  <span className=\"badge-danger badge mr-2\">Close</span>\n                                ):(\n                                  <span className=\"badge-warning badge mr-2\">Awaiting</span>\n                                )}\n                              </>\n                            )}\n                          </td>\n                          <td>{item.category_name}</td>\n                          <td>{getTestDate(item.created_at)}</td>\n                          <td>\n                            <Link to={\"/lms/supportdetails/\" + item.id}>\n                              <span>\n                                View <i class=\"fas fa-chevron-right\"></i>\n                              </span>\n                            </Link>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={5}>No Ticket found..!</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default Supportlist;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditProfile from \"../../components/modals/edit\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { profile, userProfile } from \"../../features/userSlice\";\nimport Cookies from \"js-cookie\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { toast } from \"react-toastify\";\nimport { EDIT_PROFILE } from \"../../components/Api\";\nimport { global } from \"../../components/Config\";\nimport axios from \"axios\";\nimport { returnImageType } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\n\nconst MyProfile = () => {\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n  const userData = useSelector(userProfile).user.profile;\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n      Accept: \"application/json\",\n      \"Content-Type\": \"multipart/form-data\",\n    }\n  };\n  // const userData = JSON.parse(Cookies.get(\"user_data\"));\n  const [updatePassword, setUpdatePassword] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n\n\n  const handleEditChange = (e) => {\n    setUpdatePassword({\n      ...updatePassword,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handlePasswordChange\n  const handlePasswordChange = async (e) => {\n    e.preventDefault();\n    if (updatePassword.password == \"\") {\n      toast.error(\"Please enter your password\");\n      return false;\n    }\n    if (updatePassword.confirmPassword == \"\") {\n      toast.error(\"Please enter your confirm password\");\n      return false;\n    } else {\n      if (updatePassword.password != updatePassword.confirmPassword) {\n        toast.error(\"Passwords don't match.\");\n        return false;\n      }\n    }\n    try {\n      const bodyParameters = {\n        user_id: !!userData && userData.id,\n        first_name: !!userData && userData.first_name,\n        last_name: !!userData && userData.last_name,\n        password: updatePassword.password\n      }\n      setLoader(true);\n      const {\n        data: { message, status },\n      } = await axios.post(EDIT_PROFILE, bodyParameters, config);\n      if (status == 200) {\n        setLoader(false);\n        toast.success(message);\n        setUpdatePassword({\n          password: \"\",\n          confirmPassword: \"\",\n        });\n      } else {\n        setLoader(false);\n        toast.error(\"Something went wrong, please try again..!\");\n        //        toast.error(error_description);\n      }\n    } catch (err) {\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description);\n      }\n      setLoader(false);\n    }\n\n  }\n\n  // Onchange proile image\n  const uploadProfile = async (e) => {\n    try {\n      setLoader(true);\n      const body = new FormData();\n      body.append(\"user_id\", \"\" + !!userData && userData.id);\n      body.append(\"first_name\", \"\" + !!userData && userData.first_name);\n      body.append(\"last_name\", \"\" + !!userData && userData.last_name);\n      body.append(\"phoneno\", \"\" + !!userData && userData.phoneno);\n      body.append('image', e.target.files[0]);\n\n      const {\n        data: { status, data, message },\n      } = await axios.post(EDIT_PROFILE, body, config);\n      if (status == 200) {\n        var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n        let expiryObject = {\n          expires: inTwoMinutes,\n        };\n        Cookies.set(\"user_data\", JSON.stringify(data), expiryObject);\n        dispatch(profile({ profile: data }));\n\n        setLoader(false);\n        toast.success(message);\n      }else{\n        setLoader(false);\n        toast.error(message);\n\n      }\n    } catch (err) {\n      console.log(err)\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description);\n      } else {\n        toast.error(\"Something went wrong, please try again..!\");\n      }\n      setLoader(false);\n    }\n\n\n  }\n\n  return (\n    <>\n      <Header />\n\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination\">\n            <span>\n              <Link to=\"/lms/dashboard\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                <i className=\"fas fa-chevron-left\" />\n                My Account\n              </Link>\n            </span>\n          </div>\n          <div className=\"main-body\">\n            <div className=\"row gutters-sm\">\n              <div className=\"col-md-4 mb-3\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div className=\"d-flex flex-column align-items-center text-center profile-img\">\n                      <img\n                        src={\n                          !!userData?.image ?  \n                          returnImageType(userData?.image):\n                            \"assets/images/no-profile.png\"\n                        }\n                        alt=\"Admin\"\n                        className=\"rounded-circle\"\n                        width={150}\n                      />\n                      {loader && <Spinner />}\n                      <div className=\"file btn btn-lg btn-primary\">\n                        Change Photo\n                        <input type=\"file\" name=\"file\" accept=\"image/*\" onChange={uploadProfile} />\n                      </div>\n\n                      <div className=\"mt-3\">\n                        <h4 className=\" my_acount\">\n                          {!!userData && userData.first_name} {!!userData && userData.last_name}\n                        </h4>\n                        <p className=\"text-secondary mb-1\">\n                          {!!userData && userData.email}\n                        </p>\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-8\">\n                <div className=\"card mb-3\">\n                  <div className=\"card-body\">\n                    <div className=\"tabbable-line\">\n                      <ul className=\"nav nav-tabs text-dark\">\n                        <li>\n                          <a\n                            href=\"#tab_default_1\"\n                            data-toggle=\"tab\"\n                            className=\"active\"\n                          >\n                            User Detail{\" \"}\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#tab_default_2\" data-toggle=\"tab\">\n                            Change password{\" \"}\n                          </a>\n                        </li>\n                      </ul>\n                      <div className=\"tab-content\">\n                        <div className=\"tab-pane active\" id=\"tab_default_1\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-3\">\n                              <h5 className=\"mb-0 my_acount\">Full Name</h5>\n                            </div>\n                            <div className=\"col-sm-9 text-secondary\">\n                              {!!userData && userData.first_name} {!!userData && userData.last_name}\n                            </div>\n                          </div>\n                          <hr />\n                          <div className=\"row\">\n                            <div className=\"col-sm-3\">\n                              <h5 className=\"mb-0 my_acount\">Email</h5>\n                            </div>\n                            <div className=\"col-sm-9 text-secondary\">\n                              {!!userData && userData.email}\n                            </div>\n                          </div>\n                          <hr />\n                          <div className=\"row\">\n                            <div className=\"col-sm-3\">\n                              <h5 className=\"mb-0 my_acount\">Phone</h5>\n                            </div>\n                            <div className=\"col-sm-9 text-secondary\">\n                              {!!userData && userData.phoneno}\n                            </div>\n                          </div>\n                          <hr />\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <Link\n                                className=\"common-btn\"\n                                to=\"#\"\n                                onClick={() => setOpen(true)}\n                              >\n                                Edit\n                                \n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"tab-pane\" id=\"tab_default_2\">\n                          <h4 style={{color: '#000'}}> Change password </h4>\n                          <div className=\"sign-tab-detail col-12\">\n                            <form action=\"#\">\n                              <div className=\"form-group\">\n                                <input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={updatePassword.password}\n                                  onChange={handleEditChange}\n                                />\n                              </div>\n                              <div className=\"form-group\">\n                                <input\n                                  type=\"password\"\n                                  placeholder=\"Confim password\"\n                                  name=\"confirmPassword\"\n                                  value={updatePassword.confirmPassword}\n                                  onChange={handleEditChange}\n                                />\n                              </div>\n\n                              <div className=\"form-group\">\n                                {loader && <Spinner />}\n                                <button\n                                  type=\"submit\"\n                                  className=\"common-btn\"\n                                  onClick={handlePasswordChange}\n                                >\n                                  Change password\n                                {loader && \"...\"}\n                                </button>\n                              </div>\n                            </form>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <EditProfile show={open} closePop={handleCloseModal} />\n      </section>\n\n      <Footer />\n    </>\n  );\n};\n\nexport default MyProfile;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory,useParams } from \"react-router-dom\";\nimport { MY_TICKETDETAILS,MY_TICKETCOMMENTS,MY_TICKETCOMMENTSSTORE} from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst TicketDetails = () => {\n  const history = useHistory();\n  const { ticketId } = useParams();\n  const [loader, setLoader] = useState(false);\n  const [tickets, setTicketdata] = useState([]);\n  const [ticketcomments, setTicketComments] = useState([]);\n  const [updateForm, setUpdateForm] = useState({\n    comment_text: \"\",\n  });\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getTicketDetails();\n  }, []);\n\n  //   Verify user\n  const getTicketDetails = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n        ticketId: ticketId,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(MY_TICKETDETAILS,body, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setTicketdata(data);\n        getTicketComments();\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.data.status == 422) {\n        toast.error(error.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  \n\n  const handleTickektsComments = async () => {\n    try {\n      setLoader(true);\n      const config = {\n        headers: {\n          Authorization: Cookies.get(\"token\"),\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        }\n      }\n      var userId =Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n      \n      const body = {\n        userId: userId.id,\n        ticket_id: ticketId,\n        comment_text: updateForm.comment_text,\n      };\n\n      const {\n        data: { status, data, message },\n      } = await axios.post(MY_TICKETCOMMENTSSTORE, body);\n      if (status == 200) {\n        getTicketComments();\n        setUpdateForm({\n          comment_text: '',\n        });\n        setLoader(false);\n        toast.success(message);\n      }else{\n        setLoader(false);\n        toast.error(message);\n\n      }\n    } catch (err) {\n      console.log(err)\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description);\n      } else {\n        toast.error(\"Something went wrong, please try again..!\");\n      }\n      setLoader(false);\n    }\n\n\n  };\n\n  const getTicketComments = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n        ticketId: ticketId,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(MY_TICKETCOMMENTS,body, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setTicketComments(data);\n\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.data.status == 422) {\n        toast.error(error.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const handleEditChange = (e) => {\n    setUpdateForm({\n      ...updateForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n            <span>\n              <Link to=\"/lms/support\">\n                <i className=\"fas fa-chevron-left\" />\n                Ticket List\n              </Link>\n            </span>\n          </div>\n\n          <div className=\"row savedTest\">\n                <table className=\"table table-bordered table-striped\">\n                  <tbody className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                      <tr>\n                          <th> IDh </th>\n                          <td>{tickets.id} </td>\n                      </tr>\n                      <tr>\n                          <th> Created at </th>\n                          <td> {getTestDate(tickets.created_at)} </td>\n                      </tr>\n                      <tr>\n                          <th> Title </th>\n                          <td> {tickets.title} </td>\n                      </tr>\n                      <tr>\n                          <th> Content </th>\n                          <td> {tickets.content} </td>\n                      </tr>\n                      \n                      <tr>\n                          <th> Status </th>\n                          <td> \n                            {tickets.status_id && tickets.status_id==3?(\n                              <span className=\"badge-success badge mr-2\">Open</span>\n                            ):(\n                              <>\n                                {tickets.status_id==4?(\n                                  <span className=\"badge-danger badge mr-2\">Close</span>\n                                ):(\n                                  <span className=\"badge-warning badge mr-2\">Awaiting</span>\n                                )}\n                              </>\n                            )}\n                          </td>\n                      </tr>\n                      \n                      <tr>\n                          <th> Category </th>\n                          <td>{tickets.category_name}</td>\n                      </tr>\n                      <tr>\n                          <th> Author Name </th>\n                          <td> {tickets.author_name} </td>\n                      </tr>\n                      <tr>\n                          <th> Author Email </th>\n                          <td> {tickets.author_email} </td>\n                      </tr>\n                      \n                      <tr>\n                          <th> Comments </th>\n                          <td>\n                          {ticketcomments.length ? (\n                            ticketcomments.map((item, index) => (\n                              <>\n                              <div className=\"row\">\n                                <div className=\"col\">\n                                  <p className=\"font-weight-bold\">\n                                    <a href=\"#\">{item.author_name}</a> {getTestDate(item.created_at)}</p>\n                                  <p>{item.comment_text}</p>\n                                </div>\n                              </div>\n                            <hr/>\n                            </>\n                            ))\n                          ) : (\n                            <>\n                              <div className=\"row\">\n                                \n                              </div>\n                            </>\n                          )}\n                        \n                            {loader && <Spinner />}\n                            <hr/>\n                              <div className=\"form-group\">\n                                <label for=\"comment_text\">Leave a comment</label>\n                                <textarea className=\"form-control\" value={updateForm.comment_text} onChange={handleEditChange} id=\"comment_text\" name=\"comment_text\" rows=\"3\" required=\"\"></textarea>\n                              </div>\n\n                              <button\n                                value=\"Save Feedback\"\n                                className=\"common-btn\"\n                                onClick={handleTickektsComments}\n                                disabled={loader}\n                              >\n                                      Submit\n                                    {loader && \"...\"}\n                              </button>\n                              \n                          </td>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default TicketDetails;\n","import React, { useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport { Link,useHistory } from \"react-router-dom\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport Cookies from \"js-cookie\";\nimport {CREATE_TICKET,GET_TICKETSTATUS} from \"../../components/Api\";\nimport { toast } from \"react-toastify\";\n\nconst CreateTicket = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [category, setCategory] = useState();\n  const [testData, setTestData] = useState({ type: 1 });\n  const [updateForm, setUpdateForm] = useState({\n    title:\"\",\n    content: \"\",\n    category_id: \"\",\n  });\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  //Get courses on page load\n  const getCategory = async () => {\n    try {\n      setLoader(true);\n      const {\n        data: { data, status },\n      } = await axios.get(GET_TICKETSTATUS);\n      if (status == 200) {\n        setLoader(false);\n        setCategory(data);\n      }\n    } catch (err) {\n      setLoader(false);\n      toast.error(\"Something went wrong please try again..!\");\n    }\n  };\n\n  const handleEditChange = (e) => {\n    setUpdateForm({\n      ...updateForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n\n  const handleCategoryChange = async (e) => {\n    var id = e.target.value;\n    if (!isNaN(id)) {\n      setTestData({\n        ...testData,\n        categoryId: id,\n      });\n    }\n  };\n\n  const handleCreateTicket = async (e) => {\n    try {\n      setLoader(true);\n      if (updateForm.title==\"\") {\n        toast.error('Title Must be fill');\n        setLoader(false);\n      }else{\n        if (updateForm.content==\"\") {\n          toast.error('Content Must be fill');\n          setLoader(false);\n        }else{\n          if (isNaN(testData.categoryId)) {\n            toast.error('Must Select a Category');\n            setLoader(false);\n          }else{\n            const config = {\n              headers: {\n                Authorization: Cookies.get(\"token\"),\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\",\n              }\n            }\n            var userId =Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n            \n            const body = {\n              userId: userId.id,\n              title:updateForm.title,\n              content: updateForm.content,\n              category_id: testData.categoryId,\n            };\n      \n            const {\n              data: { status, data, message },\n            } = await axios.post(CREATE_TICKET, body);\n            if (status == 200) {\n              setLoader(false);\n              toast.success(message);\n              history.push(\"/lms/support\");\n            }else{\n              setLoader(false);\n              toast.error(message);\n      \n            }\n          }\n        }\n      }\n      \n    } catch (err) {\n      console.log(err)\n      if (err.response?.data?.status == 400) {\n        toast.error(err.response?.data?.error_description);\n      } else {\n        toast.error(\"Something went wrong, please try again..!\");\n      }\n      setLoader(false);\n    }\n\n  };\n\n  return (\n    <>\n      <Header />\n\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination\">\n            <span>\n              <Link to=\"/lms/support\">\n                <i className=\"fas fa-chevron-left\" />\n                Ticket List\n              </Link>\n            </span>\n          </div>\n          <div className=\"main-body\">\n            <div className=\"row gutters-sm search-section\">\n              <div className=\"col-md-12\">\n                <div className=\"card mb-3\">\n                  <div className=\"card-body\">\n                    <div className=\"tabbable-line\">\n                      <ul className=\"nav nav-tabs \">\n                        <li>\n                          <a\n                            href=\"#tab_default_1\"\n                            data-toggle=\"tab\"\n                            className=\"active\"\n                          >\n                            Create Ticket{\" \"}\n                          </a>\n                        </li>\n                       \n                      </ul>\n                      <div className=\"tab-content\">\n                        <div className=\"tab-pane active\" id=\"tab_default_1\">\n                          <div className=\"row\">\n                            <div className=\"sign-tab-detail col-md-12\">\n                              \n                              <div className=\"select-class select-testing\">\n                                <p>Title</p>\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Title\"\n                                  name=\"title\"\n                                  value={updateForm.title}\n                                  onChange={handleEditChange}\n                                />\n                              </div>\n                            </div>\n                            <div className=\"sign-tab-detail col-md-12\">\n                              <div className=\"select-subject select-testing\">\n                                <p>Content</p>\n                                <textarea value={updateForm.content} className=\"form-control\" name=\"content\" onChange={handleEditChange} />\n                              </div>\n                            </div>\n                            <div className=\"sign-tab-detail col-md-12\">\n                              <div className=\"select-subject select-testing\">\n                                <p>Select Category</p>\n                                <select id=\"category_id\" name=\"category_id\" className=\"form-control\" onChange={handleCategoryChange}>\n                                <option value=''>Select Category</option>\n                                {category &&\n                                    category.map((item, index) => (\n                                      <option value={item.id} key={index}>\n                                        {\" \"}\n                                        {item.name}{\" \"}\n                                      </option>\n                                ))}\n                                    \n                                </select>\n                              </div>\n                              <div className=\"select-testing\">\n                                <div className=\"submit-btn\" style={{float:\"left\"}}>\n                                  <button\n                                    value=\"Save Feedback\"\n                                    className=\"common-btn\"\n                                    onClick={handleCreateTicket}\n                                    disabled={loader}\n                                  >\n                                          Submit\n                                        {loader && \"...\"}\n                                  </button>\n                                </div>\n                                \n                              </div>\n                              \n                            </div>\n                            \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n};\n\nexport default CreateTicket;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory, useParams} from \"react-router-dom\";\nimport { LMS_TEACHER_SEND_REQUEST,LMS_REQUESTED_TEACHER,SEARCH_TEACHER_BY_EMAIL } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst SubscribeUsers = () => {\n  const { TeacherId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [subscription, setSubscription] = useState([]);\n  const [accepted, setAccepted] = useState([]);\n  const [pendingconfirm, setPending_confirm] = useState([]);\n  const [pendingrequest, setPending_request] = useState([]);\n  const [updateForm, setUpdateForm] = useState({\n    searchstudentbyemail:\"\",\n  });\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionsstudent();\n  }, []);\n\n  //   Verify user\n  const getSubscription = async () => {\n    try {\n      setLoader(false);\n      const body = {\n        searchstudentbyemail: updateForm.searchstudentbyemail,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(SEARCH_TEACHER_BY_EMAIL, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n  const getSubscriptionrequest = async () => {\n    try {\n      setLoader(true);\n      const body = {\n        student_id: userData ? userData.id : false,\n        teacher_id: TeacherId,\n        request_from:userData ? userData.id : false,\n        userId: userData ? userData.id : false,\n        userRole:userData ? userData.affiliate_role : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_TEACHER_SEND_REQUEST, body);\n      //console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const getSubscriptionsstudent = async () => {\n    try {\n      setLoader(false);\n      const body = {\n        userId: userData ? userData.id : false,\n        userRole:userData ? userData.affiliate_role : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_REQUESTED_TEACHER, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setAccepted(data.accepted);\n        setPending_confirm(data.pending_confirm);\n        setPending_request(data.pending_request);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const handleEditChange = (e) => {\n    setUpdateForm({\n      ...updateForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n            <span>\n              <Link to=\"/user/dashboard\">\n                <i className=\"fas fa-chevron-left\" />\n                Subscription\n              </Link>\n            </span>\n          </div>\n\n          <div className=\"row savedTest\">\n            {loader ? (\n              <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                <div className=\"col-md-5\">\n                  <div className=\"row savedTest\" >\n                    <h4>Teacher/Parent List</h4>\n                    <br/>\n                    <div className=\"serach-box row\">\n                      <div className=\"col-8\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Search student by email\"\n                          name=\"searchstudentbyemail\" \n                          value={updateForm.searchstudentbyemail} \n                          onChange={handleEditChange}\n                        />\n                      </div>\n                      <div className=\"col-4\">\n                        <span\n                          className=\"common-btn\"\n                          onClick={getSubscription}\n                        >\n                          Search\n                        </span>\n                      </div>\n                    </div>\n                    <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">S.no</th>\n                          <th scope=\"col\">Name</th>\n                          <th scope=\"col\">Email</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\" style={{ width: \"10%\" }}>\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        \n                        {subscription.length ? (\n                          subscription.map((item, index) => (\n                            <tr key={index}>\n                              <th>{index + 1}</th>\n                              <th> {item.first_name} {item.last_name}</th>\n                              <th> {item.email}</th>\n                              \n                              <td>\n                                {item.status == 1 ? (\n                                  <span className=\"badge-success badge mr-2\">\n                                    Active\n                                  </span>\n                                ) : (\n                                  <span className=\"badge-danger badge mr-2\">\n                                    Inactive\n                                  </span>\n                                )}\n                              </td>\n                              <td>\n                                <Link className=\"badge-danger badge mr-2\" to={\"/lms/teachersubscriptionrequest/\" + item.id}>\n                                  <span>\n                                    Request\n                                  </span>\n                                </Link>\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={5}>No subscription found..!</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div className=\"col-md-2\"></div>\n                <div className=\"col-md-5\">\n                  <div className=\"row savedTest\" >\n                    <h4>List of Teacher/Parent</h4>\n                    <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">S.no</th>\n                          <th scope=\"col\">Name</th>\n                          <th scope=\"col\">Email</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\" style={{ width: \"20%\" }}>\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {accepted.length ? (\n                          accepted.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                              <th scope=\"row\"> {item.email}</th>\n                              \n                              <td>\n                                {item.status == 1 ? (\n                                  <span className=\"badge-success badge mr-2\">\n                                    Active\n                                  </span>\n                                ) : (\n                                  <span className=\"badge-danger badge mr-2\">\n                                    Inactive\n                                  </span>\n                                )}\n                              </td>\n                              <td>\n                                <Link className=\"badge-danger badge mr-2\" to={\"/lms/subscriptionblockteacher/\" + item.id}>\n                                  <span>\n                                    Delete\n                                  </span>\n                                </Link>\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={5}>No subscription found..!</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                    \n                  </div>\n                </div>\n                <div className=\"col-md-5\">\n                  <div className=\"row savedTest\" >\n                    <h4>Waiting for Confirmation</h4>\n                    <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                      <thead>\n                      <tr>\n                          <th scope=\"col\">S.no</th>\n                          <th scope=\"col\">Name</th>\n                          <th scope=\"col\">Emai</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\" style={{ width: \"20%\" }}>\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {pendingconfirm.length ? (\n                          pendingconfirm.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                              <th scope=\"row\"> {item.email}</th>\n                              \n                              <td>\n                                {item.status == 1 ? (\n                                  <span className=\"badge-success badge mr-2\">\n                                    Active\n                                  </span>\n                                ) : (\n                                  <span className=\"badge-danger badge mr-2\">\n                                    Inactive\n                                  </span>\n                                )}\n                              </td>\n                              <td>\n                                <Link className=\"badge-danger badge mr-2\" to={\"/lms/request-cancle/\" + item.id}>\n                                  <span>\n                                    Cancel\n                                  </span>\n                                </Link>\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={5}>No subscription found..!</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                    \n                  </div>\n                </div>\n                <div className=\"col-md-2\"></div>\n                <div className=\"col-md-5\">\n                  <div className=\"row savedTest\" >\n                    <h4>Pending for Confirmation</h4>\n                    <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                      <thead>\n                      <tr>\n                          <th scope=\"col\">S.no</th>\n                          <th scope=\"col\">Name</th>\n                          <th scope=\"col\">Email</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\" style={{ width: \"20%\" }}>\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {pendingrequest.length ? (\n                          pendingrequest.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                              <th scope=\"row\"> {item.email}</th>\n                              \n                              <td>\n                                {item.status == 1 ? (\n                                  <span className=\"badge-success badge mr-2\">\n                                    Active\n                                  </span>\n                                ) : (\n                                  <span className=\"badge-danger badge mr-2\">\n                                    Inactive\n                                  </span>\n                                )}\n                              </td>\n                              <td>\n                                <div className=\"row\">\n                                  <div className=\"col-5\">\n                                    <Link className=\"badge-danger badge mr-2\" to={\"/lms/subscriptionblockteacher/\" + item.id}>\n                                      <span>\n                                        Delete\n                                      </span>\n                                    </Link>\n                                  </div>\n                                  <div className=\"col-5\">\n                                    <Link className=\"badge-success badge mr-2\" to={\"/lms/request-accept/\" + item.id}>\n                                      <span>\n                                        Accept\n                                      </span>\n                                    </Link>\n                                  </div>\n                                </div>\n                                \n                                \n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={5}>No subscription found..!</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                    \n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default SubscribeUsers;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    LOGIN_AFFILIATE,\n    REGISTER,\n    REGISTER_AFFILIATE,\n} from \"../../components/Api\";\nimport { validateEmail } from \"../../components/CommonFunction\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport Cookies from \"js-cookie\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { login, profile } from \"../../features/userSlice\";\n\nconst SignIn = (props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [loader, setLoader] = useState(false);\n    const [warnpassword, setwarnpassword] = useState(false);\n    const [eye, seteye] = useState(true);\n    const [password, setpassword] = useState(\"password\");\n    const [type, settype] = useState(false);\n    const [eye2, seteye2] = useState(true);\n    const [password2, setpassword2] = useState(\"password\");\n    const [type2, settype2] = useState(false);\n\n    const [loginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        affiliate_login_type: 5,\n    });\n\n    const Eye = () => {\n        if (password == \"password\") {\n            setpassword(\"text\");\n            seteye(false);\n            settype(true);\n        }\n        else {\n            setpassword(\"password\");\n            seteye(true);\n            settype(false);\n        }\n    }\n\n    const Eye2 = () => {\n        if (password2 == \"password\") {\n            setpassword2(\"text\");\n            seteye2(false);\n            settype2(true);\n        }\n        else {\n            setpassword2(\"password\");\n            seteye2(true);\n            settype2(false);\n        }\n    }\n\n    const [registerForm, setRegisterForm] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneno: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        affiliate_type: 5,\n        referral_code: \"\",\n    });\n\n    const handleRegisterChange = (e) => {\n        if (e.target.name == \"affiliate_type\" && e.target.value == 5) {\n            setTimeout(() => {\n                setRegisterForm({\n                    ...registerForm,\n                    affiliate_type: 5,\n                    referral_code: \"\",\n                });\n            }, 200);\n        }\n\n        setRegisterForm({\n            ...registerForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    // User register\n    const register = async (e) => {\n        e.preventDefault();\n        if (registerForm.firstName == \"\") {\n            toast.error(\"Please enter your first name\");\n            return false;\n        }\n        if (registerForm.lastName == \"\") {\n            toast.error(\"Please enter your last name\");\n            return false;\n        }\n        if (registerForm.email == \"\") {\n            toast.error(\"Please enter your email\");\n            return false;\n        } else {\n            if (!validateEmail(registerForm.email)) {\n                toast.error(\"Please enter valid email\");\n                return false;\n            }\n        }\n        if (registerForm.phoneno == \"\") {\n            toast.error(\"Please enter your phone number\");\n            return false;\n        } else {\n            if (!registerForm.phoneno.match(\"[0-9]{9,15}\")) {\n                toast.error(\"Please enter valid phone number\");\n                return false;\n            }\n        }\n        if (registerForm.password == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        if (registerForm.confirmPassword == \"\") {\n            toast.error(\"Please enter your confirm password\");\n            return false;\n        } else {\n            if (registerForm.password != registerForm.confirmPassword) {\n                toast.error(\"Passwords don't match.\");\n                return false;\n            }\n        }\n        if (registerForm.affiliate_type == \"\") {\n            toast.error(\"Please choose affiliate type\");\n            return false;\n        }\n\n        const body = {\n            firstName: registerForm.firstName,\n            lastName: registerForm.lastName,\n            email: registerForm.email,\n            password: registerForm.password,\n            phoneno: registerForm.phoneno,\n            affiliate_type: registerForm.affiliate_type,\n            referral_code: registerForm.referral_code,\n            phoneno: registerForm.phoneno,\n        };\n        try {\n            setLoader(true);\n            const {\n                data: { message, status, error_description },\n            } = await axios.post(REGISTER_AFFILIATE, body);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(message);\n                history.push(\"/\");\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (err) {\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            }\n            setLoader(false);\n        }\n    };\n\n    //   Affiliate Login\n\n    const handleLoginChange = (e) => {\n        setLoginForm({\n            ...loginForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n    // Login user\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        if (loginForm.email == \"\") {\n            toast.error(\"Please enter your email or phone number\");\n            return false;\n        }\n        if (loginForm.password == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        if (loginForm.affiliate_login_type == \"\") {\n            toast.error(\"Please choose affiliate type\");\n            return false;\n        }\n        try {\n            // const body2 = {\n            //   _token:\"jOXiu1ib9sy95hCp4xgGsC82736bPUtYj4ufp5Zs\",\n            //   email:loginForm.email,\n            //   password:loginForm.password,\n            // };\n            // const {\n            //   data: { status2, data2 },\n            // } = await axios.post('https://examtice.com/support/login', body2, config);\n            //setLoginForm({});\n            setLoader(true);\n            const body = {\n                login: loginForm.email,\n                password: loginForm.password,\n                affiliate_type: loginForm.affiliate_login_type,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LOGIN_AFFILIATE, body);\n            if (status == 200) {\n                //var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                var inTwoMinutes = new Date(\n                    new Date().getTime() + 60 * 60 * 24 * 1000 * 7\n                ); // 7 days\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                setLoader(false);\n                dispatch(profile({ profile: data.user }));\n                Cookies.set(\"token\", \"bearer \" + data.token.access_token, expiryObject);\n                Cookies.set(\"user_data\", JSON.stringify(data.user), expiryObject);\n\n                toast.success(message);\n                setTimeout(() => {\n                    dispatch(login(data.user));\n                    history.push(\"/affiliate/dashboard\");\n                }, 200);\n            }\n        } catch (error) {\n            if (error.response?.data?.status == 401) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n    };\n\n    return (\n        <>\n            <Header />\n            {/* <section className=\"inner-banner\">\n        {\" \"}\n        <img src=\"assets/images/affiliate-banner.jpg\" alt=\"\" />\n        <div className=\"inner-banner-overlay\">\n          <h2>Affiliate Sign-In </h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n            commodo ligula eget dolor. Aenean massa. Cum sociis natoque\n            penatibus et magnis dis parturient montes, nascetur ridiculus\n            mus.Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n            commodo ligula eget dolor\n          </p>\n        </div>\n      </section> */}\n            <section className=\"become-affilated eshop\">\n                <div className=\"container\">\n                    <h2 className=\"page-heading\">Affiliate Sign-In </h2>\n                </div>\n            </section>\n            <section className=\"become-affilated affiliate_signin\">\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <div className=\"card\">\n                        <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n                            <li className=\"nav-item text-center\">\n                                {\" \"}\n                                <a\n                                    className=\"nav-link active btl\"\n                                    id=\"pills-home-tab\"\n                                    data-toggle=\"pill\"\n                                    href=\"#pills-home\"\n                                    role=\"tab\"\n                                    aria-controls=\"pills-home\"\n                                    aria-selected=\"true\"\n                                >\n                                    Login\n                                </a>{\" \"}\n                            </li>\n                            <li className=\"nav-item text-center\">\n                                {\" \"}\n                                <a\n                                    className=\"nav-link btr\"\n                                    id=\"pills-profile-tab\"\n                                    data-toggle=\"pill\"\n                                    href=\"#pills-profile\"\n                                    role=\"tab\"\n                                    aria-controls=\"pills-profile\"\n                                    aria-selected=\"false\"\n                                >\n                                    Signup\n                                </a>{\" \"}\n                            </li>\n                        </ul>\n                        <div className=\"tab-content register-modals\" id=\"pills-tabContent\">\n                            <div\n                                className=\"tab-pane fade show active sign-tab-detail\"\n                                id=\"pills-home\"\n                                role=\"tabpanel\"\n                                aria-labelledby=\"pills-home-tab\"\n                            >\n                                <div className=\"form px-4 pt-5\">\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Enter email or phone number\"\n                                            name=\"email\"\n                                            value={loginForm.email}\n                                            onChange={handleLoginChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type={password}\n                                            className={`${warnpassword ? \"warning\" : \"\"} ${type ? \"type_password\" : \"\"}`}\n                                            placeholder=\"Password\"\n                                            name=\"password\"\n                                            value={loginForm.password}\n                                            onChange={handleLoginChange}\n                                        />\n                                        <i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash aff-login-eye\" : \"fa-eye aff-login-eye\"}`}></i>\n                                    </div>\n                                    <div className=\"form-check-inline\" style={{ display: 'none' }}>\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"affiliate_login_type\"\n                                            htmlFor=\"agent\"\n                                            value={\"5\"}\n                                            checked={\n                                                loginForm.affiliate_login_type == 5 ? \"checked\" : \"checked\"\n                                            }\n                                            onChange={handleLoginChange}\n                                        />\n                                        <label className=\"form-check-label-inline\" htmlFor=\"agent\">\n                                            Agent\n                                        </label>\n                                    </div>\n                                    <div className=\"form-check-inline\" style={{ display: 'none' }}>\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"affiliate_login_type\"\n                                            htmlFor=\"partner\"\n                                            value={\"6\"}\n                                            checked={\n                                                loginForm.affiliate_login_type == 6 ? \"checked\" : \"\"\n                                            }\n                                            onChange={handleLoginChange}\n                                        />\n                                        <label\n                                            htmlFor=\"partner\"\n                                            className=\"form-check-label-inline\"\n                                        >\n                                            Partner\n                                        </label>\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <button\n                                            type=\"submit\"\n                                            value=\"SIGN IN\"\n                                            className=\"btn btn-dark btn-block\"\n                                            onClick={handleLogin}\n                                            disabled={loader}\n                                        >\n                                            SIGN IN {loader && \"...\"}\n                                            {loader && <Spinner />}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className=\"tab-pane fade sign-tab-detail\"\n                                id=\"pills-profile\"\n                                role=\"tabpanel\"\n                                aria-labelledby=\"pills-profile-tab\"\n                            >\n                                <div className=\"form px-4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"firstName\"\n                                                    value={registerForm.firstName}\n                                                    className=\"form-control\"\n                                                    placeholder=\"First name\"\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"lastName\"\n                                                    value={registerForm.lastName}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Last name\"\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"email\"\n                                            name=\"email\"\n                                            value={registerForm.email}\n                                            className=\"form-control\"\n                                            placeholder=\"Email\"\n                                            onChange={handleRegisterChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Phone number\"\n                                            className=\"form-control\"\n                                            minLength={10}\n                                            maxLength={15}\n                                            name=\"phoneno\"\n                                            value={registerForm.phoneno}\n                                            onChange={handleRegisterChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type={password2}\n                                            className={`${warnpassword ? \"warning\" : \"\"} ${type2 ? \"type_password\" : \"\"}`}\n                                            placeholder=\"Password\"\n                                            name=\"password\"\n                                            value={registerForm.password}\n                                            onChange={handleRegisterChange}\n                                        />\n                                        <i onClick={Eye2} className={`fa ${eye2 ? \"fa-eye-slash aff-signup-eye\" : \"fa-eye aff-signup-eye\"}`}></i>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            placeholder=\"Confirm password\"\n                                            name=\"confirmPassword\"\n                                            value={registerForm.confirmPassword}\n                                            onChange={handleRegisterChange}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-check-inline\" style={{ display: 'none' }}>\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"affiliate_type\"\n                                            value={\"5\"}\n                                            checked={\n                                                registerForm.affiliate_type == 5 ? \"checked\" : \"\"\n                                            }\n                                            onChange={handleRegisterChange}\n                                        />\n                                        <label className=\"form-check-label-inline\">Agent</label>\n                                    </div>\n                                    <div className=\"form-check-inline\" style={{ display: 'none' }}>\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"affiliate_type\"\n                                            value={\"6\"}\n                                            checked={\n                                                registerForm.affiliate_type == 6 ? \"checked\" : \"\"\n                                            }\n                                            onChange={handleRegisterChange}\n                                        />\n                                        <label className=\"form-check-label-inline\">Partner</label>\n                                    </div>\n                                    {!!registerForm.affiliate_type &&\n                                        registerForm.affiliate_type == 6 ? (\n                                        <input\n                                            type=\"text\"\n                                            name=\"referral_code\"\n                                            className=\"form-control\"\n                                            placeholder=\"Enter referal code\"\n                                            value={registerForm.referral_code}\n                                            onChange={handleRegisterChange}\n                                        />\n                                    ) : (\n                                        \"\"\n                                    )}\n                                    <div className=\"form-group\">\n                                        <button\n                                            className=\"btn btn-dark btn-block\"\n                                            value=\"REGISTER\"\n                                            onClick={register}\n                                            disabled={loader}\n                                        >\n                                            REGISTER {loader && \"...\"}\n                                            {loader && <Spinner />}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n};\n\nexport default SignIn;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    LOGIN_LMS,\n    REGISTER,\n    REGISTER_LMS,\n} from \"../../components/Api\";\nimport { validateEmail } from \"../../components/CommonFunction\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport Cookies from \"js-cookie\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { login, profile } from \"../../features/userSlice\";\n\nconst SignIn = (props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [loader, setLoader] = useState(false);\n    const [warnpassword, setwarnpassword] = useState(false);\n    const [eye, seteye] = useState(true);\n    const [password, setpassword] = useState(\"password\");\n    const [type, settype] = useState(false);\n    const [eye2, seteye2] = useState(true);\n    const [password2, setpassword2] = useState(\"password\");\n    const [type2, settype2] = useState(false);\n\n    const [loginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        learningmanagement_login_type: \"\",\n    });\n\n    const Eye = () => {\n        if (password == \"password\") {\n            setpassword(\"text\");\n            seteye(false);\n            settype(true);\n        }\n        else {\n            setpassword(\"password\");\n            seteye(true);\n            settype(false);\n        }\n    }\n\n    const Eye2 = () => {\n        if (password2 == \"password\") {\n            setpassword2(\"text\");\n            seteye2(false);\n            settype2(true);\n        }\n        else {\n            setpassword2(\"password\");\n            seteye2(true);\n            settype2(false);\n        }\n    }\n\n    const [registerForm, setRegisterForm] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneno: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        learningmanagement_type: \"\",\n        referral_code: \"\",\n    });\n\n    const handleRegisterChange = (e) => {\n        if (e.target.name == \"learningmanagement_type\" && e.target.value == 8) {\n            setTimeout(() => {\n                setRegisterForm({\n                    ...registerForm,\n                    learningmanagement_type: 8,\n                    //referral_code: \"\",\n                });\n            }, 200);\n        }\n\n        setRegisterForm({\n            ...registerForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    // User register\n    const register = async (e) => {\n        e.preventDefault();\n        if (registerForm.firstName == \"\") {\n            toast.error(\"Please enter your first name\");\n            return false;\n        }\n        if (registerForm.lastName == \"\") {\n            toast.error(\"Please enter your last name\");\n            return false;\n        }\n        if (registerForm.email == \"\") {\n            toast.error(\"Please enter your email\");\n            return false;\n        } else {\n            if (!validateEmail(registerForm.email)) {\n                toast.error(\"Please enter valid email\");\n                return false;\n            }\n        }\n        if (registerForm.phoneno == \"\") {\n            toast.error(\"Please enter your phone number\");\n            return false;\n        } else {\n            if (!registerForm.phoneno.match(\"[0-9]{9,15}\")) {\n                toast.error(\"Please enter valid phone number\");\n                return false;\n            }\n        }\n        if (registerForm.password == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        if (registerForm.confirmPassword == \"\") {\n            toast.error(\"Please enter your confirm password\");\n            return false;\n        } else {\n            if (registerForm.password != registerForm.confirmPassword) {\n                toast.error(\"Passwords don't match.\");\n                return false;\n            }\n        }\n        if (registerForm.learningmanagement_type == \"\") {\n            toast.error(\"Please choose learningmanagement type\");\n            return false;\n        }\n\n        const body = {\n            firstName: registerForm.firstName,\n            lastName: registerForm.lastName,\n            email: registerForm.email,\n            password: registerForm.password,\n            phoneno: registerForm.phoneno,\n            learningmanagement_type: registerForm.learningmanagement_type,\n            referral_code: registerForm.referral_code,\n            phoneno: registerForm.phoneno,\n        };\n        try {\n            setLoader(true);\n            const {\n                data: { message, status, error_description },\n            } = await axios.post(REGISTER_LMS, body);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(message);\n                history.push(\"/\");\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (err) {\n            if (err.response?.data?.status == 400) {\n                toast.error(err.response?.data?.error_description);\n            }\n            setLoader(false);\n        }\n    };\n\n    //   Affiliate Login\n\n    const handleLoginChange = (e) => {\n        setLoginForm({\n            ...loginForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n\n    // Login user\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        if (loginForm.email == \"\") {\n            toast.error(\"Please enter your email or phone number\");\n            return false;\n        }\n        if (loginForm.password == \"\") {\n            toast.error(\"Please enter your password\");\n            return false;\n        }\n        if (loginForm.learningmanagement_login_type == \"\") {\n            toast.error(\"Please choose Learning Management System type\");\n            return false;\n        }\n        try {\n            //setLoginForm({});\n            // const body2 = {\n            //   _token:\"jOXiu1ib9sy95hCp4xgGsC82736bPUtYj4ufp5Zs\",\n            //   email:loginForm.email,\n            //   password:loginForm.password,\n            // };\n            // const {\n            //   data: { status2, data2 },\n            // } = await axios.post('https://examtice.com/support/login', body2, config);\n\n            setLoader(true);\n            const body = {\n                login: loginForm.email,\n                password: loginForm.password,\n                learningmanagement_type: loginForm.learningmanagement_login_type,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LOGIN_LMS, body);\n            if (status == 200) {\n                //var inTwoMinutes = new Date(new Date().getTime() + 360 * 60 * 1000);\n                var inTwoMinutes = new Date(\n                    new Date().getTime() + 60 * 60 * 24 * 1000 * 7\n                ); // 7 days\n                let expiryObject = {\n                    expires: inTwoMinutes,\n                };\n                setLoader(false);\n                dispatch(profile({ profile: data.user }));\n                Cookies.set(\"token\", \"bearer \" + data.token.access_token, expiryObject);\n                Cookies.set(\"user_data\", JSON.stringify(data.user), expiryObject);\n\n                toast.success(message);\n                setTimeout(() => {\n                    dispatch(login(data.user));\n                    history.push(\"/lms/dashboard\");\n                }, 200);\n            }\n        } catch (error) {\n            if (error.response?.data?.status == 401) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again..!\");\n            }\n            setLoader(false);\n        }\n    };\n\n    return (\n        <>\n            <Header />\n            <section className=\"become-affilated eshop\">\n                <div className=\"container\">\n                    <h2 className=\"page-heading\">Learning Management System Sign-In </h2>\n                </div>\n            </section>\n            <section className=\"become-affilated learningmanagement_signin\">\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <div className=\"card\">\n                        <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n                            <li className=\"nav-item text-center\">\n                                {\" \"}\n                                <a\n                                    className=\"nav-link active btl\"\n                                    id=\"pills-home-tab\"\n                                    data-toggle=\"pill\"\n                                    href=\"#pills-home\"\n                                    role=\"tab\"\n                                    aria-controls=\"pills-home\"\n                                    aria-selected=\"true\"\n                                >\n                                    Login\n                                </a>\n                                {\" \"}\n                            </li>\n                            <li className=\"nav-item text-center\">\n                                {\" \"}\n                                <a\n                                    className=\"nav-link btr\"\n                                    id=\"pills-profile-tab\"\n                                    data-toggle=\"pill\"\n                                    href=\"#pills-profile\"\n                                    role=\"tab\"\n                                    aria-controls=\"pills-profile\"\n                                    aria-selected=\"false\"\n                                >\n                                    Signup\n                                </a>{\" \"}\n                            </li>\n                        </ul>\n                        <div className=\"tab-content register-modals\" id=\"pills-tabContent\">\n                            <div\n                                className=\"tab-pane fade show active sign-tab-detail\"\n                                id=\"pills-home\"\n                                role=\"tabpanel\"\n                                aria-labelledby=\"pills-home-tab\"\n                            >\n                                <div className=\"form px-4 pt-5\">\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Enter email or phone number\"\n                                            name=\"email\"\n                                            value={loginForm.email}\n                                            onChange={handleLoginChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type={password}\n                                            className={`${warnpassword ? \"warning\" : \"\"} ${type ? \"type_password\" : \"\"}`}\n                                            placeholder=\"Password\"\n                                            name=\"password\"\n                                            value={loginForm.password}\n                                            onChange={handleLoginChange}\n                                        />\n                                        <i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash aff-login-eye\" : \"fa-eye aff-login-eye\"}`}></i>\n                                    </div>\n                                    <div className=\"form-check-inline lms-login\">\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"learningmanagement_login_type\"\n                                            id=\"teacher\"\n                                            value={\"7\"}\n                                            checked={\n                                                loginForm.learningmanagement_login_type == 7 ? \"checked\" : \"\"\n                                            }\n                                            onChange={handleLoginChange}\n                                        />\n                                        <label className=\"form-check-label-inline label-color\" htmlFor=\"teacher\">\n                                            Teacher\n                                        </label>\n                                    </div>\n                                    <div className=\"form-check-inline lms-login\">\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"learningmanagement_login_type\"\n                                            id=\"parent\"\n                                            value={\"8\"}\n                                            checked={\n                                                loginForm.learningmanagement_login_type == 8 ? \"checked\" : \"\"\n                                            }\n                                            onChange={handleLoginChange}\n                                        />\n                                        <label\n                                            htmlFor=\"parent\"\n                                            className=\"form-check-label-inline\"\n                                        >\n                                            Parent\n                                        </label>\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <button\n                                            type=\"submit\"\n                                            value=\"SIGN IN\"\n                                            className=\"btn btn-dark btn-block\"\n                                            onClick={handleLogin}\n                                            disabled={loader}\n                                        >\n                                            SIGN IN {loader && \"...\"}\n                                            {loader && <Spinner />}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className=\"tab-pane fade sign-tab-detail\"\n                                id=\"pills-profile\"\n                                role=\"tabpanel\"\n                                aria-labelledby=\"pills-profile-tab\"\n                            >\n                                <div className=\"form px-4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"firstName\"\n                                                    value={registerForm.firstName}\n                                                    className=\"form-control\"\n                                                    placeholder=\"First name\"\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group\">\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"lastName\"\n                                                    value={registerForm.lastName}\n                                                    className=\"form-control\"\n                                                    placeholder=\"Last name\"\n                                                    onChange={handleRegisterChange}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"email\"\n                                            name=\"email\"\n                                            value={registerForm.email}\n                                            className=\"form-control\"\n                                            placeholder=\"Email\"\n                                            onChange={handleRegisterChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"phone\"\n                                            // type=\"text\"\n                                            placeholder=\"Phone number\"\n                                            className=\"form-control\"\n                                            minLength={10}\n                                            maxLength={15}\n                                            name=\"phoneno\"\n                                            value={registerForm.phoneno}\n                                            onChange={handleRegisterChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type={password2}\n                                            className={`${warnpassword ? \"warning\" : \"\"} ${type2 ? \"type_password\" : \"\"}`}\n                                            placeholder=\"Password\"\n                                            name=\"password\"\n                                            value={registerForm.password}\n                                            onChange={handleRegisterChange}\n                                        />\n                                        <i onClick={Eye2} className={`fa ${eye2 ? \"fa-eye-slash aff-signup-eye\" : \"fa-eye aff-signup-eye\"}`}></i>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            // type=\"password\"\n                                            placeholder=\"Confirm password\"\n                                            name=\"confirmPassword\"\n                                            value={registerForm.confirmPassword}\n                                            onChange={handleRegisterChange}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-check-inline lms-login\">\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"learningmanagement_type\"\n                                            value={\"7\"}\n                                            id=\"reg_teacher\"\n                                            checked={\n                                                registerForm.learningmanagement_type == 7 ? \"checked\" : \"\"\n                                            }\n                                            onChange={handleRegisterChange}\n                                        />\n                                        <label className=\"form-check-label-inline\" htmlFor=\"reg_teacher\">Teacher</label>\n                                    </div>\n                                    <div className=\"form-check-inline lms-login\">\n                                        <input\n                                            type=\"radio\"\n                                            className=\"form-check-input\"\n                                            name=\"learningmanagement_type\"\n                                            value={\"8\"}\n                                            id=\"reg_parents\"\n                                            checked={\n                                                registerForm.learningmanagement_type == 8 ? \"checked\" : \"\"\n                                            }\n                                            onChange={handleRegisterChange}\n                                        />\n                                        <label className=\"form-check-label-inline\" htmlFor=\"reg_parents\">Parent</label>\n                                    </div>\n                                    {/*!!registerForm.learningmanagement_type &&\n                  registerForm.learningmanagement_type == 8 ? (\n                    <input\n                      type=\"text\"\n                      name=\"referral_code\"\n                      className=\"form-control\"\n                      placeholder=\"Enter referal code\"\n                      value={registerForm.referral_code}\n                      onChange={handleRegisterChange}\n                    />\n                  ) : (\n                    \"\"\n                  )*/}\n                                    <div className=\"form-group\">\n                                        <button\n                                            className=\"btn btn-dark btn-block\"\n                                            value=\"REGISTER\"\n                                            onClick={register}\n                                            disabled={loader}\n                                        >\n                                            REGISTER {loader && \"...\"}\n                                            {loader && <Spinner />}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n};\n\nexport default SignIn;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { GET_MONTHLY_REPORT } from \"../../components/Api\";\nimport { GET_AFFILIATE_DASHBOARD } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst LearningmanagementDashboard = () => {\n  const [reports, setReports] = useState([]);\n  const [reportData, setReportData] = useState([]);\n  const [scoreData, setScoreData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getReports();\n  }, []);\n\n  const getReports = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n      };\n      const {\n        data: { status, data },\n      } = await axios.post(GET_MONTHLY_REPORT, body, config);\n      if (status === 200) {\n        getDate(data);\n        setReports(data);\n        setLoader(false);\n      }\n    } catch (error) {\n      setLoader(false);\n      console.log(error);\n    }\n  };\n\n  function getDate(data) {\n    var dates = [];\n    var scores = [];\n    data?.userReport\n      ?.reverse()\n      .map(\n        (val, i) => (\n          dates.push(getTestDate(val.created_at)),\n          scores.push(\n            Math.floor((val.totaCorrectOption / val.total_questions) * 100)\n          )\n        )\n      );\n    setReportData(dates);\n    setScoreData(scores);\n  }\n\n  const getsupportlogin = async () => {\n    try {\n      setLoader(true);\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      \n      window.location.replace('https://examtice.com/support');\n     \n    } catch (error) {\n      setLoader(false);\n      console.log(error);\n    }\n  };\n\n  const state = {\n    labels: reportData,\n    datasets: [\n      {\n        label: \"Score board\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"#ffff\",\n        borderWidth: 2,\n        data: scoreData,\n      },\n    ],\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"dashboad-page\">\n        <div className=\"container\">\n          <div className=\"row\">\n         \n            <div className=\"col-md-4\">\n              <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                <Link className=\"dash-panel\" to=\"/lms/create-test\">\n                  <span className=\"dash-icon-round\">\n                    <i className=\"fas fa-clipboard-check\" />\n                  </span>\n                  <br />\n                  Create Test\n                </Link>\n              </div>\n            </div>\n            \n            {/* <div className=\"col-md-4\">\n              <div className=\"dashboad-page-inner\">\n                <Link className=\"dash-panel\" to=\"#\">\n                  <span className=\"dash-icon-round\">\n                    <i className=\"fas fa-list\" />\n                  </span>\n                  <br />\n                  Questions\n                </Link>\n              </div>\n            </div> */}\n            <div className=\"col-md-4\">\n              <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                <Link className=\"dash-panel\" to=\"/lms/subscription\">\n                  <span className=\"dash-icon-round\">\n                  <i className=\"fas fa-users-cog\" />\n                  </span>\n                  <br />\n                 Subscribe Students\n                </Link>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                <Link className=\"dash-panel\" to=\"/lms/my-account\">\n                  <span className=\"dash-icon-round\">\n                    <i className=\"fas fa-user\" />\n                  </span>\n                  <br />\n                  My Account\n                </Link>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                <Link className=\"dash-panel\" to=\"/lms/exam\">\n                  <span className=\"dash-icon-round\">\n                    <i className=\"fas fa-book-reader\" />\n                  </span>\n                  <br />\n                  Exams\n                </Link>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className={`dashboad-page-inner ${isDarkMode ? 'dashboad-page-inner-bg-dark' : 'dashboad-page-inner-bg-light'}`}>\n                <Link className=\"dash-panel\" to=\"/lms/support\" >\n                    <span className=\"dash-icon-round\">\n                    <i className=\"fas fa-sms\" />\n                    </span>\n                    <br />\n                  Support\n                  </Link>\n              </div>\n            </div>\n            {/* <div className=\"col-md-4\">\n              <div className=\"dashboad-page-inner\">\n                <Link className=\"dash-panel\" to=\"/lms/results\">\n                  <span className=\"dash-icon-round\">\n                    <i className=\"fas fa-wifi\" />\n                  </span>\n                  <br />\n                  Results\n                </Link>\n              </div>\n            </div> */}\n           \n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n};\n\nexport default LearningmanagementDashboard;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n    CREATE_EXAM,\n} from \"../Api\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuth, isTestStart, getIsExam, setIsExam } from \"../../features/userSlice\";\nimport QuestionCount from \"./questionsCount\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport Spinner from \"../spinner/Spinner\";\nimport Cookies from \"js-cookie\";\nimport Comment from \"./Comment\";\nimport Statistics from \"./statistics\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport ExamTimer from \"./examTimer\";\nimport TestTimer from \"./testTimer\";\nimport MathJax from \"mathjax3-react\";\nimport { Helmet } from \"react-helmet\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\nimport Pagination from \"../../Pagination/Pagination\";\n\n\n\nconst LmsQuestion = ({ questions, student_ids, topicsId, selectyear }) => {\n    const history = useHistory();\n    const [courses, setCourses] = useState([]);\n    const [subjects, setSubjects] = useState([]);\n    const [topics, setTopics] = useState([]);\n    const [year, setYear] = useState([]);\n    const [examTitle, setExamName] = useState([]);\n    const [questionsData, setQuestionsData] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [saveLoader, setSaveLoader] = useState(false);\n    const [questionids, setQuestionids] = useState([]);\n    const [students, setstudents] = useState([]);\n    const [ave_total_question, setaveNumberOfQuestion] = useState([]);\n    const [selectAll, setSelectAll] = useState(false);\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const questionsPerPage = 10;\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n\n\n\n    useEffect(() => {\n        setQuestionsData(questions.questions);\n        setQuestionids(questions.questions);\n        setCourses(questions.courseId);\n        setSubjects(questions.subjectid);\n        setTopics(topicsId);\n        setYear(selectyear);\n        setExamName(questions.examName);\n        setstudents(student_ids);\n    }, [questions, student_ids]);\n\n\n    const handleSelectAllChange = () => {\n        setSelectAll(!selectAll);\n        setaveNumberOfQuestion(ave_total_question)\n        // Update the globally selected items based on all items\n        const allItemIds = questionsData.map((item) => item.id);\n\n        if (!selectAll) {\n            setSelectedItems(allItemIds);\n        } else {\n            setSelectedItems([]);\n        }\n    };\n\n    const handleCheckboxChange = (itemId) => {\n        // Toggle the selection for the current item on the current page\n        setSelectedItems((prevSelected) => {\n            if (prevSelected.includes(itemId)) {\n                return prevSelected.filter((id) => id !== itemId);\n            } else {\n                return [...prevSelected, itemId];\n            }\n        });\n        setaveNumberOfQuestion(ave_total_question)\n    };\n\n    //Start test (whichTest 0 = free test and 1 = exam)\n    const createExam = async (e, whichTest) => {\n        e.preventDefault();\n\n        setLoader(true);\n        let question_id = [];\n        questionids.filter((item) => {\n            if (item.isChecked == true) {\n                question_id.push(item.id);\n            }\n        });\n\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        const body = {\n            courseId: courses,\n            subjectId: subjects,\n            topicsId: topics,\n            examName: examTitle,\n            type: 1,\n            user_id: !!userId && userId.id,\n            question_id: selectedItems, // Use selectedItems instead of questionids\n            total_questions: selectedItems.length,\n            student_ids: students,\n            year: year,\n        };\n        try {\n            const {\n                data: { data, status, message },\n            } = await axios.post(CREATE_EXAM, body);\n            if (status == 200) {\n                if (data) {\n                    setLoader(true);\n\n                    toast.success(message);\n                } else {\n                    toast.error(message);\n                    setLoader(false);\n                }\n                setTimeout(() => {\n                    history.push(\"/lms/exam\");\n                }, 200);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Someting went wrong, please try again..!\");\n        }\n    };\n\n    // pagination\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n\n    const getQuestionsForPage = () => {\n        const startIndex = (currentPage - 1) * questionsPerPage;\n        const endIndex = startIndex + questionsPerPage;\n        return questionsData.slice(startIndex, endIndex);\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"row savedTest\" >\n                        <h4>Questions List</h4>\n                        <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n\n                            <thead>\n                                <tr>\n                                    <th scope=\"col-1\">\n                                        <span className=\"d-flex\">\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"mr-2\"\n                                                checked={selectAll}\n                                                onChange={handleSelectAllChange}\n                                            />\n                                            All\n                                        </span>\n                                    </th>\n                                    <th scope=\"col-3\"> Course / Subject of the Test</th>\n                                    <th scope=\"col-3\">Topices</th>\n                                    <th scope=\"col\">Reffer Code</th>\n                                    <th scope=\"col-4\">Questions</th>\n                                    <th scope=\"col-1\" style={{ width: \"5%\" }}>Year</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {saveLoader ? (\n                                    <div className=\"spinner_div\">\n                                        <Spinner />\n                                    </div>\n                                ) : (\n                                    <>\n                                        {questionsData.length ? (\n                                            getQuestionsForPage().map((item, index) => (\n                                                <tr key={index}>\n                                                    <td scope=\"row\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            value={item.id}\n                                                            id={item.id}\n                                                            name=\"question_id\"\n                                                            checked={selectedItems.includes(item.id)}\n                                                            onChange={() => handleCheckboxChange(item.id)}\n                                                        />\n                                                    </td>\n                                                    <td scope=\"row\" >{item.courseName} / {item.subjectName}</td>\n                                                    <td>{item.name}</td>\n                                                    <td>{item.id}</td>\n                                                    <td><div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div></td>\n                                                    <td>{item.year}</td>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan={5}>No Questions found..!</td>\n                                            </tr>\n                                        )}\n                                    </>\n                                )}\n                            </tbody>\n                        </table>\n                        <div className=\"demo-test\" style={{ width: \"100%\" }}>\n                            <button\n                                className=\"common-btn left\"\n                                href=\"#\"\n                                onClick={(e) => createExam(e, 1)}\n                                disabled={selectedItems?.length === 0}\n                                style={{ float: \"left\", marginTop: \"80px\" }}\n                            >\n                                Create Exam{\" \"}\n                            </button>\n\n                            <div className=\"mb-5 create-test-pagination\">\n                                <Pagination postsPerpage={questionsPerPage} totalPosts={questionsData.length} paginate={paginate} setCurrentPage={setCurrentPage} currentPage={currentPage}></Pagination>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default LmsQuestion;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport {\n    GET_COURSES,\n    GET_SUBJECTS,\n    GET_TOPICS,\n    GET_LMS_EXAM_QUESTIONS,\n    ATTEMPT_ASSIGNED_TEST,\n    LMS_STUDENTS_LIST,\n    GET_YEAR\n} from \"../../components/Api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuth, setIsExam } from \"../../features/userSlice\";\nimport Question from \"../../components/exam/LmsQuestion\";\nimport TestNav from \"../../components/exam/testNav\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport Select from \"react-select\";\nimport Cookies from \"js-cookie\";\nimport { Link } from \"react-router-dom\";\nimport SavedTestLists from \"../../components/exam/SavedTestLists\";\nimport { useParams } from \"react-router-dom\";\nimport Switch from \"react-switch\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\n\nconst Freetest = () => {\n    const [courses, setCourses] = useState([]);\n    const [subjects, setSubjects] = useState([]);\n    const [mcq, setMcq] = useState();\n    const [theory, setTheory] = useState();\n    const [practical, setPractical] = useState();\n    const [step, setStep] = useState(1);\n    const [testData, setTestData] = useState({ type: 1 });\n    const [topics, setTopics] = useState([]);\n    const [checkedtopics, setCheckedTopics] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [year, setYear] = useState([]);\n    const dispatch = useDispatch();\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n    const { testId } = useParams(); //Instructor assign test\n    const [show, toggleShow] = React.useState(true);\n    const [number_of_question, setNumberOfQuestion] = useState([]);\n    const [ave_total_question, setaveNumberOfQuestion] = useState([]);\n    const [usersubscription, setUserSubscription] = useState([]);\n    const [randomchecked, setChecked] = useState(false);\n    const [flagchecked, setflagChecked] = useState(false);\n    const [subscription, setSubscription] = useState([]);\n    const [student_ids, setCheckedstudents] = useState([]);\n    const [subjectyears, setSubjectYears] = useState([]);\n\n    const userData =\n        Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n    useEffect(() => {\n        getCourses();\n        getlmsStudent();\n    }, []);\n\n    useEffect(() => {\n        testId != undefined && isAssignedTest(testId);\n    }, [testId]);\n\n    console.log(testData)\n\n    const getlmsStudent = async () => {\n        try {\n            setLoader(true);\n            const body = {\n                teacher_id: userData ? userData.id : false,\n                userRole: userData ? userData.affiliate_role : false,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LMS_STUDENTS_LIST, body);\n            console.log(data, \"data\");\n            if (status == 200) {\n                setLoader(false);\n                let SubscriptionData = data?.map((item) => {\n                    return { ...item, isChecked: true };\n                });\n                setSubscription(SubscriptionData);\n\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (error) {\n            setLoader(false);\n            if (error.response.data.status == 422) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again.!\");\n            }\n        }\n    };\n\n    const randomChange = nextChecked => {\n        setChecked(nextChecked);\n    };\n\n    const flagChange = nextChecked => {\n        setflagChecked(nextChecked);\n    };\n\n    //const userData = useSelector(examData); //using redux useSelector here\n\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n\n    //Get courses on page load\n    const getCourses = async () => {\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.get(GET_COURSES);\n            if (status == 200) {\n                setLoader(false);\n                setCourses(data);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    // Evaluate is testId and userId exist or not\n    const isAssignedTest = async (test_id) => {\n        try {\n            var userData =\n                Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n            const body = {\n                user_id: !!userData && userData.id,\n                test_id: test_id,\n            };\n            const {\n                data: { data, status, message },\n            } = await axios.post(ATTEMPT_ASSIGNED_TEST, body, config);\n            if (status == 200) {\n                if (data.questions.length > 0) {\n                    localStorage.setItem(\"userTestId\", data.user_test_id);\n                    setQuestions(data);\n                    setStep(4);\n                } else {\n                    toast.error(\"Oops!, No questions found..!\");\n                }\n            } else {\n                toast.error(message);\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    const handleChange = (e) => {\n        setTestData({ ...testData, [e.target.name]: e.target.value });\n    };\n\n    //Get subject based on course change\n    const handleCourseChange = async (e) => {\n        var id = e.target.value;\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (!isNaN(id)) {\n            setLoader(true);\n            setTestData({\n                ...testData,\n                courseName: e.target.options[e.target.selectedIndex].text,\n                courseId: id,\n            });\n            const body = {\n                courseId: id,\n                user_id: !!userId && userId.id,\n            };\n            try {\n                const {\n                    data: { data, status, mcq, theory, practical, usersubscription, error },\n                } = await axios.post(GET_SUBJECTS, body);\n                if (status == 200) {\n                    setLoader(false);\n                    setSubjects(data);\n                    setMcq(mcq);\n                    setTheory(theory);\n                    setPractical(practical);\n                    setUserSubscription(usersubscription);\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n    const handleNextStepone = (e) => {\n        setLoader(true);\n        e.preventDefault();\n\n        if (\n            subscription.length <= 0 ||\n            subscription.filter((item) => item?.isChecked !== true).length == subscription.length\n        ) {\n            toast.error(\"Please select Minimum One Student..!\");\n            setLoader(false);\n        } else {\n            setTimeout(() => {\n                setLoader(false);\n                setStep(step + 1);\n            }, 500);\n        }\n    };\n    //validate topics is checked or not  and go to next step\n    const handleNextStep = (e) => {\n        setLoader(true);\n        e.preventDefault();\n        if (testData.ExamName == \"\" || testData.ExamName == undefined) {\n            toast.error(\"Please fill Exam Name..!\");\n            return false;\n        }\n        \n        if (testData.courseName == \"\" || testData.courseName == undefined) {\n            toast.error(\"Please select any course..!\");\n            return false;\n        }\n        if (\n            testData.subjectName == \"\" ||\n            testData.subjectName == undefined ||\n            testData.subjectName == \"Select subject\"\n        ) {\n            toast.error(\"Please select any subject..!\");\n            return false;\n        }\n\n        setTimeout(() => {\n            setLoader(false);\n            setStep(step + 1);\n        }, 500);\n\n    };\n\n    //set subject state\n    const handleSubjectChange = async (e) => {\n        const target = e.target;\n        var id = target.value;\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (!isNaN(id)) {\n            setTestData({\n                ...testData,\n                subjectName: target.options[target.selectedIndex].text,\n                subject_id: id,\n            });\n        }\n\n        const body = {\n            courseId: parseInt(testData.courseId),\n            subjectId: id,\n            user_id: !!userId && userId.id,\n            type :  testData?.type\n        };\n\n        try {\n            const {\n                data: { data, status, error },\n            } = await axios.post(GET_YEAR, body);\n            if (status == 200) {\n                setSubjectYears(data);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const handleExamChange = (event) => {\n        const userValue = event.target.value;\n        //console.log(userValue);\n        if (userValue != '') {\n            setTestData({\n                ...testData,\n                ExamName: userValue,\n            });\n        }\n\n    };\n\n    //On click edit button rest state\n    const handleEditTest = (e) => {\n        e.preventDefault();\n        setTestData({\n            type: 1,\n        });\n        if (step == 3) {\n            setStep(step - 2);\n        } else {\n            setStep(step - 1);\n        }\n    };\n\n    //Get topics\n    const getTopics = async (e) => {\n        e.preventDefault();\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        if (year == \"\" || year == undefined) {\n            toast.error(\"Please select a year..!\");\n            return false;\n        }\n        if (testData.courseName == \"\" || testData.courseName == undefined) {\n            toast.error(\"Please select any course..!\");\n            return false;\n        }\n        if (\n            testData.subjectName == \"\" ||\n            testData.subjectName == undefined ||\n            testData.subjectName == \"Select subject\"\n        ) {\n            toast.error(\"Please select any subject..!\");\n            return false;\n        }\n        setLoader(true);\n        const body = {\n            subjectId: testData.subject_id,\n            type: testData.type,\n            year: year,\n            user_id: !!userId && userId.id,\n            // number_of_question: 6,\n        };\n\n        try {\n            const {\n                data: { data, status, number_of_question, ave_total_question, error },\n            } = await axios.post(GET_TOPICS, body);\n            if (status == 200) {\n                let topicsData = data?.map((item) => {\n                    return { ...item, isChecked: true };\n                });\n                setStep(step + 1);\n                setTopics(topicsData);\n                setNumberOfQuestion(number_of_question);\n                setaveNumberOfQuestion(ave_total_question);\n                setLoader(false);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Someting went wrong, please try again..!\");\n        }\n    };\n\n    //handle topics select\n    const handleCheckedTopics = (e) => {\n        const { id, checked, name } = e.target;\n        if (name === \"all\") {\n            const updatedCheckedState = topics.map((item) => {\n                return { ...item, isChecked: checked };\n            });\n            setTopics(updatedCheckedState);\n        } else {\n            const updatedCheckedState = topics.map((item) =>\n                item.topic_id == id ? { ...item, isChecked: checked } : item\n            );\n            setTopics(updatedCheckedState);\n        }\n    };\n\n    //Start test (whichTest 0 = free test and 1 = exam)\n    const startTest = async (e, whichTest) => {\n        e.preventDefault();\n        if (year == \"\" || year == undefined) {\n            toast.error(\"Please select a year..!\");\n            return false;\n        }\n        setLoader(true);\n        let topics_id = [];\n        topics.filter((item) => {\n            if (item.isChecked == true) {\n                topics_id.push(item.topic_id);\n            }\n            setCheckedTopics(topics_id);\n        });\n\n        let students_id = [];\n        subscription.filter((item) => {\n            if (item.isChecked == true) {\n                students_id.push(item.student_id);\n            }\n            setCheckedstudents(students_id);\n        });\n\n        var userId =\n            Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n        const body = {\n            topicsId: topics_id,\n            courseId: parseInt(testData.courseId),\n            examName: testData.ExamName,\n            type: testData.type,\n            year: year,\n            subjectId: testData.subject_id,\n            number_of_question: number_of_question,\n            user_id: !!userId && userId.id,\n            isExam: whichTest == 1 ? true : false,\n            total_question: ave_total_question\n        };\n        try {\n            const {\n                data: { data, status, message },\n            } = await axios.post(GET_LMS_EXAM_QUESTIONS, body);\n            if (status == 200) {\n                if (data && data.questions != undefined && data.questions.length > 0) {\n                    localStorage.setItem(\"userTestId\", data.user_test_id);\n                    whichTest == 1 && dispatch(setIsExam(true));\n                    setQuestions(data);\n                    setLoader(false);\n                    setStep(step + 1);\n                } else {\n                    toast.error(message);\n                    setLoader(false);\n                }\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Someting went wrong, please try again..!\");\n        }\n    };\n\n    // Get dynamic years\n    const getYears = () => {\n        let currentYear = new Date().getFullYear();\n        //let endYear = new Date().getFullYear() - 17;\n        let endYear = 2006;\n        var option = [];\n        for (let year = currentYear; year >= endYear; year--) {\n            option.push({ value: year, label: year });\n        }\n        return option;\n    };\n\n    // handle on change year\n    const handleYear = (e) => {\n        var yearValue = [];\n        e.map((item) => yearValue.push(item.value));\n        setYear(yearValue);\n    };\n\n    // handle resume test\n    const handleResumeTest = () => {\n        setStep(4);\n        console.log(step);\n    };\n\n    const availableBadge = () => {\n        return (\n            <span className=\"avalablity\">\n                *Only 10% Is Available <i className=\"fas fa-info-circle\" />\n            </span>\n        );\n    };\n    const handleCheckedStudents = (e) => {\n        const { id, checked, name } = e.target;\n        if (name === \"all\") {\n            const updatedCheckedState = subscription.map((item) => {\n                return { ...item, isChecked: checked };\n            });\n            setSubscription(updatedCheckedState);\n        } else {\n            const updatedCheckedState = subscription.map((item) =>\n                item.student_id == id ? { ...item, isChecked: checked } : item\n            );\n            setSubscription(updatedCheckedState);\n        }\n\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n\n    const tabScreen = () => {\n        switch (step) {\n            case 1:\n                return (\n                    <>\n                        <div className=\"category\">\n                            <h3>Create An Exam</h3>\n                        </div>\n                        <div className=\"select-testing\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row savedTest\" >\n\n                                    <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`} >\n                                        <thead>\n                                            <tr>\n                                                <td colspan=\"4\">\n                                                    <label className=\"chk-b\">\n                                                        Select Students\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            checked={\n                                                                subscription.length > 0 &&\n                                                                subscription.filter((item) => item?.isChecked !== true)\n                                                                    .length < 1\n                                                            }\n                                                            name=\"sall\"\n                                                            onClick={handleCheckedStudents}\n                                                        />\n                                                        <span className=\"checkmark\" />\n                                                    </label>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"col\">#</th>\n                                                <th scope=\"col\">Student Name</th>\n                                                <th scope=\"col\">Student Email</th>\n                                                <th scope=\"col\">Student Status</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {subscription.length ? (\n                                                subscription.map((item, index) => (\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">\n                                                            <input type=\"checkbox\" checked={item?.isChecked || false} value={item.student_id} id={item.student_id} name=\"student_id\" onClick={handleCheckedStudents} /></th>\n                                                        <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                                                        <th scope=\"row\"> {item.email} </th>\n                                                        <td>\n                                                            {item.status == 1 ? (\n                                                                <span className=\"badge-success badge mr-2\">\n                                                                    Active\n                                                                </span>\n                                                            ) : (\n                                                                <span className=\"badge-danger badge mr-2\">\n                                                                    Inactive\n                                                                </span>\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))\n                                            ) : (\n                                                <tr>\n                                                    <td colSpan={5}>No subscription found..!</td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n\n                            <div className=\"exam-test\">\n                                {loader && <Spinner />}\n                                <a className=\"common-btn\" href=\"#\" onClick={handleNextStepone}>\n                                    Next{\" \"}\n                                </a>\n                            </div>\n                        </div>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <div className=\"category\">\n                            <h3>Create An Exam</h3>\n                        </div>\n                        <div className=\"select-testing\">\n                            <div className=\"select-class\">\n                                <p>Exam Name</p>\n                                <input type=\"text\" name=\"exam_name\" id=\"courses\" onChange={handleExamChange} />\n                            </div>\n                            <div className=\"select-class\">\n                                <p>Select Course</p>\n                                <select onChange={handleCourseChange} id=\"courses\">\n                                    <option value>Select course</option>\n                                    {courses &&\n                                        courses.map((item, index) => (\n                                            <option value={item.id} key={index}>\n                                                {\" \"}\n                                                {item.name}{\" \"}\n                                            </option>\n                                        ))}\n                                </select>\n                            </div>\n                            <div className=\"select-subject\">\n                                <p>Select Subject</p>\n                                <select id=\"subjects\" onChange={handleSubjectChange}>\n                                    <option value=\"\">Select subject</option>\n                                    {subjects &&\n                                        subjects.map((item, index) => (\n                                            <option value={item.id} key={index}>\n                                                {\" \"}\n                                                {item.name}{\" \"}\n                                            </option>\n                                        ))}\n                                </select>\n                            </div>\n\n                            <div className=\"exam-test\">\n                                {loader && <Spinner />}\n                                <a className=\"common-btn\" href=\"#\" onClick={handleNextStep}>\n                                    Next{\" \"}\n                                </a>\n                            </div>\n                        </div>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <div className=\"category free-testing-tabs\">\n                            <TestNav\n                                courseName={testData.courseName}\n                                subjectName={testData.subjectName}\n                                handleEdit={handleEditTest}\n                            />\n                        </div>\n\n                        <div className=\"row testing-demo\">\n                            {(() => {\n                                if (mcq == 1) {\n                                    return <div className={`text-center col-md-12`}>\n                                        <div className=\"form-group\">\n                                            <div className=\"radio-btn-page lms-radio-btn-page\">\n                                                <label className=\"cs-radio\">\n                                                    MCQ\n                                                    <input\n                                                        type=\"radio\"\n                                                        checked={testData.type == 1 ? \"checked\" : \"\"}\n                                                        name=\"type\"\n                                                        value={1}\n                                                        onChange={handleChange}\n                                                        onClick={() => toggleShow(true)}\n                                                    />\n                                                    <span className=\"checkmark\" />\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>;\n                                } else {\n\n                                }\n                            })()}\n\n\n                        </div>\n                        {loader && <Spinner />}\n\n                        <div className=\"select-testing\">\n                            <div className=\"select-class\">\n                                <p>Select Year</p>\n                                <Select\n                                    name=\"year\"\n                                    isMulti\n                                    onChange={handleYear}\n                                    options={subjectyears}\n                                    className=\"text-dark\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"demo-test\">\n                            <button\n                                className=\"common-btn\"\n                                onClick={getTopics}\n                                disabled={loader}\n                            >\n                                Next{\" \"}\n                            </button>\n\n                        </div>\n                    </>\n                );\n            // case 4:\n            //     return (\n            //         <div className=\"d-flex justify-content-around\">\n\n            //             <div>\n            //                 <div className=\"col-6\">\n            //                     <button\n            //                         className=\"common-btn right\"\n            //                         href=\"#\"\n            //                         onClick={(e) => startTest(e, 0)}\n            //                         disabled={loader}\n            //                         // style={{ float: show ? \"right\" : \"none\" }}\n            //                     >\n            //                         Study\n            //                     </button>\n            //                 </div>\n\n            //             </div>\n\n            //             <div>\n            //                 <div className=\"col-6\">\n            //                     <button\n            //                         className=\"common-btn\"\n            //                         href=\"#\"\n            //                         onClick={(e) => startTest(e, 0)}\n            //                         disabled={loader}\n            //                         // style={{ float: \"none\" }}\n            //                     >\n            //                         Exam\n            //                     </button>\n            //                 </div>\n            //             </div>\n\n            //             {/* <div className=\"exam-test\">\n            //                 {loader && <Spinner />}\n            //                 <a className=\"common-btn\" href=\"#\" onClick={handleNextStepone}>\n            //                     Next{\" \"}\n            //                 </a>\n            //             </div> */}\n\n            //         </div>\n            //     )\n            case 4:\n                return (\n                    <>\n                        <div className=\"free-testing-tabs\">\n                            {!usersubscription ? (\n                                <TestNav\n                                    courseName={testData.courseName}\n                                    subjectName={testData.subjectName}\n                                    handleEdit={handleEditTest}\n                                />\n                            ) : (\n                                <ul>\n                                    <li className=\"active\">\n                                        <a href=\"#\">\n                                            Course : {testData.courseName && testData.courseName}{\" \"}\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\">\n                                            Subject : {testData.subjectName && testData.subjectName}\n                                        </a>\n                                        <a href=\"#\" className=\"edit-button\" onClick={handleEditTest}>\n                                            <i className=\"fas fa-pen\" />\n                                        </a>\n                                    </li>\n                                    <li className=\"flag_switch_li\">\n                                        <Switch\n                                            onChange={flagChange}\n                                            checked={flagchecked}\n                                            className=\"react-switch\"\n                                        /> <span className=\"switch-text\"> Flag Questions {flagchecked ? \"On\" : \"Off\"}</span> <i className=\"fas fa-flag fa-sm\"></i>\n                                    </li>\n                                </ul>\n                            )}\n\n\n                            <div className=\"row\">\n                                {/* User test or free test */}\n\n                                <div className={`d-flex justify-content-center col-md-${show ? 12 : 6}`}>\n                                    <button\n                                        className=\"common-btn right\"\n                                        href=\"#\"\n                                        onClick={(e) => startTest(e, 0)}\n                                        disabled={loader}\n                                        style={{ float: show ? \"none\" : \"none\" }}\n                                    >\n                                        View Questions\n                                    </button>\n                                </div>\n\n                                {/* User exam */}\n                                {isAuth && show && usersubscription && !flagchecked ? (\n                                    <div className={`col-md-${show ? 12 : 6}`}>\n                                        <button\n                                            className=\"common-btn left\"\n                                            href=\"#\"\n                                            onClick={(e) => startTest(e, 1)}\n                                            disabled={loader}\n                                            style={{ float: \"left\" }}\n                                        >\n                                            Exam{\" \"}\n                                        </button>\n                                    </div>\n                                )\n                                    :\n                                    (\n                                        <></>\n                                    )\n                                }\n\n                            </div>\n                            {loader && <Spinner />}\n                            <table className=\"lit-table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <label className=\"chk-b\">\n                                                Select Topic\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={\n                                                        topics.length > 0 &&\n                                                        topics.filter((item) => item?.isChecked !== true)\n                                                            .length < 1\n                                                    }\n                                                    name=\"all\"\n                                                    onClick={handleCheckedTopics}\n                                                />\n                                                <span className=\"checkmark\" />\n                                            </label>\n                                        </td>\n                                        <td>Questions (Trail)</td>\n                                    </tr>\n                                    {topics.length > 0 ? (\n                                        topics.map((item, index) => (\n                                            <tr key={index}>\n                                                <td>\n                                                    <label className=\"chk-b\">\n                                                        {item.topic_name}\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            checked={item?.isChecked || false}\n                                                            value={item.topic_id}\n                                                            id={item.topic_id}\n                                                            name=\"topics_id\"\n                                                            onChange={handleCheckedTopics}\n                                                        />\n                                                        <span className=\"checkmark\" />\n                                                    </label>\n                                                </td>\n                                                <td>\n\n                                                    <span>{item.count}</span>\n\n                                                    <i className=\"fas fa-chevron-down\" />\n                                                </td>\n                                            </tr>\n                                        ))\n                                    ) : (\n                                        <tr>\n                                            <td>\n                                                <label className=\"chk-b\">No topics found</label>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            {/* {topics && topics.length > 5\n              \n                <a className=\"see-more\" href=\"#\">\n                  See More\n                </a>\n              \n              } */}\n\n                        </div>\n                    </>\n                );\n            case 5:\n                return <Question questions={questions} student_ids={student_ids} topicsId={checkedtopics} selectyear={year} />;\n            default:\n                return \"foo\";\n        }\n    };\n\n    return (\n        <>\n            <Header />\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    <div className=\"pagination\">\n                        <span>\n                            <Link to={isAuth ? \"/lms/dashboard\" : \"/\"} className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                <i className=\"fas fa-chevron-left\" />\n                                Create Exam\n                            </Link>\n                        </span>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">{tabScreen()}</div>\n                    </div>\n                </div>\n            </section>\n            <Footer />\n            {/* < ToastContainer /> */}\n        </>\n    );\n};\n\nexport default Freetest;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { LMS_SEND_REQUEST, LMS_REQUESTEDSTUDENTS, SEARCH_STUDENTS_BY_EMAIL } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst SubscribeUsers = () => {\n    const { studentId } = useParams();\n    const userData =\n        Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n    const history = useHistory();\n    const [loader, setLoader] = useState(false);\n    const [subscription, setSubscription] = useState([]);\n    const [accepted, setAccepted] = useState([]);\n    const [pendingconfirm, setPending_confirm] = useState([]);\n    const [pendingrequest, setPending_request] = useState([]);\n    const [updateForm, setUpdateForm] = useState({\n        searchstudentbyemail: \"\",\n    });\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n\n    useEffect(() => {\n        getSubscriptionsstudent();\n    }, []);\n\n    //   Verify user\n    const getSubscription = async () => {\n        try {\n            setLoader(false);\n            const body = {\n                searchstudentbyemail: updateForm.searchstudentbyemail,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(SEARCH_STUDENTS_BY_EMAIL, body);\n            // console.log(data, \"data\");\n            if (status == 200) {\n                setLoader(false);\n                setSubscription(data);\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        }\n\n        catch (error) {\n            setLoader(false);\n            if (error.response.data.status == 422) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again.!\");\n            }\n        }\n    };\n    const getSubscriptionrequest = async () => {\n        try {\n            setLoader(true);\n            const body = {\n                student_id: studentId,\n                teacher_id: userData ? userData.id : false,\n                request_from: userData ? userData.id : false,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LMS_SEND_REQUEST, body);\n            //console.log(data, \"data\");\n            if (status == 200) {\n                setLoader(false);\n                setSubscription(data);\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (error) {\n            setLoader(false);\n            if (error.response.data.status == 422) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again.!\");\n            }\n        }\n    };\n\n    const getSubscriptionsstudent = async () => {\n        try {\n            setLoader(true);\n            const body = {\n                userId: userData ? userData.id : false,\n                userRole: userData ? userData.affiliate_role : false,\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LMS_REQUESTEDSTUDENTS, body);\n            console.log(data, \"data\");\n            if (status == 200) {\n                setLoader(false);\n                setAccepted(data.accepted);\n                setPending_confirm(data.pending_confirm);\n                setPending_request(data.pending_request);\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (error) {\n            setLoader(false);\n            if (error.response.data.status == 422) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again.!\");\n            }\n        }\n    };\n\n    const handleEditChange = (e) => {\n        setUpdateForm({\n            ...updateForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    <div className=\"pagination\">\n                        <span>\n                            <Link to=\"/lms/dashboard\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                <i className=\"fas fa-chevron-left\" />\n                                Subscription\n                            </Link>\n                        </span>\n                    </div>\n\n                    <div className=\"row savedTest\">\n                        {loader ? (\n                            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                                <Spinner />\n                            </div>\n                        ) : (\n                            <>\n                                <div className=\"col-md-5\">\n                                    <div className=\"row savedTest\" >\n                                        <h4 >Student List</h4>\n                                        <br />\n                                        <div className=\"serach-box row\">\n                                            <div className=\"col-8\">\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Search student by email\"\n                                                    name=\"searchstudentbyemail\"\n                                                    value={updateForm.searchstudentbyemail}\n                                                    onChange={handleEditChange}\n                                                />\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <span\n                                                    className=\"common-btn\"\n                                                    onClick={getSubscription}\n                                                >\n                                                    Search\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">S.no</th>\n                                                    <th scope=\"col\">Name</th>\n                                                    <th scope=\"col\">Email</th>\n                                                    <th scope=\"col\">Status</th>\n                                                    <th scope=\"col\" style={{ width: \"15%\" }}>\n                                                        Action\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <td scope=\"col\" colspan=\"4\" className=\"\">\n\n                                                    </td>\n                                                    <td scope=\"col\" style={{ width: \"15%\" }}>\n\n                                                    </td>\n                                                </tr>\n                                                {subscription.length ? (\n                                                    subscription.map((item, index) => (\n                                                        <tr key={index}>\n                                                            <th>{index + 1}</th>\n                                                            <th> {item.first_name} {item.last_name}</th>\n                                                            <th> {item.email}</th>\n\n                                                            <td>\n                                                                {item.status == 1 ? (\n                                                                    <span className=\"badge-success badge mr-2\">\n                                                                        Active\n                                                                    </span>\n                                                                ) : (\n                                                                    <span className=\"badge-danger badge mr-2\">\n                                                                        Inactive\n                                                                    </span>\n                                                                )}\n                                                            </td>\n                                                            <td>\n                                                                <Link className=\"badge-danger badge mr-2\" to={\"/lms/subscriptionrequest/\" + item.id}>\n                                                                    <span>\n                                                                        Request\n                                                                    </span>\n                                                                </Link>\n                                                            </td>\n                                                        </tr>\n                                                    ))\n                                                ) : (\n                                                    <tr>\n                                                        <td colSpan={5}>No subscription found..!</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-2\"></div>\n                                <div className=\"col-md-5\">\n                                    <div className=\"row savedTest\" >\n                                        <h4>List of Subscriptions Accept Students</h4>\n                                        <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">S.no</th>\n                                                    <th scope=\"col\">Student Name</th>\n                                                    <th scope=\"col\">Email</th>\n                                                    <th scope=\"col\">Status</th>\n                                                    <th scope=\"col\" style={{ width: \"15%\" }}>\n                                                        Action\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {accepted.length ? (\n                                                    accepted.map((item, index) => (\n                                                        <tr key={index}>\n                                                            <th scope=\"row\">{index + 1}</th>\n                                                            <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                                                            <th scope=\"row\"> {item.email}</th>\n\n                                                            <td>\n                                                                {item.status == 1 ? (\n                                                                    <span className=\"badge-success badge mr-2\">\n                                                                        Active\n                                                                    </span>\n                                                                ) : (\n                                                                    <span className=\"badge-danger badge mr-2\">\n                                                                        Inactive\n                                                                    </span>\n                                                                )}\n                                                            </td>\n                                                            <td>\n                                                                <Link className=\"badge-danger badge mr-2\" to={\"/lms/subscriptionblock/\" + item.id}>\n                                                                    <span>\n                                                                        Delete\n                                                                    </span>\n                                                                </Link>\n                                                                <Link className=\"badge-success badge mr-2\" to={\"/lms/studentexamlist/\" + item.id}>\n                                                                    <span>\n                                                                        View Report\n                                                                    </span>\n                                                                </Link>\n                                                            </td>\n                                                        </tr>\n                                                    ))\n                                                ) : (\n                                                    <tr>\n                                                        <td colSpan={5}>No subscription found..!</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n\n                                    </div>\n                                </div>\n                                <div className=\"col-md-5\">\n                                    <div className=\"row savedTest\" >\n                                        <h4 >Waiting for Confirmation</h4>\n                                        <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">S.no</th>\n                                                    <th scope=\"col\">Student Name</th>\n                                                    <th scope=\"col\">Email</th>\n                                                    <th scope=\"col\">Student Status</th>\n                                                    <th scope=\"col\" style={{ width: \"15%\" }}>\n                                                        Action\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {pendingconfirm.length ? (\n                                                    pendingconfirm.map((item, index) => (\n                                                        <tr key={index}>\n                                                            <th scope=\"row\">{index + 1}</th>\n                                                            <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                                                            <th scope=\"row\"> {item.email}</th>\n\n                                                            <td>\n                                                                {item.status == 1 ? (\n                                                                    <span className=\"badge-success badge mr-2\">\n                                                                        Active\n                                                                    </span>\n                                                                ) : (\n                                                                    <span className=\"badge-danger badge mr-2\">\n                                                                        Inactive\n                                                                    </span>\n                                                                )}\n                                                            </td>\n                                                            <td>\n                                                                <Link className=\"badge-danger badge mr-2\" to={\"/lms/student-request-cancle/\" + item.id}>\n                                                                    <span>\n                                                                        Cancel\n                                                                    </span>\n                                                                </Link>\n                                                            </td>\n                                                        </tr>\n                                                    ))\n                                                ) : (\n                                                    <tr>\n                                                        <td colSpan={5}>No subscription found..!</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n\n                                    </div>\n                                </div>\n                                <div className=\"col-md-2\"></div>\n                                <div className=\"col-md-5\">\n                                    <div className=\"row savedTest\" >\n                                        <h4 >Pending for Confirmation</h4>\n                                        <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">S.no</th>\n                                                    <th scope=\"col\">Student Name</th>\n                                                    <th scope=\"col\">Email</th>\n                                                    <th scope=\"col\">Student Status</th>\n                                                    <th scope=\"col\" style={{ width: \"20%\" }}>\n                                                        Action\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {pendingrequest.length ? (\n                                                    pendingrequest.map((item, index) => (\n                                                        <tr key={index}>\n                                                            <th scope=\"row\">{index + 1}</th>\n                                                            <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                                                            <th scope=\"row\"> {item.email}</th>\n\n                                                            <td>\n                                                                {item.status == 1 ? (\n                                                                    <span className=\"badge-success badge mr-2\">\n                                                                        Active\n                                                                    </span>\n                                                                ) : (\n                                                                    <span className=\"badge-danger badge mr-2\">\n                                                                        Inactive\n                                                                    </span>\n                                                                )}\n                                                            </td>\n                                                            <td>\n                                                                <div className=\"row\">\n                                                                    <div className=\"col-5\">\n                                                                        <Link className=\"badge-danger badge mr-2\" to={\"/lms/subscriptionblock/\" + item.id}>\n                                                                            <span>\n                                                                                Delete\n                                                                            </span>\n                                                                        </Link>\n                                                                    </div>\n                                                                    <div className=\"col-5\">\n                                                                        <Link className=\"badge-success badge mr-2\" to={\"/lms/student-request-accept/\" + item.id}>\n                                                                            <span>\n                                                                                Accept\n                                                                            </span>\n                                                                        </Link>\n                                                                    </div>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                    ))\n                                                ) : (\n                                                    <tr>\n                                                        <td colSpan={5}>No subscription found..!</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n\n                                    </div>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n};\nexport default SubscribeUsers;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Moment from 'react-moment';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MY_SUBSCRIPTION, LMS_EXAMLIST_FOR_TEACHER } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\nimport Pagination from \"../../Pagination/Pagination\";\n\nconst ExamList = () => {\n    const history = useHistory();\n    const [loader, setLoader] = useState(false);\n    const [subscription, setSubscription] = useState([]);\n    const [selectAll, setSelectAll] = useState(false);\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [examlist, setExamlist] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage, setPostsPerPage] = useState(5)\n    const config = {\n        headers: {\n            Authorization: Cookies.get(\"token\"),\n        },\n    };\n\n    useEffect(() => {\n        getExamlist();\n    }, []);\n\n    //   Verify user\n    const getExamlist = async () => {\n        try {\n            setLoader(true);\n            var userId =\n                Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n            const body = {\n                user_id: !!userId && userId.id,\n\n            };\n            const {\n                data: { message, status, data },\n            } = await axios.post(LMS_EXAMLIST_FOR_TEACHER, body);\n            console.log(data, \"data\");\n            if (status == 200) {\n                setLoader(false);\n                setExamlist(data);\n            } else {\n                setLoader(false);\n                toast.error(message);\n            }\n        } catch (error) {\n            setLoader(false);\n            if (error.response.data.status == 422) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(\"Something went wrong, please try again.!\");\n            }\n        }\n    };\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\n    const currentPosts = examlist.slice(indexOfFirstPost, indexOfLastPost)\n\n    //change page\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n    // Calculate the correct serial number for each item\n    const calculateSerialNumber = (index) => {\n        return (currentPage - 1) * postsPerPage + index + 1;\n    };\n\n    const handleSelectAllChange = () => {\n        setSelectAll(!selectAll);\n\n        // Update the globally selected items based on all items\n        const allItemIds = examlist.map((item) => item.id);\n\n        if (!selectAll) {\n            setSelectedItems(allItemIds);\n        } else {\n            setSelectedItems([]);\n        }\n    };\n\n    const handleCheckboxChange = (itemId) => {\n        // Toggle the selection for the current item on the current page\n        setSelectedItems((prevSelected) => {\n            if (prevSelected.includes(itemId)) {\n                return prevSelected.filter((id) => id !== itemId);\n            } else {\n                return [...prevSelected, itemId];\n            }\n        });\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                        <span>\n                            <Link to=\"/lms/dashboard\">\n                                <i className=\"fas fa-chevron-left\" />\n                                Exam List\n                            </Link>\n                        </span>\n                    </div>\n\n                    <div className=\"row savedTest\">\n                        {loader ? (\n                            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                                <Spinner />\n                            </div>\n                        ) : (\n                            <>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row savedTest\" >\n                                        <h4>Exam List</h4>\n                                        <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col-1\">\n                                                        <span className=\"d-flex\">\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                className=\"mr-2\"\n                                                                checked={selectAll}\n                                                                onChange={handleSelectAllChange}\n                                                            />\n                                                            All\n                                                        </span>\n                                                    </th>\n\n                                                    <th scope=\"col\">S.no</th>\n                                                    <th scope=\"col\">Exam Name</th>\n                                                    <th scope=\"col\" style={{ width: \"15%\" }}>Course Name</th>\n                                                    <th scope=\"col\" style={{ width: \"15%\" }}>Subject Name</th>\n                                                    <th scope=\"col\">Total Questions</th>\n                                                    <th scope=\"col\">Create Date</th>\n                                                    <th scope=\"col\">\n                                                        Action\n                                                    </th>\n                                                    <th>\n                                                        <button className=\"examlist-delect-all-btn\">Delete All</button>\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {currentPosts.length ? (\n                                                    currentPosts?.reverse().map((item, index) => (\n                                                        <tr key={index}>\n                                                            <td scope=\"row\">\n                                                                <input\n                                                                    type=\"checkbox\"\n                                                                    value={item.id}\n                                                                    id={item.id}\n                                                                    name=\"question_id\"\n                                                                    checked={selectedItems.includes(item.id)}\n                                                                    onChange={() => handleCheckboxChange(item.id)}\n                                                                />\n                                                            </td>\n                                                            <td scope=\"row\">{calculateSerialNumber(index)}</td>\n                                                            <td scope=\"row\"> {item.exam_name}</td>\n                                                            <td scope=\"row\"> {item.courses_name}</td>\n                                                            <td scope=\"row\"> {item.subjects_name}</td>\n                                                            <td scope=\"row\"> {item.total_questions}</td>\n                                                            <td scope=\"row\"> {getTestDate(item.created_at)}</td>\n                                                            <td>\n                                                                <Link to={\"/lms/examdetails/\" + item.exam_id}>\n                                                                    <span>\n                                                                        Details <i className=\"fas fa-chevron-right\"></i>\n                                                                    </span>\n                                                                </Link>\n                                                            </td>\n                                                            <td scope=\"row\"><button className=\"examlist-delect-btn\">Delete</button></td>\n                                                        </tr>\n                                                    ))\n                                                ) : (\n                                                    <tr>\n                                                        <td colSpan={6}>No Exam Fouad found..!</td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </>\n                        )}\n\n\n                        <Pagination postsPerpage={postsPerPage} totalPosts={examlist.length} paginate={paginate} setCurrentPage={setCurrentPage} currentPage={currentPage}></Pagination>\n\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n};\nexport default ExamList;\n","import React, { useContext, useEffect, useState } from 'react'\nimport Moment from 'react-moment'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport { Link, useHistory } from 'react-router-dom'\nimport { MY_SUBSCRIPTION, LMS_EXAMLIST_FOR_STUDENT } from '../../components/Api'\nimport Cookies from 'js-cookie'\nimport Header from '../../components/Header'\nimport Footer from '../../components/Footer'\nimport Spinner from '../../components/spinner/Spinner'\nimport { getTestDate } from '../../components/CommonFunction'\nimport { ThemeContext } from '../../ThemeContaxt/ThemeContaxt'\nimport Pagination from '../../Pagination/Pagination'\n\nconst ExamList = () => {\n  const history = useHistory()\n  const [loader, setLoader] = useState(false)\n  const [subscription, setSubscription] = useState([])\n  const [examlist, setExamlist] = useState([])\n  const [postsPerPage, setPostsPerPage] = useState(10)\n  const [currentPage, setCurrentPage] = useState(1)\n  const config = {\n    headers: {\n      Authorization: Cookies.get('token')\n    }\n  }\n\n  useEffect(() => {\n    getExamlist()\n  }, [])\n\n  //   Verify user\n  const getExamlist = async () => {\n    try {\n      setLoader(true)\n      var userId =\n        Cookies.get('user_data') && JSON.parse(Cookies.get('user_data'))\n      const body = {\n        user_id: !!userId && userId.id\n      }\n      const {\n        data: { message, status, data }\n      } = await axios.post(LMS_EXAMLIST_FOR_STUDENT, body)\n      console.log(data, 'data')\n      if (status == 200) {\n        setLoader(false)\n        setExamlist(data)\n      } else {\n        setLoader(false)\n        toast.error(message)\n      }\n    } catch (error) {\n      setLoader(false)\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message)\n      } else {\n        toast.error('Something went wrong, please try again.!')\n      }\n    }\n  }\n\n  //get current posts\n  const indexOfLastPost = currentPage * postsPerPage\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\n  const currentPosts = examlist.slice(indexOfFirstPost, indexOfLastPost)\n\n  // Calculate the correct serial number for each item\n  const calculateSerialNumber = index => {\n    return (currentPage - 1) * postsPerPage + index + 1\n  }\n\n  //change page\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  const { isDarkMode } = useContext(ThemeContext)\n\n  return (\n    <>\n      <Header />\n      <section className='free-testing-sec'>\n        <div className='container'>\n          <div\n            className={`pagination ${\n              isDarkMode ? 'text_color_light' : 'text_color_dark'\n            }`}\n          >\n            <span>\n              <Link to='/user/dashboard'>\n                <i className='fas fa-chevron-left' />\n                Exam List\n              </Link>\n            </span>\n          </div>\n\n          <div className='row savedTest'>\n            {loader ? (\n              <div className='spinner_div' style={{ minHeight: '400px' }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                <div className='col-md-12'>\n                  <div className='row savedTest'>\n                    <h4>Exam List</h4>\n                    <table\n                      className={`${\n                        isDarkMode\n                          ? 'table table-hover table-dark'\n                          : 'table table-hover table-white'\n                      }`}\n                    >\n                      <thead>\n                        <tr>\n                          <th scope='col'>S.no</th>\n                          <th scope='col'>Exam Name</th>\n                          <th scope='col'>Created By</th>\n                          <th scope='col'>Email</th>\n                          <th scope='col'>Course Name</th>\n                          <th scope='col'>Subject Name</th>\n                          <th scope='col'>Total Questions</th>\n                          <th scope='col'>Create Date</th>\n                          <th scope='col' style={{ width: '15%' }}>\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {currentPosts.length ? (\n                          currentPosts?.reverse().map((item, index) => (\n                            <tr key={index}>\n                              <td scope='row'>\n                                {calculateSerialNumber(index)}\n                              </td>\n                              <td scope='row'> {item.exam_name}</td>\n                              <td scope='row'>\n                                {' '}\n                                {item.first_name} {item.last_name}\n                              </td>\n                              <td scope='row'> {item.email}</td>\n                              <td scope='row'> {item.courseName}</td>\n                              <td scope='row'> {item.subjectName}</td>\n                              <td scope='row'> {item.total_questions}</td>\n                              <td scope='row'>\n                                {' '}\n                                {getTestDate(item.created_at)}\n                              </td>\n                              <td>\n                                {item.is_exam == 1 ? (\n                                  <Link\n                                    to={\n                                      '/user/studentexamdetails/' +\n                                      item.exam_id +\n                                      '/' +\n                                      item.created_for\n                                    }\n                                  >\n                                    <span className='badge-danger badge mr-2'>\n                                      View Result{' '}\n                                      <i className='fas fa-chevron-right'></i>\n                                    </span>\n                                  </Link>\n                                ) : (\n                                  <Link to={'/user/lms-exam/' + item.exam_id}>\n                                    <span className='badge-success badge mr-2'>\n                                      Start Exam{' '}\n                                      <i className='fas fa-chevron-right'></i>\n                                    </span>\n                                  </Link>\n                                )}\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={6}>No Exam Fouad found..!</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n          <Pagination\n            postsPerpage={postsPerPage}\n            totalPosts={examlist.length}\n            paginate={paginate}\n            setCurrentPage={setCurrentPage}\n            currentPage={currentPage}\n          ></Pagination>\n        </div>\n      </section>\n      <Footer />\n    </>\n  )\n}\nexport default ExamList\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { LMS_EXAM_DETAILS,LMS_EXAMSTUDENTS } from \"../../components/Api\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTestDate, removeTags } from \"../../components/CommonFunction\";\nimport { userAuth } from \"../../features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Comment from \"../../components/exam/Comment\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst LmsReport = () => {\n  const history = useHistory();\n  const isAuth = useSelector(userAuth); //using redux useSelector here\n  const [result, setResult] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [examforstudents, setexamforstudent] = useState([]);\n  const { examId } = useParams();\n\n  useEffect(() => {\n    getTestReport();\n    getExamforstudent();\n  }, []);\n\n  const getTestReport = async () => {\n    if (\n      examId == undefined &&\n      localStorage.getItem(\"userTestId\") == undefined\n    ) {\n      //history.push(\"/free-test\");\n      //return false;\n    }\n\n    try {\n      setLoader(true);\n      const body = {\n        examId: examId ? examId : localStorage.getItem(\"userTestId\"),\n      };\n      const {\n        data: { result, status },\n      } = await axios.post(LMS_EXAM_DETAILS, body);\n      if (status == 200) {\n        setResult(result);\n        setLoader(false);\n      } else {\n        //history.push(\"/free-test\");\n      }\n    } catch (error) {\n      console.log(error);\n      //toast.error(\"Something went wrong, please try again.!\");\n    }\n  };\n  \n  const getExamforstudent = async () => {\n    try {\n      setLoader(true);\n      const body = {\n        examId: examId ? examId : localStorage.getItem(\"userTestId\"),\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_EXAMSTUDENTS, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setexamforstudent(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  // Get options common function\n  function getOption(option, items) {\n    var rightAnser = \"\";\n    switch (option) {\n      case 1:\n        rightAnser = items.option_1;\n        break;\n      case 2:\n        rightAnser = items.option_2;\n        break;\n      case 3:\n        rightAnser = items.option_3;\n        break;\n      case 4:\n        rightAnser = items.option_4;\n        break;\n      default:\n        rightAnser = \"No Answer\";\n        break;\n    }\n    return rightAnser;\n  }\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          {loader ? (\n            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n              <Spinner />\n            </div>\n          ) : (\n            <>\n              <div className=\"pagination\">\n                <span>\n                  {examId ? (\n                    <Link to=\"/lms/exam\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                      <i className=\"fas fa-chevron-left\" />\n                      Back\n                    </Link>\n                  ) : (\n                    <Link to=\"/\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                      <i className=\"fas fa-chevron-left\" />\n                      Grade Report\n                    </Link>\n                  )}\n                </span>\n              </div>\n              <div className=\"frade-timing\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"grade-left\">\n                      <p>\n                        {`${\n                          result.courseName\n                            ? \"Course name -\" + result.courseName + \" | \"\n                            : \"\"\n                        }`}\n                        {`${\n                          result.subjectName\n                            ? \"Subject name -\" + result.subjectName + \" | \"\n                            : \"\"\n                        }`}\n                        {`${\n                          result.type\n                            ? result.type == 1\n                              ? \"Type - MCQ\"\n                              : \"Type - Theory\"\n                            : \"\"\n                        }`}\n                      </p>\n                      <p>\n                        {getTestDate(result.created_at)} <span>|</span>\n                        Total{\" \"} {result.total_questions} questions\n                      </p>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n              <div className=\"row \">\n                <div className=\"col-md-9 col-12\">\n                  <div className=\"grade-report-chart\">\n                    <Helmet>\n                      <script\n                        src=\"https://www.wiris.net/demo/plugins/app/WIRISplugins.js?viewer=image&async=true\"\n                        type=\"text/javascript\"\n                      />\n                    </Helmet>\n                    <ul>\n                      {result.questionsData?.length > 0 ? (\n                        result.questionsData?.map((item, index) => (\n                          <li\n                            className=\"green-list\"\n\n                            key={index}\n                          >\n                            <div className=\"chart-left\">\n                            <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div>\n                             \n                                <h5 className=\"green\">\n                                  <span>\n                                    {\" \"}\n                                    <i\n                                      className=\"fa fa-check\"\n                                      aria-hidden=\"true\"\n                                    />\n                                  </span>\n                                  <div\n                                    className=\"post__content\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: getOption(item.answer,item),\n                                    }}\n                                  />\n                                </h5>\n                            </div>\n                            <div className=\"chart-center\">\n                              <p\n                                style={{ cursor: \"pointer\" }}\n                                data-toggle=\"modal\"\n                                data-target={`#explanation-${index} `}\n                              >\n                                <img src=\"assets/images/not.png\" alt=\"\" />\n                                Explanation\n                              </p>\n\n                              {/*Expalanation modal  */}\n                              <div\n                                className=\"modal fade bd-example-modal-lg\"\n                                key={index}\n                                id={`explanation-${index} `}\n                                tabIndex={-1}\n                                role=\"dialog\"\n                                aria-labelledby=\"exampleModalLabel\"\n                                aria-hidden=\"true\"\n                              >\n                                <div\n                                  className=\"modal-dialog modal-lg\"\n                                  role=\"document\"\n                                >\n                                  <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                      <h5\n                                        className=\"modal-title\"\n                                        id=\"exampleModalLabel\"\n                                      >\n                                        Explanation\n                                      </h5>\n                                      <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        data-dismiss=\"modal\"\n                                        aria-label=\"Close\"\n                                      >\n                                        <span aria-hidden=\"true\">×</span>\n                                      </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                      {\n                                        item.explanation ? (\n                                          <div\n                                            className=\"post__content\"\n                                            dangerouslySetInnerHTML={{\n                                              __html: item.explanation,\n                                            }}\n                                          ></div>\n                                        ) : (\n                                          <div className=\"post__content\">\n                                            <p>No examination found..</p>\n                                          </div>\n                                        )\n                                        //   <MathJax.Provider>\n                                        //   <MathJax.Html html={item.explanation} />\n                                        // </MathJax.Provider>\n                                      }\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              {/* modal  */}\n                            </div>\n                            <div className=\"chart-center\">\n                              <p\n                                style={{ cursor: \"pointer\" }}\n                                data-toggle=\"modal\"\n                                data-target={`#comment-${index} `}\n                              >\n                                <img src=\"assets/images/chat.png\" alt=\"\" />\n                                Comments\n                              </p>\n                              {/*Comment modal  */}\n                              <div\n                                className=\"modal fade bd-example-modal-lg\"\n                                key={index}\n                                id={`comment-${index} `}\n                                tabIndex={-1}\n                                role=\"dialog\"\n                                aria-labelledby=\"exampleModalLabel\"\n                                aria-hidden=\"true\"\n                              >\n                                <div\n                                  className=\"modal-dialog modal-lg\"\n                                  role=\"document\"\n                                >\n                                  <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                      <h5\n                                        className=\"modal-title\"\n                                        id=\"exampleModalLabel\"\n                                      >\n                                        Comments\n                                      </h5>\n                                      <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        data-dismiss=\"modal\"\n                                        aria-label=\"Close\"\n                                      >\n                                        <span aria-hidden=\"true\">×</span>\n                                      </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                      {item.comments.length ? (\n                                        <Comment\n                                          comments={item.comments}\n                                          questionId={item.id}\n                                          //commentChange={handleCommentChange}\n                                        />\n                                      ) : (\n                                        <div className=\"post__content\">\n                                          <p>No comment found..</p>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              {/* modal  */}\n                            </div>\n                          </li>\n                        ))\n                      ) : (\n                        <p>No questions found..!</p>\n                      )}\n                    </ul>\n                  </div>\n                </div>\n                <div className=\"col-md-3 col-12\">\n                  <div className=\"free-test-tabing-right\">\n                    <span>Exam For Student List</span>\n                    <table className={`${isDarkMode ? 'table table-hover table-dark' : 'table table-white'}`}>\n                      <thead>\n                      <tr>\n                          <th scope=\"col\">S.no</th>\n                          <th scope=\"col\">Student Name</th>\n                          <th scope=\"col\">Email</th>\n                          <th scope=\"col\" style={{ width: \"15%\" }}>\n                            Status\n                          </th>\n                          <th scope=\"col\" style={{ width: \"15%\" }}>\n                            Result\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {examforstudents.length ? (\n                          examforstudents.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <th scope=\"row\"> {item.first_name} {item.last_name}</th>\n                              <th scope=\"row\"> {item.email}</th>\n                              \n                              <td>\n                                {item.status == 1 ? (\n                                  <span class=\"badge-success badge mr-2\">\n                                    Active\n                                  </span>\n                                ) : (\n                                  <span class=\"badge-danger badge mr-2\">\n                                    Inactive\n                                  </span>\n                                )}\n                              </td>\n                              <td>\n                                {item.is_exam == 1 ? (\n                                  <Link to={\"/lms/studentexamdetails/\" + examId +\"/\"+item.studentId}>\n                                  <span className=\"badge-danger badge mr-2\">\n                                    View\n                                  </span>\n                                </Link>\n                                ) : (\n                                  <span></span>\n                                )}\n                              </td>\n                              \n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={5}>No subscription found..!</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\n\nexport default LmsReport;\n","import React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { STUDENT_LMS_EXAM_REPORT } from \"../../components/Api\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTestDate, removeTags } from \"../../components/CommonFunction\";\nimport { userAuth } from \"../../features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Comment from \"../../components/exam/Comment\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst LmsStudentReport = () => {\n  const history = useHistory();\n  const isAuth = useSelector(userAuth); //using redux useSelector here\n  const [result, setResult] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const { examId } = useParams();\n  const { studentsId } = useParams();\n\n  useEffect(() => {\n    getTestReport();\n    //console.log(examId);\n    //console.log(studentsId);\n  }, []);\n\n  const getTestReport = async () => {\n    if (\n      examId == undefined &&\n      localStorage.getItem(\"userTestId\") == undefined\n    ) {\n      //history.push(\"/lms/subscription\");\n      //return false;\n    }\n\n    try {\n      setLoader(true);\n      const body = {\n        examId: examId ? examId : localStorage.getItem(\"userTestId\"),\n        student_id:studentsId\n      };\n      const {\n        data: { result, status },\n      } = await axios.post(STUDENT_LMS_EXAM_REPORT, body);\n      if (status == 200) {\n        setResult(result);\n        setLoader(false);\n      } else {\n        //history.push(\"/free-test\");\n      }\n    } catch (error) {\n      console.log(error);\n      //toast.error(\"Something went wrong, please try again.!\");\n    }\n  };\n\n  // Get correct answer from total question\n  const correctCount = () => {\n    return result.questionsData?.filter((item) => item?.isCorrect == true)\n      .length;\n  };\n\n  // If user has right answer\n  const getRightOption = (items) => {\n    return getOption(items.answer, items);\n  };\n  // If user has wrong anser\n  const getUserOption = (items) => {\n    return getOption(items.choosen_option, items);\n  };\n\n  // Get options common function\n  function getOption(option, items) {\n    var rightAnser = \"\";\n    switch (option) {\n      case 1:\n        rightAnser = items.option_1;\n        break;\n      case 2:\n        rightAnser = items.option_2;\n        break;\n      case 3:\n        rightAnser = items.option_3;\n        break;\n      case 4:\n        rightAnser = items.option_3;\n        break;\n      default:\n        rightAnser = \"No Answer\";\n        break;\n    }\n    return rightAnser;\n  }\n\n  const { isDarkMode } = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          {loader ? (\n            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n              <Spinner />\n            </div>\n          ) : (\n            <>\n              <div className=\"pagination\">\n                <span>\n                  {examId ? (\n                    <Link to=\"/lms/studentexamlist/${studentsId}\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                      <i className=\"fas fa-chevron-left\" />\n                      Back\n                    </Link>\n                  ) : (\n                    <Link to=\"/\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                      <i className=\"fas fa-chevron-left\" />\n                      Grade Report\n                    </Link>\n                  )}\n                </span>\n              </div>\n              <div className=\"frade-timing\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"grade-left\">\n                      <p>\n                        {`${\n                          result.courseName\n                            ? \"Course name -\" + result.courseName + \" | \"\n                            : \"\"\n                        }`}\n                        {`${\n                          result.subjectName\n                            ? \"Subject name -\" + result.subjectName + \" | \"\n                            : \"\"\n                        }`}\n                        {`${\n                          result.type\n                            ? result.type == 1\n                              ? \"Type - MCQ\"\n                              : \"Type - Theory\"\n                            : \"\"\n                        }`}\n                      </p>\n                      <p>\n                        {getTestDate(result.created_at)} <span>|</span>\n                        Time spent {result.time_spent} <span>|</span> Correct{\" \"}\n                        {correctCount()} of {result.total_questions} questions\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"grade-right\">\n                      <span>\n                        {Math.floor(\n                          (correctCount() / result.total_questions) * 100\n                        )}\n                        %\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row \">\n                <div className=\"col-md-9\">\n                  <div className=\"grade-report-chart\">\n                    <Helmet>\n                      <script\n                        src=\"https://www.wiris.net/demo/plugins/app/WIRISplugins.js?viewer=image&async=true\"\n                        type=\"text/javascript\"\n                      />\n                    </Helmet>\n                    <ul>\n                      {result.questionsData?.length > 0 ? (\n                        result.questionsData?.map((item, index) => (\n                          <li\n                            className={\n                              item.isCorrect ? \"green-list\" : \"red-list\"\n                            }\n                            key={index}\n                          >\n                            <div className=\"chart-left\">\n                            <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div>\n                              {/* <p>\n                                {removeTags(item.question).length > 60\n                                  ? (item.question\n                                      .trim()\n                                      .substring(0, 60)\n                                      .replace(/(&nbsp;|<([^>]+)>)/gi, \"\"),\n                                    +\"...\")\n                                  : item.question\n                                      .trim()\n                                      .replace(/(&nbsp;|<([^>]+)>)/gi, \"\")}\n                              </p> */}\n                              {item.answer == item.choosen_option ? (\n                                <h5 className=\"green\">\n                                  <span>\n                                    {\" \"}\n                                    <i\n                                      className=\"fa fa-check\"\n                                      aria-hidden=\"true\"\n                                    />\n                                  </span>\n                                  <div\n                                    className=\"post__content\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: getRightOption(item),\n                                    }}\n                                  />\n                                </h5>\n                              ) : (\n                                <>\n                                  <h5 className=\"green\">\n                                    <span>\n                                      {\" \"}\n                                      <i\n                                        className=\"fa fa-check\"\n                                        aria-hidden=\"true\"\n                                      />\n                                    </span>\n                                    <div\n                                      className=\"post__content\"\n                                      dangerouslySetInnerHTML={{\n                                        __html: getRightOption(item),\n                                      }}\n                                    />\n                                  </h5>\n                                  <h5 className=\"red\">\n                                    <span>\n                                      {\" \"}\n                                      <i\n                                        className=\"fa fa-check\"\n                                        aria-hidden=\"true\"\n                                      />\n                                    </span>\n                                    <div\n                                      className=\"post__content\"\n                                      dangerouslySetInnerHTML={{\n                                        __html: getUserOption(item),\n                                      }}\n                                    />\n                                  </h5>\n                                </>\n                              )}\n                            </div>\n                            <div className=\"chart-center\">\n                              <p\n                                style={{ cursor: \"pointer\" }}\n                                data-toggle=\"modal\"\n                                data-target={`#explanation-${index} `}\n                              >\n                                <img src=\"assets/images/not.png\" alt=\"\" />\n                                Explanation\n                              </p>\n\n                              {/*Expalanation modal  */}\n                              <div\n                                className=\"modal fade bd-example-modal-lg\"\n                                key={index}\n                                id={`explanation-${index} `}\n                                tabIndex={-1}\n                                role=\"dialog\"\n                                aria-labelledby=\"exampleModalLabel\"\n                                aria-hidden=\"true\"\n                              >\n                                <div\n                                  className=\"modal-dialog modal-lg\"\n                                  role=\"document\"\n                                >\n                                  <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                      <h5\n                                        className=\"modal-title\"\n                                        id=\"exampleModalLabel\"\n                                        style={{color: 'black'}}\n                                      >\n                                        Explanation\n                                      </h5>\n                                      <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        data-dismiss=\"modal\"\n                                        aria-label=\"Close\"\n                                      >\n                                        <span aria-hidden=\"true\">×</span>\n                                      </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                      {\n                                        item.explanation ? (\n                                          <div\n                                            className=\"post__content\"\n                                            dangerouslySetInnerHTML={{\n                                              __html: item.explanation,\n                                            }}\n                                          ></div>\n                                        ) : (\n                                          <div className=\"post__content\">\n                                            <p>No examination found..</p>\n                                          </div>\n                                        )\n                                        //   <MathJax.Provider>\n                                        //   <MathJax.Html html={item.explanation} />\n                                        // </MathJax.Provider>\n                                      }\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              {/* modal  */}\n                            </div>\n                            <div className=\"chart-center\">\n                              <p\n                                style={{ cursor: \"pointer\" }}\n                                data-toggle=\"modal\"\n                                data-target={`#comment-${index} `}\n                              >\n                                <img src=\"assets/images/chat.png\" alt=\"\" />\n                                Comments\n                              </p>\n                              {/*Comment modal  */}\n                              <div\n                                className=\"modal fade bd-example-modal-lg\"\n                                key={index}\n                                id={`comment-${index} `}\n                                tabIndex={-1}\n                                role=\"dialog\"\n                                aria-labelledby=\"exampleModalLabel\"\n                                aria-hidden=\"true\"\n                              >\n                                <div\n                                  className=\"modal-dialog modal-lg\"\n                                  role=\"document\"\n                                >\n                                  <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                      <h5\n                                        className=\"modal-title\"\n                                        id=\"exampleModalLabel\"\n                                        style={{color: 'black'}}\n                                      >\n                                        Comments\n                                      </h5>\n                                      <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        data-dismiss=\"modal\"\n                                        aria-label=\"Close\"\n                                      >\n                                        <span aria-hidden=\"true\">×</span>\n                                      </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                      {item.comments.length ? (\n                                        <Comment\n                                          comments={item.comments}\n                                          questionId={item.id}\n                                          //commentChange={handleCommentChange}\n                                        />\n                                      ) : (\n                                        <div className=\"post__content\">\n                                          <p>No comment found..</p>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              {/* modal  */}\n                            </div>\n                          </li>\n                        ))\n                      ) : (\n                        <p>No questions found..!</p>\n                      )}\n                    </ul>\n                  </div>\n                </div>\n                <div className=\"col-md-3\">\n                  <div className=\"free-test-tabing-right free-test-tabing-right free-test-tabing-right_light_color\">\n                    <span>Test Details</span>\n                    <ul>\n                      {result &&\n                        result.questionsData?.map((item, index) => (\n                          <>\n                            <li\n                              className={item.isCorrect ? \"green\" : \"red\"}\n                              key={index}\n                            >\n                              <a href=\"#\" onClick={(e) => e.preventDefault()}>\n                                {index + 1}\n                              </a>\n                            </li>\n                          </>\n                        ))}\n                    </ul>\n                    {!examId && (\n                      <div className=\"cal-btn\">\n                        <Link\n                          to={isAuth ? \"/user/free-test\" : \"/free-test\"}\n                          onClick={() => {\n                            localStorage.getItem(\"userTestId\") != null &&\n                              localStorage.removeItem(\"userTestId\");\n                          }}\n                        >\n                          Try again\n                        </Link>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\n\nexport default LmsStudentReport;\n","import React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { STUDENT_LMS_EXAM_REPORT } from \"../../components/Api\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTestDate, removeTags } from \"../../components/CommonFunction\";\nimport { userAuth } from \"../../features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Comment from \"../../components/exam/Comment\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst UserLmsStudentReport = () => {\n    const history = useHistory();\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n    const [result, setResult] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const { examId } = useParams();\n    const { studentsId } = useParams();\n\n    useEffect(() => {\n        getTestReport();\n        //console.log(examId);\n        //console.log(studentsId);\n    }, []);\n\n    const getTestReport = async () => {\n        if (\n            examId == undefined &&\n            localStorage.getItem(\"userTestId\") == undefined\n        ) {\n            //history.push(\"/lms/subscription\");\n            //return false;\n        }\n\n        try {\n            setLoader(true);\n            const body = {\n                examId: examId ? examId : localStorage.getItem(\"userTestId\"),\n                student_id: studentsId\n            };\n            const {\n                data: { result, status },\n            } = await axios.post(STUDENT_LMS_EXAM_REPORT, body);\n            if (status == 200) {\n                setResult(result);\n                setLoader(false);\n            } else {\n                //history.push(\"/free-test\");\n            }\n        } catch (error) {\n            console.log(error);\n            //toast.error(\"Something went wrong, please try again.!\");\n        }\n    };\n\n    // Get correct answer from total question\n    const correctCount = () => {\n        return result.questionsData?.filter((item) => item?.isCorrect == true)\n            .length;\n    };\n\n    // If user has right answer\n    const getRightOption = (items) => {\n        return getOption(items.answer, items);\n    };\n    // If user has wrong anser\n    const getUserOption = (items) => {\n        return getOption(items.choosen_option, items);\n    };\n\n    // Get options common function\n    function getOption(option, items) {\n        var rightAnser = \"\";\n        switch (option) {\n            case 1:\n                rightAnser = items.option_1;\n                break;\n            case 2:\n                rightAnser = items.option_2;\n                break;\n            case 3:\n                rightAnser = items.option_3;\n                break;\n            case 4:\n                rightAnser = items.option_3;\n                break;\n            default:\n                rightAnser = \"No Answer\";\n                break;\n        }\n        return rightAnser;\n    }\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n\n            <section className=\"free-testing-sec\">\n                <div className=\"container\">\n                    {loader ? (\n                        <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                            <Spinner />\n                        </div>\n                    ) : (\n                        <>\n                            <div className=\"pagination\">\n                                <span>\n                                    {examId ? (\n                                        <Link to=\"/user/lmsexam\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                            <i className=\"fas fa-chevron-left\" />\n                                            Back\n                                        </Link>\n                                    ) : (\n                                        <Link to=\"/\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                                            <i className=\"fas fa-chevron-left\" />\n                                            Grade Report\n                                        </Link>\n                                    )}\n                                </span>\n                            </div>\n                            <div className=\"frade-timing\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6 col-12\">\n                                        <div className=\"grade-left\">\n                                            <p>\n                                                {`${result.courseName\n                                                    ? \"Course name -\" + result.courseName + \" | \"\n                                                    : \"\"\n                                                    }`}\n                                                {`${result.subjectName\n                                                    ? \"Subject name -\" + result.subjectName + \" | \"\n                                                    : \"\"\n                                                    }`}\n                                                {`${result.type\n                                                    ? result.type == 1\n                                                        ? \"Type - MCQ\"\n                                                        : \"Type - Theory\"\n                                                    : \"\"\n                                                    }`}\n                                            </p>\n                                            <p>\n                                                {getTestDate(result.created_at)} <span>|</span>\n                                                Time spent {result.time_spent} <span>|</span> Correct{\" \"}\n                                                {correctCount()} of {result.total_questions} questions\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"grade-right\">\n                                            <span>\n                                                {Math.floor(\n                                                    (correctCount() / result.total_questions) * 100\n                                                )}\n                                                %\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row \">\n                                <div className=\"col-md-9\">\n                                    <div className=\"grade-report-chart\">\n                                        <Helmet>\n                                            <script\n                                                src=\"https://www.wiris.net/demo/plugins/app/WIRISplugins.js?viewer=image&async=true\"\n                                                type=\"text/javascript\"\n                                            />\n                                        </Helmet>\n                                        <ul>\n                                            {result.questionsData?.length > 0 ? (\n                                                result.questionsData?.map((item, index) => (\n                                                    <li\n                                                        className={\n                                                            item.isCorrect ? \"green-list\" : \"red-list\"\n                                                        }\n                                                        key={index}\n                                                    >\n                                                        <div className=\"chart-left\">\n                                                            <div className=\"post__content\" dangerouslySetInnerHTML={{ __html: item.question }}></div>\n                                                            {/* <p>\n                                {removeTags(item.question).length > 60\n                                  ? (item.question\n                                      .trim()\n                                      .substring(0, 60)\n                                      .replace(/(&nbsp;|<([^>]+)>)/gi, \"\"),\n                                    +\"...\")\n                                  : item.question\n                                      .trim()\n                                      .replace(/(&nbsp;|<([^>]+)>)/gi, \"\")}\n                              </p> */}\n                                                            {item.answer == item.choosen_option ? (\n                                                                <h5 className=\"green\">\n                                                                    <span>\n                                                                        {\" \"}\n                                                                        <i\n                                                                            className=\"fa fa-check\"\n                                                                            aria-hidden=\"true\"\n                                                                        />\n                                                                    </span>\n                                                                    <div\n                                                                        className=\"post__content\"\n                                                                        dangerouslySetInnerHTML={{\n                                                                            __html: getRightOption(item),\n                                                                        }}\n                                                                    />\n                                                                </h5>\n                                                            ) : (\n                                                                <>\n                                                                    <h5 className=\"green\">\n                                                                        <span>\n                                                                            {\" \"}\n                                                                            <i\n                                                                                className=\"fa fa-check\"\n                                                                                aria-hidden=\"true\"\n                                                                            />\n                                                                        </span>\n                                                                        <div\n                                                                            className=\"post__content\"\n                                                                            dangerouslySetInnerHTML={{\n                                                                                __html: getRightOption(item),\n                                                                            }}\n                                                                        />\n                                                                    </h5>\n                                                                    <h5 className=\"red\">\n                                                                        <span>\n                                                                            {\" \"}\n                                                                            <i\n                                                                                className=\"fa fa-check\"\n                                                                                aria-hidden=\"true\"\n                                                                            />\n                                                                        </span>\n                                                                        <div\n                                                                            className=\"post__content\"\n                                                                            dangerouslySetInnerHTML={{\n                                                                                __html: getUserOption(item),\n                                                                            }}\n                                                                        />\n                                                                    </h5>\n                                                                </>\n                                                            )}\n                                                        </div>\n                                                        <div className=\"chart-center\">\n                                                            <p\n                                                                style={{ cursor: \"pointer\" }}\n                                                                data-toggle=\"modal\"\n                                                                data-target={`#explanation-${index} `}\n                                                            >\n                                                                <img src=\"assets/images/not.png\" alt=\"\" />\n                                                                Explanation\n                                                            </p>\n\n                                                            {/*Expalanation modal  */}\n                                                            <div\n                                                                className=\"modal fade bd-example-modal-lg\"\n                                                                key={index}\n                                                                id={`explanation-${index} `}\n                                                                tabIndex={-1}\n                                                                role=\"dialog\"\n                                                                aria-labelledby=\"exampleModalLabel\"\n                                                                aria-hidden=\"true\"\n                                                            >\n                                                                <div\n                                                                    className=\"modal-dialog modal-lg\"\n                                                                    role=\"document\"\n                                                                >\n                                                                    <div className=\"modal-content\">\n                                                                        <div className=\"modal-header\">\n                                                                            <h5\n                                                                                className=\"modal-title\"\n                                                                                id=\"exampleModalLabel\"\n                                                                                style={{ color: 'black' }}\n                                                                            >\n                                                                                Explanation\n                                                                            </h5>\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"close\"\n                                                                                data-dismiss=\"modal\"\n                                                                                aria-label=\"Close\"\n                                                                            >\n                                                                                <span aria-hidden=\"true\">×</span>\n                                                                            </button>\n                                                                        </div>\n                                                                        <div className=\"modal-body\">\n                                                                            {\n                                                                                item.explanation ? (\n                                                                                    <div\n                                                                                        className=\"post__content\"\n                                                                                        dangerouslySetInnerHTML={{\n                                                                                            __html: item.explanation,\n                                                                                        }}\n                                                                                    ></div>\n                                                                                ) : (\n                                                                                    <div className=\"post__content\">\n                                                                                        <p>No examination found..</p>\n                                                                                    </div>\n                                                                                )\n                                                                                //   <MathJax.Provider>\n                                                                                //   <MathJax.Html html={item.explanation} />\n                                                                                // </MathJax.Provider>\n                                                                            }\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            {/* modal  */}\n                                                        </div>\n                                                        <div className=\"chart-center\">\n                                                            <p\n                                                                style={{ cursor: \"pointer\" }}\n                                                                data-toggle=\"modal\"\n                                                                data-target={`#comment-${index} `}\n                                                            >\n                                                                <img src=\"assets/images/chat.png\" alt=\"\" />\n                                                                Comments\n                                                            </p>\n                                                            {/*Comment modal  */}\n                                                            <div\n                                                                className=\"modal fade bd-example-modal-lg\"\n                                                                key={index}\n                                                                id={`comment-${index} `}\n                                                                tabIndex={-1}\n                                                                role=\"dialog\"\n                                                                aria-labelledby=\"exampleModalLabel\"\n                                                                aria-hidden=\"true\"\n                                                            >\n                                                                <div\n                                                                    className=\"modal-dialog modal-lg\"\n                                                                    role=\"document\"\n                                                                >\n                                                                    <div className=\"modal-content\">\n                                                                        <div className=\"modal-header\">\n                                                                            <h5\n                                                                                className=\"modal-title\"\n                                                                                id=\"exampleModalLabel\"\n                                                                                style={{ color: 'black' }}\n                                                                            >\n                                                                                Comments\n                                                                            </h5>\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"close\"\n                                                                                data-dismiss=\"modal\"\n                                                                                aria-label=\"Close\"\n                                                                            >\n                                                                                <span aria-hidden=\"true\">×</span>\n                                                                            </button>\n                                                                        </div>\n                                                                        <div className=\"modal-body\">\n                                                                            {item.comments.length ? (\n                                                                                <Comment\n                                                                                    comments={item.comments}\n                                                                                    questionId={item.id}\n                                                                                //commentChange={handleCommentChange}\n                                                                                />\n                                                                            ) : (\n                                                                                <div className=\"post__content\">\n                                                                                    <p>No comment found..</p>\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            {/* modal  */}\n                                                        </div>\n                                                    </li>\n                                                ))\n                                            ) : (\n                                                <p>No questions found..!</p>\n                                            )}\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3\">\n                                    <div className=\"free-test-tabing-right free-test-tabing-right_light_color\">\n                                        <span>Test Details</span>\n                                        <ul>\n                                            {result &&\n                                                result.questionsData?.map((item, index) => (\n                                                    <>\n                                                        <li\n                                                            className={item.isCorrect ? \"green\" : \"red\"}\n                                                            key={index}\n                                                        >\n                                                            <a href=\"#\" onClick={(e) => e.preventDefault()}>\n                                                                {index + 1}\n                                                            </a>\n                                                        </li>\n                                                    </>\n                                                ))}\n                                        </ul>\n                                        {!examId && (\n                                            <div className=\"cal-btn\">\n                                                <Link\n                                                    to={isAuth ? \"/user/free-test\" : \"/free-test\"}\n                                                    onClick={() => {\n                                                        localStorage.getItem(\"userTestId\") != null &&\n                                                            localStorage.removeItem(\"userTestId\");\n                                                    }}\n                                                >\n                                                    Try again\n                                                </Link>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n};\n\nexport default UserLmsStudentReport;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { GET_LMS_STUDENTREPORTS } from \"../../components/Api\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport Cookies from \"js-cookie\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst LmsStudentReports = () => {\n  //const userData = JSON.parse(useSelector(userProfile).user.user);\n  const [loader, setLoader] = useState(false);\n  const [report, setReports] = useState([]);\n  const { studentsId } = useParams();\n\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getReports();\n  }, []);\n\n  const getReports = async () => {\n    try {\n      var user_data = JSON.parse(Cookies.get(\"user_data\"));\n      const body = {\n        userId: user_data.id,\n        studentsId: studentsId,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(GET_LMS_STUDENTREPORTS, body, config);\n      if (status === 200) {\n        setLoader(false);\n        setReports(data);\n      } else {\n        setLoader(false);\n        toast.error(data.message);\n      }\n    } catch (error) {\n      setLoader(false);\n      toast.error(\"Student Didn't Complete Any Exam!\");\n    }\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination\">\n            <span>\n              <Link to=\"/lms/dashboard\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                <i className=\"fas fa-chevron-left\" />\n                Reports\n              </Link>\n            </span>\n          </div>\n\n          {loader ? (\n            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n              <Spinner />\n            </div>\n          ) : (\n            <>\n              <div className=\"report-menu\">\n                <div className=\"category free-testing-tabs\">\n                  <ul>\n                    <li>\n                      <p>{report.userReport?.length>0 ? report.userReport?.length\n                      : \"0\"}\n                      </p>\n                      Exam Assign\n                    </li>\n                    <li>\n                      <p>{report.totalQues>0 ? report.totalQues\n                      : \"0\"}</p>\n                      Total Questions\n                    </li>\n                    <li>\n                      <p>{report.totalgivenExam>0 ? report.totalgivenExam\n                      : \"0\"}</p>\n                      Exam Complete\n                    </li>\n                    <li>\n                      <p>{report.totalQuesseen>0 ? report.totalQuesseen\n                      : \"0\"}</p>\n                      Questions seen\n                    </li>\n                    <li>\n                      <p>{report.totalTime?.length>0 ? report.totalTime\n                      : \"00:00\"}</p>\n                      Time spent\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <table className={` ${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">S.no</th>\n                    <th scope=\"col\">Exam Name</th>\n                    <th scope=\"col\">Course Name</th>\n                    <th scope=\"col\">Subject Name</th>\n                    <th scope=\"col\">Student Name</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Time spent</th>\n                    <th scope=\"col\">Score</th>\n                    <th scope=\"col\" style={{ width: \"10%\" }}>\n                      View report\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {report.userReport?.length ? (\n                    report.userReport?.map((item, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{item.exam_name}</td>\n                        <td>{item.courseName}</td>\n                        <td>{item.subjectName}</td>\n                        <td>{item.sfirst_name} {item.slast_name}</td>\n                        <td>{getTestDate(item.created_at)}</td>\n                        <td>{item.time_spent}</td>\n                        <td>\n                          {item.is_exam == 1 ? (\n                            <div className=\"report-grade-right\">\n                              <span>\n                                {Math.floor(\n                                  (item.totaCorrectOption /\n                                    item.total_questions) *\n                                    100\n                                )}\n                                %\n                              </span>\n                            </div>\n                          ) : (\n                            <span></span>\n                          )}\n                        </td>\n                        <td>\n                          {item.is_exam == 1 ? (\n                            <Link to={\"/lms/studentexamdetails/\" + item.lmsexamId +\"/\"+item.created_for}>View</Link>\n                          ) : (\n                            <span></span>\n                          )}\n                           {/* <Link to={\"/user/studentexamdetails/\" + item.lmsexamId +\"/\"+item.created_for}>View</Link> */}\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={5}>No data found..!</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n              {loader && <Spinner />}\n            </>\n          )}\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n};\n\nexport default LmsStudentReports;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MY_SUBSCRIPTION } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\nimport { ThemeContext } from \"../../ThemeContaxt/ThemeContaxt\";\n\nconst ExamReslut = () => {\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [subscription, setSubscription] = useState([]);\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscription();\n  }, []);\n\n  //   Verify user\n  const getSubscription = async () => {\n    try {\n      setLoader(true);\n      const {\n        data: { message, status, data },\n      } = await axios.get(MY_SUBSCRIPTION, config);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const { isDarkMode} = useContext(ThemeContext);\n\n  return (\n    <>\n      <Header />\n      <section className=\"free-testing-sec\">\n        <div className=\"container\">\n          <div className=\"pagination\">\n            <span>\n              <Link to=\"/user/dashboard\" className={`${isDarkMode ? 'color_light' : 'color_dark'}`}>\n                <i className=\"fas fa-chevron-left\" />\n                Exam Results List\n              </Link>\n            </span>\n          </div>\n\n          <div className=\"row savedTest\">\n            {loader ? (\n              <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                <Spinner />\n              </div>\n            ) : (\n              <>\n                {/* <div className=\"report-menu\">\n                <div className=\"category free-testing-tabs\">\n                  <ul>\n                    <li>\n                      <p>{report.userReport?.length}</p>\n                      Tests taken\n                    </li>\n                    <li>\n                      <p>{report.totalQues}</p>\n                      Questions seen\n                    </li>\n                    <li>\n                      <p>{report.totalTime}</p>\n                      Time spent\n                    </li>\n                  </ul>\n                </div>\n              </div> */}\n                <div className=\"col-md-12\">\n                  <div className=\"row savedTest\" >\n                    <h4 style={{ color: \"#ffff\" }}>Student List</h4>\n                    <table className={` ${isDarkMode ? 'table table-hover table-dark' : 'table table-hover table-white'}`}>\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">S.no</th>\n                          <th scope=\"col\">Exam Name</th>\n                          <th scope=\"col\">Course Name</th>\n                          <th scope=\"col\">Subject Name</th>\n                          <th scope=\"col\">Student Name</th>\n                          <th scope=\"col\">Total Questions</th>\n                          <th scope=\"col\">Create Date</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\" style={{ width: \"15%\" }}>\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {subscription.length ? (\n                          subscription.map((item, index) => (\n                            <tr key={index}>\n                              <td scope=\"row\">{index + 1}</td>\n                              <td scope=\"row\"> {item.plan_name}</td>\n                              <td scope=\"row\"> {item.plan_name}</td>\n                              <td scope=\"row\"> {item.plan_name}</td>\n                              <td scope=\"row\"> {item.plan_name}</td>\n                              <td>\n                                {item.is_active == 1 ? (\n                                  <span className=\"badge-success badge mr-2\">\n                                    Active\n                                  </span>\n                                ) : (\n                                  <span className=\"badge-danger badge mr-2\">\n                                    Inactive\n                                  </span>\n                                )}\n                              </td>\n                              <td>\n                                <Link to={\"/lms/examdetails/\" + item.id}>\n                                  <span>\n                                    Details <i className=\"fas fa-chevron-right\"></i>\n                                  </span>\n                                </Link>\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={6}>No Exam Fouad found..!</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\nexport default ExamReslut;\n","import React, { useEffect } from \"react\";\nimport { getIsExam } from \"../../features/userSlice\";\nimport { useSelector } from \"react-redux\";\n\nconst LmsquestionsCount = (props) => {\n    const isExam = useSelector(getIsExam);\n\n    return (\n        <>\n            <ul>\n                {props.questions.map((item, index) => (\n                    <li\n                        key={index}\n                        onClick={() => props.jumpOnQuestion(index)}\n                        className={`${item.isAttempt\n                                ? \"exam\"\n                                : \"\"\n                            } pointer`}\n                    >\n                        <a href=\"#\" onClick={(e) => e.preventDefault()}>\n                            {index + 1}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\nexport default LmsquestionsCount;\n","import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport axios from 'axios'\nimport {\n  FLAG_QUESTION,\n  GET_LMS_EXAM_QUESTIONS_START,\n  QUESTION_COMMENT,\n  SAVE_LMS_QUESTIONS,\n  SAVE_LMS_TIME,\n  SAVE_USER_TEST\n} from '../../components/Api'\nimport { toast } from 'react-toastify'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userAuth, isTestStart } from '../../features/userSlice'\nimport LmsquestionsCount from '../../components/exam/LmsquestionsCount'\nimport { Link, useHistory } from 'react-router-dom'\nimport Modal from 'react-modal'\nimport Spinner from '../../components/spinner/Spinner'\nimport { useStopwatch } from 'react-timer-hook'\nimport { useParams } from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport Comment from '../../components/exam/Comment'\nimport Header from '../../components/Header'\nimport Footer from '../../components/Footer'\nimport { formatTime } from '../../components/CommonFunction'\nimport Statistics from '../../components/exam/statistics'\nimport { Helmet } from 'react-helmet'\nimport { ThemeContext } from '../../ThemeContaxt/ThemeContaxt'\n\nconst ResumeSavedTest = () => {\n  const { lmsExamtId } = useParams()\n  const [loader, setLoader] = useState(false)\n  const history = useHistory()\n  const [questionsData, setQuestionsData] = useState([])\n  const [finishWarning, setFinishWarning] = useState(false)\n  const [notAnswer, setNotAnswer] = useState('')\n  const [cancelWarning, setCancelWarning] = useState(false)\n  const [saveLoader, setSaveLoader] = useState(false)\n  const [step, setStep] = useState(0)\n  const [comment, setComment] = useState('')\n  const [commentLoader, setCommentLoader] = useState(false)\n  const [answerLoader, setAnswerLoader] = useState(false)\n  const [saveWarning, setSaveWarning] = useState(false)\n\n  const [flagWarning, setFlagWarning] = useState(false)\n  const [radioOption, setRadioValue] = useState(false)\n  const [radioInnerValue, setRadioInner] = useState(1)\n  const [selectedQuestionId, setQuestionId] = useState(null)\n  const [otherOption, setOtherOption] = useState(null)\n  const [isExam, setIsExam] = useState(true)\n\n  const dispatch = useDispatch()\n  var stopwatchOffset = new Date()\n  const [stopWatch, setStopWatch] = useState()\n\n  const { seconds, minutes, hours, start, pause, reset } = useStopwatch({\n    autoStart: false,\n    offsetTimestamp: !!stopwatchOffset && stopwatchOffset ? stopwatchOffset : ''\n  })\n\n  const isAuth = useSelector(userAuth) //using redux useSelector here\n\n  const SetTime = () => {\n    var stopwatchOffset = new Date()\n    stopwatchOffset.setSeconds(stopwatchOffset.getSeconds() + stopWatch)\n    reset(stopwatchOffset, true)\n    start()\n  }\n\n  useEffect(() => {\n    getSavedTetQuestion()\n  }, [lmsExamtId])\n\n  useEffect(() => {\n    SetTime()\n  }, [stopWatch])\n\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'rgba(0,0,0,0.4)',\n      zIndex: '9999',\n      overflowY: 'auto'\n    }\n  }\n  Modal.setAppElement('#root')\n\n  // get saved test data based on testId\n  const getSavedTetQuestion = async () => {\n    if (lmsExamtId == undefined) {\n      history.push('/user/lmsexam')\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: Cookies.get('token')\n        }\n      }\n      setLoader(true)\n      var userId =\n        Cookies.get('user_data') && JSON.parse(Cookies.get('user_data'))\n      const body = {\n        exam_id: lmsExamtId,\n        user_id: userId.id\n      }\n      const {\n        data: { status, data }\n      } = await axios.post(GET_LMS_EXAM_QUESTIONS_START, body)\n      if (status == 200) {\n        setQuestionsData(data.questions)\n\n        var hms = '15:10' //data.time_spent; // your input string\n        var a = hms.split(':') // split it at the colons\n        // minutes are worth 60 seconds. Hours are worth 60 minutes.\n        var seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2]\n        setStopWatch(seconds)\n        var index\n        // if(data.is_exam==1){\n        //   setIsExam(true);\n        // }\n        data.questions.some(function (x, i) {\n          if (x.isAttempt == true) {\n            index = i + 1\n          } else if (x.isAttempt != true) {\n            index = i >= 0 ? 1 : i\n          } else {\n            index = 1\n          }\n          return index\n        })\n\n        dispatch(isTestStart(true))\n        if (step !== data.questions.length) {\n          setStep(step + index)\n        }\n        setLoader(false)\n      } else {\n        history.push('/user/lmsexam')\n        toast.error('Something went wrong, please try again.!')\n      }\n    } catch (error) {\n      console.log(error)\n      toast.error('Something went wrong, please try again.!')\n    }\n  }\n\n  // Handle user answer\n  const handleAnswer = async (quesId, choosenAnswer) => {\n    var exam_id = lmsExamtId\n    if (exam_id == null) {\n      toast.error('Something went wrong, Kindly restart your test..!')\n      return false\n    }\n    var userId =\n      Cookies.get('user_data') && JSON.parse(Cookies.get('user_data'))\n    const bodyParameter = {\n      exam_id: exam_id,\n      question_id: quesId,\n      choosen_option: choosenAnswer,\n      user_id: userId.id\n    }\n    try {\n      const isAttemptQuestionState = questionsData.map(item =>\n        item.id === quesId\n          ? {\n              ...item,\n              isAttempt: true\n            }\n          : item\n      )\n      setQuestionsData(isAttemptQuestionState)\n      setAnswerLoader(true)\n      const {\n        data: { result, status, error }\n      } = await axios.post(SAVE_LMS_QUESTIONS, bodyParameter)\n      if (status == 200) {\n        setAnswerLoader(false)\n        const updateQuestionState = questionsData.map(item =>\n          item.id === quesId\n            ? {\n                ...item,\n                isAttempt: true,\n                rightOption: result.rightOption,\n                userOption: choosenAnswer,\n                isCorrect: result.rightOption == choosenAnswer ? true : false\n              }\n            : item\n        )\n        setQuestionsData(updateQuestionState)\n        if (isExam) {\n          setTimeout(() => {\n            if (step !== questionsData.length) {\n              setStep(step + 1)\n            }\n          }, 500)\n        } else {\n          if (choosenAnswer == result.rightOption) {\n            setTimeout(() => {\n              if (step !== questionsData.length) {\n                setStep(step + 1)\n              }\n            }, 500)\n          }\n        }\n      }\n    } catch (err) {\n      toast.error('Something went wrong, please try again..!')\n      setAnswerLoader(false)\n      console.log(err)\n    }\n  }\n\n  // Handle user cancel the test\n  const handleUserCancelTest = e => {\n    e.preventDefault()\n    dispatch(isTestStart(false))\n\n    setTimeout(() => {\n      history.push('/user/lmsexam')\n    }, 300)\n  }\n\n  //Get how many questions user not attempt\n  function getUserQuestionsNotAttempt () {\n    return questionsData.filter(item => item?.isAttempt !== true).length\n  }\n\n  //Get how many questions user attempt\n  function getUserQuestionsAttempt () {\n    return questionsData.filter(item => item?.isAttempt == true).length\n  }\n\n  // increment progeress bar count\n  const progressStatus = {\n    width:\n      Math.floor((getUserQuestionsAttempt() / questionsData.length) * 100) + '%'\n  }\n\n  // handle jump to question\n  const handleJumpQuestion = index => {\n    setStep(index + 1)\n  }\n\n  // handleUserCommnet\n  const handleUserCommnet = async (e, questionId) => {\n    e.preventDefault()\n    if (comment == '') {\n      toast.error('Please write your comment')\n      return false\n    }\n    try {\n      //setCommentLoader(true);\n      const config = {\n        headers: {\n          Authorization: Cookies.get('token')\n        }\n      }\n      var userData = JSON.parse(Cookies.get('user_data'))\n      var bodyParameters = {\n        user_id: userData.id,\n        question_id: questionId,\n        comment: comment\n      }\n      const {\n        data: { data, status }\n      } = await axios.post(QUESTION_COMMENT, bodyParameters, config)\n      if (status == 200) {\n        var tempData = [...questionsData]\n        tempData.filter(\n          ques => ques.id == questionId && ques.comments.unshift(data)\n        )\n        setQuestionsData(tempData)\n        setCommentLoader(false)\n        setComment('')\n      }\n    } catch (err) {\n      console.log(err)\n      setCommentLoader(false)\n      toast.error('Something went wrong please try again..!')\n    }\n  }\n\n  //Save test spent time\n  const saveTestTime = async time => {\n    try {\n      setLoader(true)\n      var userId =\n        Cookies.get('user_data') && JSON.parse(Cookies.get('user_data'))\n      var examId = lmsExamtId\n      const {\n        data: { status, message }\n      } = await axios.post(SAVE_LMS_TIME, {\n        exam_id: examId,\n        spentTime: time,\n        user_id: userId.id\n      })\n      console.log('LMS check')\n      if (status == 200) {\n        console.log('LMS finished')\n        setTimeout(() => {\n          // history.push(\"/user/lmsexam/\" + lmsExamtId);\n          history.push('/user/lmsexam/')\n        }, 200)\n      }\n    } catch (err) {\n      toast.error('Something went wrong, please try again..!')\n      setLoader(false)\n      console.log(err)\n    }\n  }\n\n  //If user cancel the test\n  const handleCancelTest = e => {\n    e.preventDefault()\n    setCancelWarning(true)\n  }\n\n  // change question comment state if user delete it\n  const handleCommentChange = useCallback((commentId, questionId) => {\n    const newState = [...questionsData]\n    let updatedComments = newState.map(item => {\n      if (item.id == questionId) {\n        return {\n          ...item,\n          comments: item.comments.filter(comm => comm.id != commentId)\n        }\n      }\n      return item\n    })\n    setQuestionsData(updatedComments)\n  })\n\n  // Dispay time\n  const myTimer = () => {\n    return (\n      <div className='timer'>\n        <img src='assets/images/timer.png' alt='' />\n        <span>\n          {formatTime(hours)} : {formatTime(minutes)} : {formatTime(seconds)}\n        </span>\n      </div>\n    )\n  }\n\n  //If user finish the test\n  const handleFinishTest = e => {\n    e.preventDefault()\n    var userNotAttempted = getUserQuestionsNotAttempt()\n    setNotAnswer(userNotAttempted)\n    var time = [hours, minutes, seconds]\n    if (userNotAttempted > 0) {\n      setFinishWarning(true)\n    } else {\n      saveTestTime(time.join(':'))\n      dispatch(isTestStart(false))\n    }\n  }\n\n  const handleConfirmButton = async e => {\n    e.preventDefault()\n\n    var time = [hours, minutes, seconds]\n    saveTestTime(time.join(':'))\n  }\n\n  // save test\n  const handleUserSaveTest = async e => {\n    e.preventDefault()\n    try {\n      const config = {\n        headers: {\n          Authorization: Cookies.get('token')\n        }\n      }\n      setSaveLoader(true)\n      var testId = lmsExamtId\n      var time = [hours, minutes, seconds]\n      const {\n        data: { status, message }\n      } = await axios.post(\n        SAVE_USER_TEST,\n        { testId: testId, spentTime: time.join(':') },\n        config\n      )\n      if (status == 200) {\n        dispatch(isTestStart(false))\n        setSaveLoader(false)\n        setTimeout(() => {\n          history.push('/user/dashboard')\n        }, 200)\n      }\n    } catch (err) {\n      toast.error('Something went wrong, please try again..!')\n      setSaveLoader(false)\n      console.log(err)\n    }\n  }\n\n  // Radio option flag\n  const handlerRadio = option => {\n    setRadioInner(option)\n    !!option && option == 3 ? setRadioValue(true) : setRadioValue(false)\n  }\n\n  // Handle user flag the test\n  const handleUserFlagTest = async e => {\n    e.preventDefault()\n\n    try {\n      //setCommentLoader(true);\n      const config = {\n        headers: {\n          Authorization: Cookies.get('token')\n        }\n      }\n      var userData = JSON.parse(Cookies.get('user_data'))\n      var bodyParameters = {\n        user_id: userData.id,\n        question_id: selectedQuestionId,\n        flag_option: radioInnerValue,\n        flag_option_text:\n          !!radioInnerValue && radioInnerValue == 1\n            ? 'its Spam'\n            : radioInnerValue == 2\n            ? 'Wrong Q/A'\n            : otherOption\n      }\n      const {\n        data: { data, status }\n      } = await axios.post(FLAG_QUESTION, bodyParameters, config)\n      if (status == 200) {\n        // Pushing element to the arrray of object with previous object\n        var tempData = questionsData.map(el =>\n          el.id === selectedQuestionId\n            ? {\n                ...el,\n                isFlag: true\n              }\n            : el\n        )\n        // Set the new array\n        setQuestionsData(tempData)\n        setFlagWarning(false)\n      }\n    } catch (err) {\n      console.log(err)\n      // setCommentLoader(false);\n      toast.error('Something went wrong please try again..!')\n    }\n  }\n\n  const handleFlag = questionId => {\n    setFlagWarning(true)\n    setQuestionId(questionId)\n  }\n\n  const { isDarkMode } = useContext(ThemeContext)\n\n  // console.log(questionsData)\n\n  return (\n    <>\n      <Header />\n      <section className='free-testing-sec'>\n        <div className='container'>\n          <div className='pagination'>\n            <span>\n              <Link\n                to='/user/lmsexam'\n                className={`${isDarkMode ? 'color_light' : 'color_dark'}`}\n              >\n                <i className='fas fa-chevron-left' />\n                LMS EXAM\n              </Link>\n            </span>\n          </div>\n          <div className='row'>\n            <div className='col-md-12'>\n              <div className='row short-container'>\n                {loader ? (\n                  <div className='spinner_div' style={{ minHeight: '400px' }}>\n                    <Spinner />\n                  </div>\n                ) : (\n                  <>\n                    <div className='col-md-9'>\n                      {questionsData.map((item, index) => (\n                        <div\n                          className={`free-test-tabing-left ${\n                            step && step == index + 1 ? 'active_qa' : 'hide_qa'\n                          } `}\n                          key={index}\n                        >\n                          <div className='timerr-inner'>\n                            <h5>\n                              {step > 1 && (\n                                <i\n                                  className='fas fa-chevron-left pointer'\n                                  onClick={() => setStep(step - 1)}\n                                />\n                              )}\n                              Q {index + 1} / {questionsData.length}{' '}\n                              {isAuth && item.isFlag == false ? (\n                                <i\n                                  className='fas fa-flag fa-sm'\n                                  onClick={e => handleFlag(item.id)}\n                                ></i>\n                              ) : isAuth && item.isFlag == true ? (\n                                <i\n                                  className='fas fa-flag fa-sm flaged-icon'\n                                  title='Already flagged this question'\n                                ></i>\n                              ) : (\n                                ''\n                              )}\n                            </h5>\n                            {myTimer()}\n                            <h5>\n                              {step !== questionsData.length && (\n                                <i\n                                  className='fas fa-chevron-right pointer'\n                                  onClick={() => setStep(step + 1)}\n                                />\n                              )}\n                            </h5>\n                          </div>\n                          <div className='free-test-tabing-left-bar'>\n                            <span style={progressStatus}></span>\n                          </div>\n                          <div className='tabing-inner-page'>\n                            <ul className='nav nav-pills'>\n                              <li className='active'>\n                                <a\n                                  className='active'\n                                  data-toggle='pill'\n                                  href={`#home_${index + 1}`}\n                                >\n                                  <i className='fas fa-play fa-sm'></i> Question\n                                </a>\n                              </li>\n                              <li>\n                                <a\n                                  data-toggle='pill'\n                                  href={`#explanation_${index + 1}`}\n                                >\n                                  <i className='fas fa-newspaper fa-sm'></i>{' '}\n                                  Excerpt\n                                </a>\n                              </li>\n                              <li>\n                                <a\n                                  data-toggle='pill'\n                                  href={`#statistics${index + 1}`}\n                                >\n                                  <i className='fas fa-chart-pie fa-sm'></i>{' '}\n                                  Statistics\n                                </a>\n                              </li>\n                              <li style={{ position: 'relative' }}>\n                                <a\n                                  data-toggle='pill'\n                                  href={`#comment_${index + 1}`}\n                                >\n                                  <i className='fas fa-comments fa-sm'></i>{' '}\n                                  {/* {item.comments.length > 0 && (\n                                    <span className=\"commentCount\">\n                                      {\" \"}\n                                      {item.comments.length}\n                                    </span>\n                                  )} */}\n                                  Comments\n                                </a>\n                              </li>\n                              {/* <li>\n                                <a\n                                  data-toggle=\"pill\"\n                                  href={`#save_${index + 1}`}\n                                >\n                                  <i className=\"fas fa-sticky-note fa-sm\"></i>{\" \"}\n                                  Notes\n                                </a>\n                              </li> */}\n                            </ul>\n                            <div className='tab-content'>\n                              <div\n                                id={`home_${index + 1}`}\n                                className='tab-pane fade in active show'\n                              >\n                                <Helmet>\n                                  <script\n                                    src='https://www.wiris.net/demo/plugins/app/WIRISplugins.js?viewer=image&async=true'\n                                    type='text/javascript'\n                                  />\n                                </Helmet>\n\n                                <div\n                                  className='post__content'\n                                  dangerouslySetInnerHTML={{\n                                    __html: item.question\n                                  }}\n                                ></div>\n                                {answerLoader && <Spinner />}\n\n                                <ul>\n                                  <button\n                                    className={`${\n                                      item.isAttempt && item.userOption == 1\n                                        ? 'exam'\n                                        : ''\n                                    }`}\n                                    onClick={() => handleAnswer(item.id, 1)}\n                                    //disabled={item.isAttempt}\n                                  >\n                                    <span>A</span>\n                                    <div\n                                      className='post__content'\n                                      dangerouslySetInnerHTML={{\n                                        __html: item.option_1\n                                      }}\n                                    />\n                                  </button>\n                                  <button\n                                    className={`${\n                                      item.isAttempt && item.userOption == 2\n                                        ? 'exam'\n                                        : ''\n                                    }`}\n                                    onClick={() => handleAnswer(item.id, 2)}\n                                    //disabled={item.isAttempt}\n                                  >\n                                    <span>B</span>\n                                    <div\n                                      className='post__content'\n                                      dangerouslySetInnerHTML={{\n                                        __html: item.option_2\n                                      }}\n                                    />\n                                  </button>\n                                  <button\n                                    className={`${\n                                      item.isAttempt && item.userOption == 3\n                                        ? 'exam'\n                                        : ''\n                                    }`}\n                                    onClick={() => handleAnswer(item.id, 3)}\n                                    //disabled={item.isAttempt}\n                                  >\n                                    <span>C</span>\n                                    <div\n                                      className='post__content'\n                                      dangerouslySetInnerHTML={{\n                                        __html: item.option_3\n                                      }}\n                                    />\n                                  </button>\n                                  <button\n                                    className={`${\n                                      item.isAttempt && item.userOption == 4\n                                        ? 'exam'\n                                        : ''\n                                    }`}\n                                    onClick={() => handleAnswer(item.id, 4)}\n                                    //disabled={item.isAttempt}\n                                  >\n                                    <span>D</span>\n                                    <div\n                                      className='post__content'\n                                      dangerouslySetInnerHTML={{\n                                        __html: item.option_4\n                                      }}\n                                    />\n                                  </button>\n                                </ul>\n                              </div>\n                              <div\n                                id={`explanation_${index + 1}`}\n                                className='tab-pane fade explanation'\n                              >\n                                {\n                                  item.excerpt && (\n                                    <div\n                                      className='post__content'\n                                      dangerouslySetInnerHTML={{\n                                        __html: item.excerpt\n                                      }}\n                                    ></div>\n                                  )\n                                  //   <MathJax.Provider>\n                                  //   <MathJax.Html html={item.explanation} />\n                                  // </MathJax.Provider>\n                                }\n                              </div>\n                              <div\n                                id={`statistics${index + 1}`}\n                                className='tab-pane fade explanation'\n                              >\n                                <p>Statistics</p>\n                                <Statistics stats={item.statistics} />\n                              </div>\n                              <div\n                                id={`comment_${index + 1}`}\n                                className='tab-pane fade'\n                              >\n                                <h3>User comments</h3>\n                                {/* {item.comments.length && (\n                                  <Comment\n                                    comments={item.comments}\n                                    questionId={item.id}\n                                    commentChange={handleCommentChange}\n                                  />\n                                )} */}\n                                {isAuth && (\n                                  <form>\n                                    <div className='form-group'>\n                                      <textarea\n                                        placeholder='Comment'\n                                        readOnly={!isAuth}\n                                        value={comment}\n                                        onChange={e =>\n                                          setComment(e.target.value)\n                                        }\n                                      />\n                                    </div>\n                                    <div className='form-group'>\n                                      <button\n                                        onClick={e =>\n                                          handleUserCommnet(e, item.id)\n                                        }\n                                        disabled={commentLoader}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        Post comment\n                                      </button>\n                                    </div>\n                                  </form>\n                                )}\n                              </div>\n                              <div\n                                id={`save_${index + 1}`}\n                                className='tab-pane fade'\n                              >\n                                <h3>\n                                  Your Personal Note{' '}\n                                  <span>(Not Visible to others)</span>\n                                </h3>\n                                <form>\n                                  <div className='form-group'>\n                                    <textarea\n                                      placeholder='Personal Note'\n                                      readOnly\n                                    ></textarea>\n                                  </div>\n                                  <div className='form-group'>\n                                    <button\n                                      disabled\n                                      title={\n                                        isAuth\n                                          ? ''\n                                          : 'You have to login to save your own note for this question.'\n                                      }\n                                    >\n                                      Save Note\n                                    </button>\n                                  </div>\n                                </form>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className='col-md-3'>\n                      <div\n                        className={`${\n                          isDarkMode\n                            ? 'free-test-tabing-right_light_color'\n                            : 'free-test-tabing-right_dark_color'\n                        }`}\n                      >\n                        <span>Test Details</span>\n                        <div\n                          className={`cal-btn ${\n                            isDarkMode\n                              ? 'cal-btn cat_btn_light'\n                              : 'cal-btn cat_btn_dark'\n                          }`}\n                        >\n                          <a\n                            href='#'\n                            onClick={handleCancelTest}\n                            style={{ whiteSpace: 'nowrap' }}\n                          >\n                            Cancel Exam\n                          </a>\n                          <a\n                            href='#'\n                            onClick={handleFinishTest}\n                            style={{ whiteSpace: 'nowrap' }}\n                          >\n                            Finish Exam\n                          </a>\n                        </div>\n                        <div className='cal-btn'></div>\n\n                        {/* <div className=\"cal-btn\" style={{ marginBottom: '10px' }}>\n                          <a\n                            href=\"#\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              setSaveWarning(true);\n                            }}\n                          >\n                            Save test\n                          </a>\n                        </div> */}\n\n                        <LmsquestionsCount\n                          questions={questionsData}\n                          jumpOnQuestion={handleJumpQuestion}\n                        />\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* If user finish the test */}\n        <Modal\n          isOpen={finishWarning}\n          //onRequestClose={() => setTestWarning(false)}\n          style={customStyles}\n          contentLabel='Finish test modal'\n          className='logout-modals'\n          id='exampleModalLong'\n          shouldReturnFocusAfterClose={false}\n        >\n          <div className='modal-dialog' role='document'>\n            <div className='modal-content'>\n              <div className='modal-body'>\n                <div className='payment-sucess'>\n                  <p>Incomplete test</p>\n                  <img src='assets/images/warning.png' alt='' />\n                  <p>You have to answer all questions to finish the test.</p>\n                  <p>You still have {notAnswer} unanswered questions.</p>\n                  <div className='row'>\n                    <a\n                      href='#'\n                      // onClick={(e) => {\n                      //     e.preventDefault();\n                      //     setFinishWarning(false);\n                      // }}\n\n                      onClick={handleConfirmButton}\n                    >\n                      Yes\n                    </a>\n\n                    <button\n                      href='#'\n                      onClick={e => {\n                        e.preventDefault()\n                        setFinishWarning(false)\n                      }}\n                    >\n                      No\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        {/* If user Flag Question */}\n        <Modal\n          isOpen={flagWarning}\n          //onRequestClose={() => setTestWarning(false)}\n          style={customStyles}\n          contentLabel='Finish test modal'\n          className='logout-modals'\n          id='exampleModalLong'\n          shouldReturnFocusAfterClose={false}\n        >\n          <div className='modal-dialog' role='document'>\n            <div className='modal-content'>\n              <div className='modal-body'>\n                <div className='payment-sucess'>\n                  <div className='edit-profile-modal__inner'>\n                    <h4 className='theme-txt text-center mb-4 '>\n                      Flag Question\n                    </h4>\n                    <img src='assets/images/warning.png' alt='' />\n                    <form>\n                      <div className='choose-report'>\n                        <div className='form-group'>\n                          <input\n                            type='radio'\n                            name='report'\n                            id='first-option'\n                            defaultValue=\"it's spam\"\n                            defaultChecked\n                            onClick={e => handlerRadio(1)}\n                          />\n                          <label htmlFor='first-option' />\n                          <span className='ml-1'>It's a spam</span>\n                        </div>\n                        <div className='form-group'>\n                          <input\n                            type='radio'\n                            name='report'\n                            id='second-option'\n                            defaultValue='Wrong Q/A'\n                            onClick={e => handlerRadio(2)}\n                          />\n                          <label htmlFor='second-option' />\n                          <span className='ml-1'>Wrong Q/A</span>\n                        </div>\n                        <div className='form-group'>\n                          <input\n                            type='radio'\n                            name='report'\n                            id='third-option'\n                            defaultValue='Other'\n                            onClick={e => handlerRadio(3)}\n                          />\n                          <label htmlFor='third-option' />\n                          <span className='ml-1'>Other</span>\n                        </div>\n                        <div className='form-group'>\n                          {radioOption ? (\n                            <input\n                              type='text'\n                              className='form-control'\n                              name='otherqa'\n                              placeholder='Write here'\n                              value={otherOption}\n                              onChange={e => setOtherOption(e.target.value)}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        {/* If user cancel the test */}\n        <Modal\n          isOpen={cancelWarning}\n          //onRequestClose={() => setTestWarning(false)}\n          style={customStyles}\n          contentLabel='Finish test modal'\n          className='logout-modals'\n          id='exampleModalLong'\n          shouldReturnFocusAfterClose={false}\n        >\n          <div className='modal-dialog' role='document'>\n            <div className='modal-content'>\n              <div className='modal-body'>\n                <div className='payment-sucess'>\n                  <p>Incomplete test</p>\n                  <img src='assets/images/warning.png' alt='' />\n                  <p>Do you really want to cancel this test?</p>\n                  <div className='row'>\n                    <a href='#' onClick={handleUserCancelTest}>\n                      Yes\n                    </a>\n                    <a\n                      href='#'\n                      onClick={e => {\n                        e.preventDefault()\n                        setCancelWarning(false)\n                        //blockRoutes();\n                      }}\n                    >\n                      No\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        {/* If user saved the test */}\n        <Modal\n          isOpen={saveWarning}\n          style={customStyles}\n          contentLabel='Finish test modal'\n          className='logout-modals'\n          id='exampleModalLong'\n          shouldReturnFocusAfterClose={false}\n        >\n          <div className='modal-dialog' role='document'>\n            <div className='modal-content'>\n              <div className='modal-body'>\n                <div className='payment-sucess'>\n                  <p>Save test</p>\n                  <img src='assets/images/warning.png' alt='' />\n                  <p>Do you really want to save this test?</p>\n                  <div className='row'>\n                    {saveLoader && <Spinner />}\n                    <button\n                      href='#'\n                      onClick={handleUserSaveTest}\n                      disabled={saveLoader}\n                    >\n                      Yes\n                    </button>\n                    <button\n                      href='#'\n                      onClick={e => {\n                        e.preventDefault()\n                        setSaveWarning(false)\n                        setLoader(false)\n                      }}\n                    >\n                      No\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </section>\n      <Footer />\n      {/* < ToastContainer /> */}\n    </>\n  )\n}\nexport default ResumeSavedTest\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {  Route,useParams,Redirect } from \"react-router-dom\";\nimport { LMS_SEND_REQUEST} from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\n\nconst SubscribeUsers = ({...rest}) => {\n  const { studentId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  const [updateForm, setUpdateForm] = useState({\n    searchstudentbyemail:\"\",\n  });\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n  }, []);\n\n  \n  const getSubscriptionrequest = async () => {\n    try {\n      const body = {\n        student_id: studentId,\n        teacher_id: userData ? userData.id : false,\n        request_from:userData ? userData.id : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_SEND_REQUEST, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n    } catch (error) {\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/lms/subscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default SubscribeUsers;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link, useHistory, useParams,Route,Redirect } from \"react-router-dom\";\nimport { LMS_TEACHER_SEND_REQUEST,LMS_REQUESTED_TEACHER,SEARCH_TEACHER_BY_EMAIL } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\n\nconst SubscribeUsers = ({...rest}) => {\n  const { teacherId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [subscription, setSubscription] = useState([]);\n  const [accepted, setAccepted] = useState([]);\n  const [pendingconfirm, setPending_confirm] = useState([]);\n  const [pendingrequest, setPending_request] = useState([]);\n  const [updateForm, setUpdateForm] = useState({\n    searchstudentbyemail:\"\",\n  });\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n    getSubscriptionsstudent();\n  }, []);\n\n  //   Verify user\n  const getSubscription = async () => {\n    try {\n      setLoader(false);\n      const body = {\n        searchstudentbyemail: updateForm.searchstudentbyemail,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(SEARCH_TEACHER_BY_EMAIL, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n  const getSubscriptionrequest = async () => {\n    try {\n      setLoader(true);\n      const body = {\n        student_id: userData ? userData.id : false,\n        teacher_id: teacherId,\n        request_from:userData ? userData.id : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_TEACHER_SEND_REQUEST, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        toast.success(message);\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const getSubscriptionsstudent = async () => {\n    try {\n      setLoader(true);\n      const body = {\n        userId: userData ? userData.id : false,\n        userRole:userData ? userData.affiliate_role : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_REQUESTED_TEACHER, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setAccepted(data.accepted);\n        setPending_confirm(data.pending_confirm);\n        setPending_request(data.pending_request);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n  const handleEditChange = (e) => {\n    setUpdateForm({\n      ...updateForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/user/teachersubscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default SubscribeUsers;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {  Route,useParams,Redirect } from \"react-router-dom\";\nimport { LMS_USER_BLOCK } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\n\nconst BlockUsers = ({...rest}) => {\n  const { studentId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  \n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n  }, []);\n\n  \n  const getSubscriptionrequest = async () => {\n    try {\n      const body = {\n        student_id: studentId,\n        teacher_id: userData ? userData.id : false,\n        request_from:userData ? userData.id : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_USER_BLOCK, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n    } catch (error) {\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/lms/subscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default BlockUsers;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Route,Link, useHistory, useParams,Redirect } from \"react-router-dom\";\nimport { LMS_USER_BLOCK,LMS_REQUESTEDSTUDENTS,USER_STUDENTS,SEARCH_TEACHER_BY_EMAIL } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\n\nconst BlockUsers = ({...rest}) => {\n  const { teacherId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  const history = useHistory();\n  const [loader, setLoader] = useState(false);\n  const [subscription, setSubscription] = useState([]);\n  const [accepted, setAccepted] = useState([]);\n  const [pendingconfirm, setPending_confirm] = useState([]);\n  const [pendingrequest, setPending_request] = useState([]);\n  const [updateForm, setUpdateForm] = useState({\n    searchstudentbyemail:\"\",\n  });\n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n    getSubscriptionsstudent();\n  }, []);\n\n  //   Verify user\n  const getSubscription = async () => {\n    try {\n      setLoader(false);\n      const body = {\n        searchstudentbyemail: updateForm.searchstudentbyemail,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(SEARCH_TEACHER_BY_EMAIL, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n  const getSubscriptionrequest = async () => {\n    try {\n      setLoader(true);\n      const body = {\n        student_id: userData ? userData.id : false,\n        teacher_id: teacherId,\n        request_from:userData ? userData.id : false,\n        userId: userData ? userData.id : false,\n        userRole:userData ? userData.affiliate_role : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_USER_BLOCK, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        toast.success(message);\n        setSubscription(data);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  const getSubscriptionsstudent = async () => {\n    try {\n      setLoader(true);\n      const body = {\n        userId: userData ? userData.id : false,\n        userRole:userData ? userData.affiliate_role : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_REQUESTEDSTUDENTS, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        setLoader(false);\n        setAccepted(data.accepted);\n        setPending_confirm(data.pending_confirm);\n        setPending_request(data.pending_request);\n      } else {\n        setLoader(false);\n        toast.error(message);\n      }\n    } catch (error) {\n      setLoader(false);\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n  const handleEditChange = (e) => {\n    setUpdateForm({\n      ...updateForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/user/teachersubscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default BlockUsers;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Route,Link, useHistory, useParams,Redirect } from \"react-router-dom\";\nimport { LMS_USER_BLOCK,LMS_REQUESTEDSTUDENTS,USER_STUDENTS,SEARCH_TEACHER_BY_EMAIL } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport { getTestDate } from \"../../components/CommonFunction\";\n\nconst CancleRequest = ({...rest}) => {\n  const { teacherId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n \n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n  }, []);\n\n  const getSubscriptionrequest = async () => {\n    try {\n      const body = {\n        student_id: userData ? userData.id : false,\n        teacher_id: teacherId,\n        request_from:userData ? userData.id : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_USER_BLOCK, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n    } catch (error) {\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/user/teachersubscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default CancleRequest;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Route,useParams,Redirect } from \"react-router-dom\";\nimport { LMS_USER_BLOCK} from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\n\nconst CancleRequest = ({...rest}) => {\n  const { studentId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n \n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n  }, []);\n\n  const getSubscriptionrequest = async () => {\n    try {\n      const body = {\n        student_id: studentId,\n        teacher_id: userData ? userData.id : false,\n        request_from:userData ? userData.id : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_USER_BLOCK, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n    } catch (error) {\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  \n \n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/lms/subscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default CancleRequest;\n","import React, { useEffect} from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Route,useParams,Redirect } from \"react-router-dom\";\nimport { LMS_USER_ACCEPT } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\n\n\nconst AcceptRequest = ({...rest}) => {\n  const { teacherId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  \n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n  }, []);\n\n  //   Verify user\n  \n  const getSubscriptionrequest = async () => {\n    try {\n      const body = {\n        student_id: userData ? userData.id : false,\n        teacher_id: teacherId,\n        request_from:userData ? userData.id : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_USER_ACCEPT, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n    } catch (error) {\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/user/teachersubscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default AcceptRequest;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Route,useParams,Redirect } from \"react-router-dom\";\nimport { LMS_TEACHER_ACCEPT_REQUEST } from \"../../components/Api\";\nimport Cookies from \"js-cookie\";\n\n\nconst AcceptRequest = ({...rest}) => {\n  const { studentId } = useParams();\n  const userData =\n    Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));\n  \n  const config = {\n    headers: {\n      Authorization: Cookies.get(\"token\"),\n    },\n  };\n\n  useEffect(() => {\n    getSubscriptionrequest();\n  }, []);\n\n  const getSubscriptionrequest = async () => {\n    try {\n      const body = {\n        student_id: studentId,\n        teacher_id: userData ? userData.id : false,\n        request_from:userData ? userData.id : false,\n      };\n      const {\n        data: { message, status, data },\n      } = await axios.post(LMS_TEACHER_ACCEPT_REQUEST, body);\n      console.log(data, \"data\");\n      if (status == 200) {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n    } catch (error) {\n      if (error.response.data.status == 422) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(\"Something went wrong, please try again.!\");\n      }\n    }\n  };\n\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        Cookies.get(\"token\") &&\n        Cookies.get(\"user_data\") && (\n        <>\n          <Redirect\n            to={{\n              pathname: \"/lms/subscription\",\n              state: { from: props.location },\n            }}\n          />\n        </>\n      )\n    }\n    />\n  );\n};\nexport default AcceptRequest;\n","import React, { useEffect, useState } from 'react'\nimport Header from '../../components/Header'\nimport Footer from '../../components/Footer'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, profile } from \"../../features/userSlice\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { AFFILIATE_SUBSCRIPTION_USERS } from '../../components/Api';\nimport { useContext } from 'react';\nimport { ThemeContext } from '../../ThemeContaxt/ThemeContaxt';\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\n\nconst RefferUser = () => {\n    const [getUsers, setGetUsers] = useState([])\n\n    useEffect(() => {\n        getAffiliateDashboard();\n    }, []);\n\n    const getAffiliateDashboard = async () => {\n        try {\n            const config = {\n                headers: {\n                    Authorization: Cookies.get(\"token\"),\n                },\n            };\n\n            fetch(AFFILIATE_SUBSCRIPTION_USERS, config)\n                .then(res => res.json())\n                .then(data => setGetUsers(data.data))\n\n        }\n        catch (error) {\n            console.log(\"error\", error);\n        }\n    };\n    // console.log(getUsers)\n\n    const autoReload = () => {\n        // Reload the current page\n        window.location.reload();\n    };\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <div>\n            <Header></Header>\n            <div style={{ height: '50vh' }}>\n\n\n\n                {getUsers.length > 0 ?\n                    (\n                        <>\n                            <div className={`container mt-4 ${isDarkMode ? 'table-dark' : 'table-white'} `}>\n\n                                <div className=\"pagination\">\n                                    <span onClick={autoReload} className={`${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                                        <Link to=\"/affiliate/dashboard\">\n                                            <i className=\"fas fa-chevron-left\" />\n                                            Back\n                                        </Link>\n                                    </span>\n                                </div>\n\n                                <h2>RefferUser</h2>\n                            </div>\n\n                            <table className={`table table-striped container ${isDarkMode ? 'table-dark' : 'table-white'}`}>\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        <th scope=\"col\">First Name</th>\n                                        <th scope=\"col\">Last Name</th>\n                                        <th scope=\"col\">User Phone</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        getUsers.map(user => (\n                                            <tr>\n                                                <th scope=\"row\">1</th>\n                                                <td>{user.first_name}</td>\n                                                <td>{user.last_name}</td>\n                                                <td>{user.phoneno}</td>\n                                            </tr>\n                                        ))\n                                    }\n\n                                </tbody>\n                            </table>\n                        </>\n                    )\n                    :\n                    (\n                        <div className='container mt-4 '>\n                            <div className=\"pagination\">\n                                    <span onClick={autoReload} className={`${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                                        <Link to=\"/affiliate/dashboard\">\n                                            <i className=\"fas fa-chevron-left\" />\n                                            Back\n                                        </Link>\n                                    </span>\n                                </div>\n                            <h1>No User Reffer Your Code</h1>\n                        </div>\n                    )\n                }\n            </div>\n            <Footer></Footer>\n        </div>\n    )\n}\n\n\nexport default RefferUser\n","import React from 'react'\nimport { useState } from 'react';\nimport Spinner from \"../components/spinner/Spinner\";\nimport {\n    CHANGE_STATUS_TOPIC,\n    CREATE_TOPIC,\n    DELETE_TOPIC,\n    GET_SINGLE_ALL_TOPIC,\n} from \"../components/Api\";\nimport { useEffect } from 'react';\nimport Cookies from \"js-cookie\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\nimport Moment from \"react-moment\";\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { useContext } from 'react';\nimport { ThemeContext } from '../ThemeContaxt/ThemeContaxt';\nimport Modal from \"react-modal\";\n\nconst MyTopic = () => {\n    const [getTopicLoader, setTopicLoader] = useState(false);\n    const [topic, setTopic] = useState([]);\n    const userData = JSON.parse(Cookies.get(\"user_data\"));\n    const [deleteWarning, setDeleteWarning] = useState(false);\n    const [delectItem, setDelectItem] = useState(null)\n\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    const customStyles = {\n        overlay: {\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            zIndex: \"9999\",\n            overflowY: \"auto\",\n        },\n    };\n\n    const deleteTopic = async (topicid) => {\n        setDelectItem(topicid)\n        setDeleteWarning(true)\n    };\n\n    const handelConfirmDelect = async() =>{\n        \n        const bodyParameters = {\n            id: delectItem,\n            user_id: userData.id,\n        };\n\n        try {\n            const {\n                data: { data, status },\n            } = await axios.post(DELETE_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                toast.success(\"Deleted successfully\");\n                getUserTopic();\n                setDeleteWarning(false)\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    }\n\n    const changeStatus = async (topicid, status) => {\n        const bodyParameters = {\n            id: topicid,\n            user_id: userData.id,\n            status: status == 1 ? 0 : 1,\n        };\n\n        try {\n            const {\n                data: { data, status },\n            } = await axios.post(CHANGE_STATUS_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                toast.success(\"Status changed successfully\");\n                getUserTopic();\n            }\n        } catch (err) {\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    //Get courses on page load\n    const getUserTopic = async () => {\n        try {\n            const bodyParameters = {\n                id: userData.id,\n            };\n            setTopicLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(GET_SINGLE_ALL_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                setTopic(data);\n                setTopicLoader(false);\n            }\n        } catch (err) {\n            setTopicLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    useEffect(() => {\n        getUserTopic();\n    }, []);\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <div className='blog-page-main' style={{ height: \"70vh\" }}>\n                <div className=\"container\">\n                    <div className={`pagination ${isDarkMode ? 'text_color_light' : 'text_color_dark'}`}>\n                        <span>\n                            <Link to=\"/forum\">\n                                <i className=\"fas fa-chevron-left\" />\n                                Back\n                            </Link>\n                        </span>\n                    </div>\n\n                    <div className=\"d-flex justify-content-end\">\n                        <div className=\"p-0 mb-3\">\n                            <Link className=\"common-btn-md\" to={`/topic-create`}>\n                                <span className=\"btn-icon-wrapper pr-2 opacity-7\">\n                                    {\" \"}\n                                    <i className=\"fa fa-plus fa-w-20\" />{\" \"}\n                                </span>\n                                New thread\n                            </Link>\n                        </div>\n                    </div>\n\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header pl-0 pr-0\">\n                            <div className=\"row no-gutters w-100 align-items-center\">\n                                <div className=\"col ml-3 color_dark\">Yours Topics</div>\n                                <div className=\"col-4 text-muted\">\n                                    <div className=\"row no-gutters align-items-center\">\n                                        <div className=\"col-4 color_dark\">Replies</div>\n                                        <div className=\"col-4 color_dark\">Last updated</div>\n                                        <div className=\"col-4 color_dark\">Action</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {getTopicLoader ? (\n                            <div className=\"spinner_div\">\n                                <Spinner />\n                            </div>\n                        ) : (\n                            <>\n                                {topic.length > 0 ? (\n                                    topic.map((item, i) => (\n                                        <>\n                                            <div\n                                                className=\"card-body py-3 main_forum_container_body color_dark\"\n                                                key={i}\n                                            >\n                                                <div\n                                                    className=\"row no-gutters align-items-center\"\n                                                    key={i}\n                                                >\n                                                    <div className=\"col\">\n                                                        {\" \"}\n                                                        <Link className=\"text-big\" to={`/forum/${item.id}`}>\n                                                            {item.topic_name}\n                                                        </Link>\n                                                        <div className=\"text-muted small mt-1\">\n                                                            <Moment fromNow>{item.created_at}</Moment>{\" \"}\n                                                            &nbsp;·&nbsp;{\" \"}\n                                                            <Link\n                                                                to=\"#\"\n                                                                onClick={(e) => e.preventDefault()}\n                                                                className=\"text-muted\"\n                                                                data-abc=\"true\"\n                                                            >\n                                                                {item.first_name}\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"d-none d-md-block col-4\">\n                                                        <div className=\"row no-gutters align-items-center\">\n                                                            <div className=\"col-4\">\n                                                                {item.comment == null ? 0 : item.comment}\n                                                            </div>\n                                                            <div className=\"media col-4 align-items-center\">\n                                                                <div className=\"media-body flex-truncate ml-2\">\n                                                                    <div className=\"line-height-1 text-truncate\">\n                                                                        <Moment fromNow>{item.updated_at}</Moment>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-4\">\n                                                                <button\n                                                                    className=\"btn btn-sm btn-danger mr-2\"\n                                                                    onClick={() => deleteTopic(item.id)}\n                                                                    title=\"Delete\"\n                                                                >\n                                                                    Delete\n                                                                </button>\n                                                                <button\n                                                                    className={`btn btn-sm ${item.status == 1\n                                                                        ? \"btn-success\"\n                                                                        : \"btn-warning\"\n                                                                        }`}\n                                                                    onClick={() =>\n                                                                        changeStatus(item.id, item.status)\n                                                                    }\n                                                                    title={\n                                                                        item.status == 1 ? \"InActive\" : \"Active\"\n                                                                    }\n                                                                >\n                                                                    {item.status == 1 ? \"Active\" : \"InActive\"}\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <hr className=\"m-0\" />\n                                        </>\n                                    ))\n                                ) : (\n                                    <p style={{color: \"#000\"}}>No Topic Post found..!</p>\n                                )}\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n\n            <Modal\n                isOpen={deleteWarning}\n                //onRequestClose={() => setTestWarning(false)}\n                style={customStyles}\n                contentLabel=\"Finish test modal\"\n                className=\"logout-modals\"\n                id=\"exampleModalLong\"\n                shouldReturnFocusAfterClose={false}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <div className=\"payment-sucess\">\n                                <p>Are you sure you want to delect?</p>\n                                <img src=\"assets/images/warning.png\" alt=\"\" />\n                                {/* <p>You have number of questions unanswered, confirm you want to end test</p> */}\n                                {/*<p>You still have {notAnswer} unanswered questions.</p>*/}\n                                <div className=\"row\">\n                                    <a\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            handelConfirmDelect()\n                                        }}\n                                        \n                                        // onClick={handelConfirmDelect}\n                                    >\n                                        Yes\n                                    </a>\n\n                                    <button\n                                        href=\"#\"\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            setDeleteWarning(false);\n                                        }}\n                                    >\n                                        No\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n\n\n            <Footer />\n        </>\n    )\n}\n\nexport default MyTopic","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { GET_ALL_TOPIC } from \"../components/Api\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport { useSelector } from \"react-redux\";\nimport { userAuth } from \"../features/userSlice\";\nimport Signin from \"../components/modals/signin\";\n\nconst ForumHome = () => {\n    const [topic, setTopic] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n    const [open, setOpen] = useState(false);\n\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    // handle to close the modal\n    const handleCloseModal = () => {\n        setOpen(false);\n    };\n\n    //Get courses on page load\n\n    //Get courses on page load\n    const getTopics = async () => {\n        try {\n            setLoader(true);\n\n            const {\n                data: { data, status },\n            } = await axios.get(GET_ALL_TOPIC);\n            if (status == 200) {\n                setLoader(false);\n                setTopic(data);\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    useEffect(() => {\n        getTopics();\n    }, []);\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"blog-page-main block-element\">\n                <div className=\"container mt-100 main_forum_container\">\n                    <div className=\"d-flex flex-wrap \">\n\n                        <div className=\"col-md-2 p-0 mb-3\">\n                            <Link className=\"common-btn-md\" to=\"#\" onClick={() => setOpen(true)}>\n                                <span className=\"btn-icon-wrapper pr-2 opacity-7\">\n                                    {\" \"}\n                                    <i className=\"fa fa-plus fa-w-20\" />{\" \"}\n                                </span>\n                                New thread\n                            </Link>\n                        </div>\n\n                        {\n                            isAuth ? <div className=\"col-md-3 p-0 mb-3\">\n                                <Link className=\"common-btn-md\" to={`/my-topic`}>\n                                    <span className=\"btn-icon-wrapper pr-2 opacity-7\">\n                                        {\" \"}\n                                        {/* <i className=\"fa fa-plus fa-w-20\" />{\" \"} */}\n                                    </span>\n                                    My Topice\n                                </Link>\n                            </div>\n                                :\n                                <>\n\n                                </>\n                        }\n\n                    </div>\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header pl-0 pr-0\">\n                            <div className=\"row no-gutters w-100 align-items-center\">\n                                <div className={`col ml-3 ${isDarkMode ? 'topics_dark' : 'topics_light'}`}>Topics</div>\n                                <div className=\"col-4 text-muted\">\n                                    <div className=\"row no-gutters align-items-center\">\n                                        <div className=\"col-6 col-md-4\">Replies</div>\n                                        <div className=\"col-6 col-md-8\">Last update</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {loader ? (\n                            <div className=\"spinner_div\" style={{ minHeight: \"400px\" }}>\n                                <Spinner />\n                            </div>\n                        ) : (\n                            <>\n                                {topic.length > 0 ? (\n                                    topic.map((item, i) => (\n                                        <>\n                                            <div\n                                                className=\"card-body py-3 main_forum_container_body\"\n                                                key={i}\n                                            >\n                                                <div className=\"row no-gutters align-items-center\">\n                                                    <div className=\"col\">\n                                                        <Link className=\"text-big\" to={`/forum-home/${item.id}`}>\n                                                            {item.topic_name}\n                                                        </Link>\n                                                        <div className=\"text-muted small mt-1\">\n                                                            <Moment fromNow>{item.created_at}</Moment>{\" \"}\n                                                            &nbsp;·&nbsp;{\" \"}\n                                                            <Link\n                                                                to=\"#\"\n                                                                onClick={(e) => e.preventDefault()}\n                                                                className=\"text-muted\"\n                                                                data-abc=\"true\"\n                                                            >\n                                                                {item.first_name}\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\" d-md-block col-4\">\n                                                        <div className=\"row no-gutters align-items-center\">\n                                                            <div className={`col-4 ${isDarkMode ? 'topics_light' : 'topics_dark'}`}>\n                                                                {item.comment == null ? 0 : item.comment}\n                                                            </div>\n                                                            <div className=\"media col-8 align-items-center\">\n                                                                <div className=\"media-body flex-truncate ml-2\">\n                                                                    <div className={`line-height-1 text-truncate ${isDarkMode ? 'topics_light' : 'topics_dark'}`}>\n                                                                        <Moment fromNow>{item.updated_at}</Moment>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <hr className=\"m-0\" />\n                                        </>\n                                    ))\n                                ) : (\n                                    <p>No Topic Post found..!</p>\n                                )}\n                            </>\n                        )}\n                    </div>\n                </div>\n            </section>\n            <Signin show={open} closePop={handleCloseModal} />\n\n            <Footer />\n        </>\n    );\n};\n\nexport default ForumHome;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { userProfile } from \"../features/userSlice\";\nimport Footer from \"../components/Footer\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport { GET_SINGLE_TOPIC, POST_COMMENT_TOPIC } from \"../components/Api\";\nimport { ThemeContext } from \"../ThemeContaxt/ThemeContaxt\";\nimport Signin from \"../components/modals/signin\";\n\nconst SingleTopicHome = () => {\n    const [allcomment, setComment] = useState([]);\n    const [description, setDescription] = useState(\"\");\n    const { forumIdHome = \"\" } = useParams();\n    const [loader, setLoader] = useState(false);\n    const [commentLoader, setCommentLoader] = useState(false);\n    const userData = useSelector(userProfile).user.profile; //Redux user data\n    const [open, setOpen] = useState(false);\n\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    // handle to close the modal\n    const handleCloseModal = () => {\n        setOpen(false);\n    };\n\n    //Get courses on page load\n    const postComment = async (e) => {\n        if (description == \"\" || description == null) {\n            toast.error(\"Please enter your comment\");\n            return false;\n        }\n        const bodyParameters = {\n            topic_id: forumIdHome,\n            user_id: userData.id,\n            comment: description,\n        };\n        try {\n            setLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(POST_COMMENT_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                setLoader(false);\n                toast.success(\"posted successfully\");\n                setDescription(\"\");\n                getUserComment();\n            }\n        } catch (err) {\n            setLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    //Get courses on page load\n    const getUserComment = async () => {\n        try {\n            const bodyParameters = {\n                id: forumIdHome,\n            };\n            setCommentLoader(true);\n            const {\n                data: { data, status },\n            } = await axios.post(GET_SINGLE_TOPIC, bodyParameters, config);\n            if (status == 200) {\n                setCommentLoader(false);\n                setComment(data);\n            }\n        } catch (err) {\n            setCommentLoader(false);\n            toast.error(\"Something went wrong please try again..!\");\n        }\n    };\n\n    const stringConvert = (string) => {\n        return string.charAt(0).toUpperCase();\n    };\n\n    useEffect(() => {\n        if (forumIdHome) {\n            getUserComment();\n        }\n    }, [forumIdHome]);\n\n    const { isDarkMode } = useContext(ThemeContext);\n\n    return (\n        <>\n            <Header />\n            <section className=\"blog-page-main block-element\">\n                <div className=\"container mt-100 main_forum_container\">\n\n                    <div className={`card mb-3 ${isDarkMode ? 'singleForum_dark' : 'singleForum_light'} `}>\n                        <div className=\"card-header pl-0 pr-0\">\n                            <div className=\"row no-gutters w-100 align-items-center\">\n                                <div className={`col ml-3 font-weight-bold ${isDarkMode ? \"color_light\" : \"color_dark\"}`}>\n                                    {allcomment.topic_name}\n                                </div>\n                                <div className=\"col-12 text-muted\"></div>\n                            </div>\n                        </div>\n\n                        <div className=\"card-body py-3 main_forum_container_body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col-12\">\n                                    <p className={`${isDarkMode ? \"color_light\" : \"color_dark\"}`}>{allcomment.topic_description}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {commentLoader && (\n                    <div className=\"spinner_div\">\n                        <Spinner />\n                    </div>\n                )}\n\n                <div className=\"container mt-5\">\n                    <div className=\"row d-flex justify-content-center\">\n                        <div className=\"col-md-12\">\n                            <div className={`shadow p-3 bg-white rounded ${isDarkMode ? 'singleForum_dark' : 'singleForum_light'}`}>\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <div className=\"d-flex flex-row align-items-center\">\n                                        {\" \"}\n                                        <span className={`mr-1 fs-14 ${isDarkMode ? \"color_light\" : \"color_dark\"}`}>All comments</span>{\" \"}\n                                    </div>\n                                </div>\n\n                                {allcomment.comments?.length > 0 ? (\n                                    allcomment.comments?.map((item, index) => (\n                                        <div className=\"d-flex flex-row mt-4\" key={index}>\n                                            {\" \"}\n                                            <span className=\"person\">\n                                                {stringConvert(item.first_name)}\n                                            </span>\n                                            <div className=\"ml-2 w-100\">\n                                                <div className=\"d-flex justify-content-between align-items-center\">\n                                                    <div className=\"d-flex flex-row align-items-center\">\n                                                        {\" \"}\n                                                        <span className=\"font-weight-bold name\">\n                                                            {item.first_name} <i className=\"fa fa-heart\" />\n                                                        </span>{\" \"}\n                                                        <span className=\"dots\" />{\" \"}\n                                                        <small className=\"text-muted time-text\">\n                                                            <Moment fromNow>{item.created_at}</Moment>{\" \"}\n                                                        </small>{\" \"}\n                                                    </div>\n                                                </div>\n                                                <p className=\"user-comment-text text-justify\">\n                                                    {item.comment}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    ))\n                                ) : (\n                                    <p className={`${isDarkMode ? \"color_light\" : \"color_dark\"}`}>No Comment Posted yet..!</p>\n                                )}\n\n                                <div className=\"mt-3 d-flex flex-row\">\n                                    <div className=\"w-100 ml-2 comment-area\">\n                                        <textarea\n                                            placeholder=\"Message\"\n                                            className=\"form-control\"\n                                            // value={description}\n                                            // onChange={(e) => setDescription(e.target.value)}\n                                        />\n                                        <Link\n                                            className=\"btn btn-secondary btn-block mt-2 post-btn\"\n                                           onClick={() => setOpen(true)}\n                                        >\n                                            Post\n                                        </Link>{\" \"}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <Signin show={open} closePop={handleCloseModal} />\n\n            <Footer />\n            {/* < ToastContainer /> */}\n        </>\n    );\n};\n\nexport default SingleTopicHome;\n","import React, { useEffect, useState } from 'react'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\n\r\nexport default function Disclaimer () {\r\n    const [disclaimer, setDisclaimer] = useState([]);\r\n\r\n    const title = disclaimer?.data?.title\r\n    const subTitle = disclaimer?.data?.sub_title\r\n    const description = disclaimer?.data?.description\r\n\r\n  useEffect(() => {\r\n    fetch('https://examtice.com/backend/api/disclaimer')\r\n      .then(res => res.json())\r\n      .then(data => setDisclaimer(data))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <section className=\"terms-and-condition\">\r\n                \r\n                <div className=\"container\">\r\n                    <h2 className=\"page-heading\">{title}</h2>\r\n                    {/* <h2 className=\"page-heading\">General Terms & Conditions</h2> */}\r\n                    {subTitle && <p>{subTitle}</p>}\r\n                    {description && (\r\n                        <div className=\"termsAndCondition\">\r\n                            <div dangerouslySetInnerHTML={{ __html: description }}></div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n\r\n      {/* <section className='mb-5'>\r\n        <div className='container'>\r\n          <h2 className='page-heading'>Disclaimer</h2>\r\n          <p>\r\n            Examitce.com provides educational materials and exam preparation\r\n            resources to enhance user convenience and access to information\r\n            based on available data. While we strive for accuracy, Examitce.com\r\n            does not take responsibility for unintended errors or alternative\r\n            interpretations of the information provided on this platform. We\r\n            encourage users to verify details directly from official sources,\r\n            including the official websites of relevant schools, organizations,\r\n            or government bodies, to obtain the most accurate and complete\r\n            information.\r\n          </p>\r\n          <h6>No Government Affiliation or Authorization</h6>\r\n          <p>\r\n            Examitce.com is a private educational platform and is not affiliated\r\n            with, endorsed by, or authorized by any government entity to provide\r\n            official government services. Our resources, including past\r\n            questions and preparatory materials, are for personal educational\r\n            use only and should not be interpreted as government-issued\r\n            materials or services. Users seeking official information should\r\n            consult recognized government portals and authorized sources.\r\n          </p>\r\n\r\n          <h6>Intellectual Property and Trademark Notice</h6>\r\n          <p>\r\n            All names, acronyms, and trademarks displayed on Examitce.com and\r\n            our related apps are the property of their respective owners. These\r\n            names and trademarks are used solely for informational purposes and\r\n            do not imply any association, sponsorship, or endorsement by their\r\n            respective owners.\r\n          </p>\r\n          <p>\r\n            By using Examitce.com and our mobile apps, you acknowledge and agree\r\n            to this disclaimer.\r\n          </p>\r\n        </div>\r\n      </section> */}\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TermsAndUse = props => {\r\n  const [termsAndConditions, setTermsAndConditions] = useState([])\r\n\r\n  const title = termsAndConditions?.data?.title\r\n  const subTitle = termsAndConditions?.data?.sub_title\r\n  const description = termsAndConditions?.data?.description\r\n\r\n  // console.log(subTitle)\r\n\r\n  useEffect(() => {\r\n    fetch('https://examtice.com/backend/api/terms-of-use')\r\n      .then(res => res.json())\r\n      .then(data => setTermsAndConditions(data))\r\n  }, [])\r\n\r\n  //   console.log(termsAndConditions)\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className='terms-and-condition'>\r\n        <div className='container'>\r\n          <h2 className='page-heading'>{title}</h2>\r\n          {subTitle && <p>{subTitle}</p>}\r\n          {description && (\r\n            <div className='termsAndCondition'>\r\n              <div dangerouslySetInnerHTML={{ __html: description }}></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TermsAndUse;\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport history from \"./history\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n// Importing all pages from index.js\nimport {\n    About,\n    Eshop,\n    Home,\n    Affiliate,\n    Learningmanagementsystem,\n    Freetest,\n    Package,\n    Report,\n    Dashboard,\n    MyProfile,\n    MyReports,\n    NotFound,\n    Verify,\n    Callback,\n    Subscription,\n    SubscriptionDetail,\n    Blog,\n    Forum,\n    Topic,\n    SingleTopic,\n    ResumeSavedTest,\n    AffiliateDashboard,\n    Withdraw,\n    SubscribeUsers,\n    Transaction,\n    ContactUs,\n    TermsAndCondition,\n    AffiliateTermsAndCondition,\n} from \"./pages\";\nimport { userAuth } from \"./features/userSlice\";\nimport ProtectedRoute from \"./protected.route\";\nimport AffiliateRoute from \"./affiliateRoute\";\nimport BlogSingle from \"./pages/BlogSingle\";\nimport Faq from \"./pages/Faq\";\nimport SearchandFeedback from \"./pages/user/SearchandFeedback\";\nimport Supportlist from \"./pages/user/Supportlist\";\nimport DownloadApp from \"./pages/user/DownloadApp\";\nimport Resources from \"./pages/user/Resources\";\nimport TicketDetails from \"./pages/user/TicketDetails\";\nimport CreateTicket from \"./pages/user/CreateTicket\";\n\nimport LmsSupportlist from \"./pages/Learningmanagement/Supportlist\";\nimport LmsMyProfile from \"./pages/Learningmanagement/MyProfile\";\nimport LmsTicketDetails from \"./pages/Learningmanagement/TicketDetails\";\nimport LmsCreateTicket from \"./pages/Learningmanagement/CreateTicket\";\n\nimport TeacherSubscription from \"./pages/user/TeacherSubscription\";\nimport SignIn from \"./pages/Affiliate/SignIn\";\nimport LmsSignIn from \"./pages/Learningmanagement/SignIn\";\nimport LearningmanagementDashboard from \"./pages/Learningmanagement/Dashboard\";\nimport lmseamxcreate from \"./pages/Learningmanagement/Createtest\";\nimport LmsSubscription from \"./pages/Learningmanagement/Subscription\";\nimport Lmsuserexam from \"./pages/Learningmanagement/ExamList\";\nimport Lmsstudentexam from \"./pages/Learningmanagement/StdentExamList\";\nimport Lmsuserexamdetails from \"./pages/Learningmanagement/Report\";\nimport LmsStudentReport from \"./pages/Learningmanagement/StudentReport\";\nimport UserLmsStudentReport from \"./pages/user/StudentReport\";\nimport Lmsstudentsreports from \"./pages/Learningmanagement/Reports\";\nimport Lmsexamresult from \"./pages/Learningmanagement/ExamReslut\";\nimport LmsExam from \"./pages/Learningmanagement/LmsExam\";\nimport LmsSubscribeUsers from \"./pages/Learningmanagement/SubscribeUsers\";\nimport LmsTeacherSubscribeUsers from \"./pages/user/SubscribeTeacher\";\nimport LmsBlockUsers from \"./pages/Learningmanagement/BlockUsers\";\nimport LmsBlockteacher from \"./pages/user/BlockTeacher\";\nimport LmsCancelrequest from \"./pages/user/CancleRequest\";\nimport LmsCancelrequestteacher from \"./pages/Learningmanagement/CancleRequest\";\nimport LmsAcceptrequest from \"./pages/user/AcceptRequest\";\nimport LmsAcceptrequestteacher from \"./pages/Learningmanagement/AcceptRequest\";\n\nimport Cookies from \"js-cookie\";\nimport RefferUser from \"./pages/Affiliate/RefferUser\";\nimport MyTopic from \"./pages/MyTopic\";\nimport ForumHome from \"./pages/ForumHome\";\nimport SingleTopicHome from \"./pages/SingleTopiceHome\";\nimport PrivacyPolicy from \"./pages/PrivacyPolicy\";\nimport Disclaimer from \"./pages/Disclaimer\";\nimport TermsAndUse from \"./pages/TermsAndUse\";\n\nexport default function Routes() {\n    const isAuth = useSelector(userAuth); //using redux useSelector here\n    var role = !!Cookies.get(\"user_data\") && JSON.parse(Cookies.get(\"user_data\"));  \n    var affiliateRole = !!role && role.affiliate_role;\n\n    return (\n        <Router history={history}>\n            <Switch>\n                <Route exact path=\"/\">\n                    {isAuth && role.affiliate_role == 7 || role.affiliate_role == 8 ? (\n                        <>\n                            <Redirect to=\"/lms/dashboard\" />\n                        </>\n\n                    ) : (\n                        <>\n                            {isAuth && role.affiliate_role == 5 || role.affiliate_role == 6 || role.affiliate_role == '' ? (\n                                <>\n                                    <Redirect to=\"/user/dashboard\" />\n                                </>\n                            ) : (\n                                <>\n                                    <Home />\n                                </>\n                            )}\n                        </>\n                    )}\n                </Route>\n                <Route exact path=\"/forum\" component={Forum} />\n                <Route exact path=\"/forum/:forumId\" component={SingleTopic} />\n                <Route exact path=\"/forum-home/:forumIdHome\" component={SingleTopicHome} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact-us\" component={ContactUs} />\n                <Route exact path=\"/terms-condition\" component={TermsAndCondition} />\n                <Route exact path=\"/terms-of-use\" component={TermsAndUse} />\n                <Route exact path=\"/privacy-policy\" component={AffiliateTermsAndCondition} />\n                <Route exact path=\"/disclaimer\" component={Disclaimer} />\n                {/* <Route\n                    exact\n                    path=\"/affiliate-terms-condition\"\n                    component={AffiliateTermsAndCondition}\n                /> */}\n                <Route exact path=\"/blog\" component={Blog} />\n                <Route exact path=\"/faq\" component={Faq} />\n                <Route exact path=\"/blog/:slug\" component={BlogSingle} />\n                <Route exact path=\"/eshop\" component={Eshop} />\n                <Route exact path=\"/forum-home\" component={ForumHome} />\n                <Route exact path=\"/affiliate\" component={Affiliate} />\n                <Route exact path=\"/free-test\" component={Freetest} />\n                <Route exact path=\"/free-test/report\" component={Report} />\n                <Route exact path=\"/user/verify/:id/:token\" component={Verify} />\n\n                {/* Affiliate */}\n                <Route exact path=\"/affiliate/signin\" component={SignIn} />\n\n                {/* Learningmaagement */}\n                <Route exact path=\"/lms/signin\" component={LmsSignIn} />\n                <Route exact path=\"/lms\" component={Learningmanagementsystem} />\n                <ProtectedRoute exact path=\"/lms/dashboard\" component={LearningmanagementDashboard} />\n                <ProtectedRoute exact path=\"/lms/create-test\" component={lmseamxcreate} />\n\n                <ProtectedRoute exact path=\"/topic-create\" component={Topic} />\n                <ProtectedRoute exact path=\"/my-topic\" component={MyTopic} />\n                <ProtectedRoute\n                    exact\n                    path=\"/user/resume-test/:userTestId\"\n                    component={ResumeSavedTest}\n                />\n\n                <ProtectedRoute exact path=\"/user/dashboard\" component={Dashboard} />\n                <Route exact path=\"/user/buy-package/:id\" component={Package} />\n                <ProtectedRoute exact path=\"/user/free-test\" component={Freetest} />\n\n                <ProtectedRoute\n                    exact\n                    path=\"/user/attempt-free-test/:testId\"\n                    component={Freetest}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/user/lms-exam/:lmsExamtId\"\n                    component={LmsExam}\n                />\n                <ProtectedRoute exact path=\"/lms/my-account\" component={LmsMyProfile} />\n                <ProtectedRoute exact path=\"/user/my-account\" component={MyProfile} />\n                <ProtectedRoute exact path=\"/user/search-feedback\" component={SearchandFeedback} />\n                <ProtectedRoute exact path=\"/user/support\" component={Supportlist} />\n                <ProtectedRoute exact path=\"/user/downloadApp\" component={DownloadApp} />\n                <ProtectedRoute exact path=\"/user/resources\" component={Resources} />\n                <ProtectedRoute exact path=\"/user/supportdetails/:ticketId\" component={TicketDetails} />\n                <ProtectedRoute exact path=\"/user/addticket\" component={CreateTicket} />\n\n                <ProtectedRoute exact path=\"/lms/support\" component={LmsSupportlist} />\n                <ProtectedRoute exact path=\"/lms/supportdetails/:ticketId\" component={LmsTicketDetails} />\n                <ProtectedRoute exact path=\"/lms/addticket\" component={LmsCreateTicket} />\n\n                <ProtectedRoute\n                    exact\n                    path=\"/user/free-test/report\"\n                    component={Report}\n                />\n\n                {/* payment verified */}\n                <ProtectedRoute exact path=\"/payment_callback\" component={Callback} />\n\n                <ProtectedRoute exact path=\"/user/reports\" component={MyReports} />\n                <ProtectedRoute exact path=\"/user/report/:testId\" component={Report} />\n\n                <ProtectedRoute\n                    exact\n                    path=\"/user/subscription\"\n                    component={Subscription}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/user/subscription/:subscriptionId\"\n                    component={SubscriptionDetail}\n                />\n                {/* Lms routes */}\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/subscription\"\n                    component={LmsSubscription}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/user/teachersubscription\"\n                    component={TeacherSubscription}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/exam\"\n                    component={Lmsuserexam}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/user/lmsexam\"\n                    component={Lmsstudentexam}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/examdetails/:examId\"\n                    component={Lmsuserexamdetails}\n                />\n\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/studentexamlist/:studentsId\"\n                    component={Lmsstudentsreports}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/studentexamdetails/:examId/:studentsId\"\n                    component={LmsStudentReport}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/user/studentexamdetails/:examId/:studentsId\"\n                    component={UserLmsStudentReport}\n                />\n\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/results\"\n                    component={Lmsexamresult}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/subscriptionrequest/:studentId\"\n                    component={LmsSubscribeUsers}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/teachersubscriptionrequest/:teacherId\"\n                    component={LmsTeacherSubscribeUsers}\n                />\n\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/subscriptionblock/:studentId\"\n                    component={LmsBlockUsers}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/subscriptionblockteacher/:teacherId\"\n                    component={LmsBlockteacher}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/request-cancle/:teacherId\"\n                    component={LmsCancelrequest}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/student-request-cancle/:studentId\"\n                    component={LmsCancelrequestteacher}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/request-accept/:teacherId\"\n                    component={LmsAcceptrequest}\n                />\n                <ProtectedRoute\n                    exact\n                    path=\"/lms/student-request-accept/:studentId\"\n                    component={LmsAcceptrequestteacher}\n                />\n\n\n                {/* Affiliate routes */}\n                <AffiliateRoute\n                    exact\n                    path=\"/affiliate/dashboard\"\n                    component={AffiliateDashboard}\n                    isAffiliate={affiliateRole}\n                />\n                <AffiliateRoute\n                    exact\n                    path=\"/affiliate/withdraw\"\n                    component={Withdraw}\n                    isAffiliate={affiliateRole}\n                />\n                <AffiliateRoute\n                    exact\n                    path=\"/affiliate/subscribe_users\"\n                    component={SubscribeUsers}\n                    isAffiliate={affiliateRole}\n                />\n                <AffiliateRoute\n                    exact\n                    path=\"/affiliate/transaction\"\n                    component={Transaction}\n                    isAffiliate={affiliateRole}\n                />\n                <AffiliateRoute\n                    exact\n                    path=\"/affiliate/refferUser\"\n                    component={RefferUser}\n                    isAffiliate={affiliateRole}\n                />\n\n\n                <Route exact path=\"*\" component={NotFound} status={404} />\n            </Switch>\n        </Router>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom';\nimport Routes from './Routes';\nimport DarkAndLightMode from './DarkAndLightMode/DarkAndLightMode';\nimport { useEffect } from 'react';\n\nfunction App(props) {\n\n  // const disableContextMenu = (e) => {\n  //   e.preventDefault();\n  // };\n\n  // const disableCopyShortcut = (e) => {\n  //   if (e.ctrlKey && (e.key === 'c' || e.key === 'C')) {\n  //     e.preventDefault();\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   document.addEventListener('contextmenu', disableContextMenu);\n  //   document.addEventListener('keydown', disableCopyShortcut);\n\n  //   return () => {\n  //     document.removeEventListener('contextmenu', disableContextMenu);\n  //     document.removeEventListener('keydown', disableCopyShortcut);\n  //   };\n  // }, []);\n\n  return <>\n    {/* <DarkAndLightMode></DarkAndLightMode> */}\n    <Routes />\n  </>\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport default configureStore({\n    reducer : {\n        user : userReducer,\n    },\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './reduxStore/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ThemeProvider } from './ThemeContaxt/ThemeContaxt';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ThemeProvider>\n        <App />\n        <ToastContainer\n          newestOnTo={true}\n          autoClose={3000}\n          closeButton={false}\n          newestOnTop={true}\n          className=\"toast-container\"\n          hideProgressBar={true}\n        />\n      </ThemeProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}